{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/docs/components/JWT.js\";\nimport React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nconst setupBaseUrlStr = `const dev = {\n  API_ENDPOINT_URL: 'https://api.dev-example.com'\n};\n\nconst prod = {\n  API_ENDPOINT_URL: 'https://api.prod-example.com'\n};\n\nconst test = {\n  API_ENDPOINT_URL: 'https://api.test-example.com'\n};`;\nconst setupService = `import fetch from 'auth/FetchInterceptor'\n\nconst exampleService = {}\n\nexampleService.getPost = function (params) {\n  return fetch({\n    url: '/posts/1',\n    method: 'get',\n    params\n  })\n}\n\nexampleService.setPost = function (data) {\n  return fetch({\n    url: '/posts',\n    method: 'post',\n    data: data\n  })\n}\n\nexport default exampleService`;\nconst skipChecking = `exampleService.fetchData = function (data) {\n\treturn fetch({\n\t\turl: '/posts',\n\t\tmethod: 'post',\n\t\theaders: {\n      'public-request': 'true'\n    },\n\t\tdata: data\n\t})\n}`;\nconst usageStr = `import exampleService from 'services/exampleService'\nconst callApi = () => {\n\texampleService.setPost(JSON.stringify({\n\t\ttitle: 'foo',\n\t\tbody: 'bar',\n\t\tuserId: 1\n\t})).then(resp => console.log('resp', resp))\n}`;\n\nconst jwt = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"JWT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Emilus provide a set of code to let you work with JWT authentication & API with the server application, integration process is described below.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Setup Base URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Setup your API endpoint URL at \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/configs/EnvironmentConfig.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 39\n        }, this), \" depends on your project environment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: setupBaseUrlStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Interceptor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"We provided a request & response interceptor built by\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://github.com/axios/axios\",\n          children: \" axios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), \", which able to found in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/auth/FetchInterceptor.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), \". With this interceptor, every API call from client side will contain access token inside requeest header. You can customize your request config or error handling in this file.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Services\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"In order to facilitate manage and maintain, we placed all API integrations related files in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/services/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 35\n        }, this), \" folder. Linked up with interceptor above, you can setup your services as below:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: setupService\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"You can add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"public-request\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }, this), \" to header to skip JWT checking.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: skipChecking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Now you can call services in component or sagas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: usageStr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n\nexport default jwt;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/docs/components/JWT.js"],"names":["React","Prism","SyntaxHighlighter","atomDark","setupBaseUrlStr","setupService","skipChecking","usageStr","jwt"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\n\r\nconst setupBaseUrlStr = `const dev = {\r\n  API_ENDPOINT_URL: 'https://api.dev-example.com'\r\n};\r\n\r\nconst prod = {\r\n  API_ENDPOINT_URL: 'https://api.prod-example.com'\r\n};\r\n\r\nconst test = {\r\n  API_ENDPOINT_URL: 'https://api.test-example.com'\r\n};`\r\n\r\nconst setupService = `import fetch from 'auth/FetchInterceptor'\r\n\r\nconst exampleService = {}\r\n\r\nexampleService.getPost = function (params) {\r\n  return fetch({\r\n    url: '/posts/1',\r\n    method: 'get',\r\n    params\r\n  })\r\n}\r\n\r\nexampleService.setPost = function (data) {\r\n  return fetch({\r\n    url: '/posts',\r\n    method: 'post',\r\n    data: data\r\n  })\r\n}\r\n\r\nexport default exampleService`\r\n\r\nconst skipChecking = `exampleService.fetchData = function (data) {\r\n\treturn fetch({\r\n\t\turl: '/posts',\r\n\t\tmethod: 'post',\r\n\t\theaders: {\r\n      'public-request': 'true'\r\n    },\r\n\t\tdata: data\r\n\t})\r\n}`\r\n\r\nconst usageStr = `import exampleService from 'services/exampleService'\r\nconst callApi = () => {\r\n\texampleService.setPost(JSON.stringify({\r\n\t\ttitle: 'foo',\r\n\t\tbody: 'bar',\r\n\t\tuserId: 1\r\n\t})).then(resp => console.log('resp', resp))\r\n}`\r\n\r\nconst jwt = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>JWT</h2>\r\n\t\t\t<p>Emilus provide a set of code to let you work with JWT authentication & API with the server application, integration process is described below.</p>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<h4>Setup Base URL</h4>\r\n\t\t\t\t<p>Setup your API endpoint URL at <code>src/configs/EnvironmentConfig.js</code> depends on your project environment.</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{setupBaseUrlStr}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<h4>Interceptor</h4>\r\n\t\t\t\t<p>We provided a request & response interceptor built by \r\n\t\t\t\t\t<a href=\"https://github.com/axios/axios\"> axios</a>, \r\n\t\t\t\t\twhich able to found in <code>src/auth/FetchInterceptor.js</code>.\r\n\t\t\t\t\tWith this interceptor, every API call from client side will contain access token inside requeest header. You can customize your request config or error handling in this file. \r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<h4>Services</h4>\r\n\t\t\t\t<p>In order to facilitate manage and maintain, we placed all API \r\n\t\t\t\tintegrations related files in <code>src/services/</code> folder. Linked up with interceptor above, you can setup your services as below:</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{setupService}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<p className=\"mt-3\">You can add <code>public-request</code> to header to skip JWT checking.</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{skipChecking}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-4\">\r\n\t\t\t\t<h4>Usage</h4>\r\n\t\t\t\t<p>Now you can call services in component or sagas</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{usageStr}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default jwt\r\n"]},"metadata":{},"sourceType":"module"}