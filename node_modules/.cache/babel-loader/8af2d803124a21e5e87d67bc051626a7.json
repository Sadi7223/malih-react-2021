{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/form/CustomizedFormControls.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Form, Input, Select, Button } from 'antd';\nconst {\n  Option\n} = Select;\n\nconst PriceInput = ({\n  value = {},\n  onChange\n}) => {\n  _s();\n\n  const [number, setNumber] = useState(0);\n  const [currency, setCurrency] = useState('rmb');\n\n  const triggerChange = changedValue => {\n    if (onChange) {\n      onChange({\n        number,\n        currency,\n        ...value,\n        ...changedValue\n      });\n    }\n  };\n\n  const onNumberChange = e => {\n    const newNumber = parseInt(e.target.value || 0, 10);\n\n    if (Number.isNaN(number)) {\n      return;\n    }\n\n    if (!('number' in value)) {\n      setNumber(newNumber);\n    }\n\n    triggerChange({\n      number: newNumber\n    });\n  };\n\n  const onCurrencyChange = newCurrency => {\n    if (!('currency' in value)) {\n      setCurrency(newCurrency);\n    }\n\n    triggerChange({\n      currency: newCurrency\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: value.number || number,\n      onChange: onNumberChange,\n      style: {\n        width: 100,\n        marginRight: 8\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      value: value.currency || currency,\n      style: {\n        width: 80\n      },\n      onChange: onCurrencyChange,\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"rmb\",\n        children: \"RMB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"dollar\",\n        children: \"Dollar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PriceInput, \"jai7kXIu40aduisP49YC2evIGPE=\");\n\n_c = PriceInput;\n\nconst Demo = () => {\n  const onFinish = values => {\n    console.log('Received values from form: ', values);\n  };\n\n  const checkPrice = (rule, value) => {\n    if (value.number > 0) {\n      return Promise.resolve();\n    }\n\n    return Promise.reject('Price must be greater than zero!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"customized_form_controls\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    initialValues: {\n      price: {\n        number: 0,\n        currency: 'rmb'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"price\",\n      label: \"Price\",\n      rules: [{\n        validator: checkPrice\n      }],\n      children: /*#__PURE__*/_jsxDEV(PriceInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Demo;\nexport class CustomizedFormControls extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default CustomizedFormControls;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PriceInput\");\n$RefreshReg$(_c2, \"Demo\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/form/CustomizedFormControls.js"],"names":["React","Component","useState","Form","Input","Select","Button","Option","PriceInput","value","onChange","number","setNumber","currency","setCurrency","triggerChange","changedValue","onNumberChange","e","newNumber","parseInt","target","Number","isNaN","onCurrencyChange","newCurrency","width","marginRight","Demo","onFinish","values","console","log","checkPrice","rule","Promise","resolve","reject","price","validator","CustomizedFormControls","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport { Form, Input, Select, Button } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst PriceInput = ({ value = {}, onChange }) => {\r\n  const [number, setNumber] = useState(0);\r\n  const [currency, setCurrency] = useState('rmb');\r\n\r\n  const triggerChange = changedValue => {\r\n    if (onChange) {\r\n      onChange({\r\n        number,\r\n        currency,\r\n        ...value,\r\n        ...changedValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  const onNumberChange = e => {\r\n    const newNumber = parseInt(e.target.value || 0, 10);\r\n\r\n    if (Number.isNaN(number)) {\r\n      return;\r\n    }\r\n\r\n    if (!('number' in value)) {\r\n      setNumber(newNumber);\r\n    }\r\n\r\n    triggerChange({\r\n      number: newNumber,\r\n    });\r\n  };\r\n\r\n  const onCurrencyChange = newCurrency => {\r\n    if (!('currency' in value)) {\r\n      setCurrency(newCurrency);\r\n    }\r\n\r\n    triggerChange({\r\n      currency: newCurrency,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Input\r\n        type=\"text\"\r\n        value={value.number || number}\r\n        onChange={onNumberChange}\r\n        style={{\r\n          width: 100,\r\n          marginRight: 8,\r\n        }}\r\n      />\r\n      <Select\r\n        value={value.currency || currency}\r\n        style={{\r\n          width: 80,\r\n        }}\r\n        onChange={onCurrencyChange}\r\n      >\r\n        <Option value=\"rmb\">RMB</Option>\r\n        <Option value=\"dollar\">Dollar</Option>\r\n      </Select>\r\n    </span>\r\n  );\r\n};\r\n\r\nconst Demo = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values from form: ', values);\r\n  };\r\n\r\n  const checkPrice = (rule, value) => {\r\n    if (value.number > 0) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    return Promise.reject('Price must be greater than zero!');\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"customized_form_controls\"\r\n      layout=\"inline\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        price: {\r\n          number: 0,\r\n          currency: 'rmb',\r\n        },\r\n      }}\r\n    >\r\n      <Form.Item\r\n        name=\"price\"\r\n        label=\"Price\"\r\n        rules={[\r\n          {\r\n            validator: checkPrice,\r\n          },\r\n        ]}\r\n      >\r\n        <PriceInput />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class CustomizedFormControls extends Component {\r\n  render() {\r\n    return (\r\n      <Demo />\r\n    )\r\n  }\r\n}\r\n\r\nexport default CustomizedFormControls\r\n"]},"metadata":{},"sourceType":"module"}