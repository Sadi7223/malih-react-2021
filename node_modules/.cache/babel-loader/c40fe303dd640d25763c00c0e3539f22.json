{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tabs/CustomTabBarNode.js\";\nimport React, { Component } from \"react\";\nimport { Tabs } from \"antd\";\nimport { DndProvider, DragSource, DropTarget } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nconst {\n  TabPane\n} = Tabs; // Drag & Drop node\n\nclass TabNode extends React.Component {\n  render() {\n    const {\n      connectDragSource,\n      connectDropTarget,\n      children\n    } = this.props;\n    return connectDragSource(connectDropTarget(children));\n  }\n\n}\n\nconst cardTarget = {\n  drop(props, monitor) {\n    const dragKey = monitor.getItem().index;\n    const hoverKey = props.index;\n\n    if (dragKey === hoverKey) {\n      return;\n    }\n\n    props.moveTabNode(dragKey, hoverKey);\n    monitor.getItem().index = hoverKey;\n  }\n\n};\nconst cardSource = {\n  beginDrag(props) {\n    return {\n      id: props.id,\n      index: props.index\n    };\n  }\n\n};\nconst WrapTabNode = DropTarget(\"DND_NODE\", cardTarget, connect => ({\n  connectDropTarget: connect.dropTarget()\n}))(DragSource(\"DND_NODE\", cardSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))(TabNode));\n\nclass DraggableTabs extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      order: []\n    };\n\n    this.moveTabNode = (dragKey, hoverKey) => {\n      const newOrder = this.state.order.slice();\n      const {\n        children\n      } = this.props;\n      React.Children.forEach(children, c => {\n        if (newOrder.indexOf(c.key) === -1) {\n          newOrder.push(c.key);\n        }\n      });\n      const dragIndex = newOrder.indexOf(dragKey);\n      const hoverIndex = newOrder.indexOf(hoverKey);\n      newOrder.splice(dragIndex, 1);\n      newOrder.splice(hoverIndex, 0, dragKey);\n      this.setState({\n        order: newOrder\n      });\n    };\n\n    this.renderTabBar = (props, DefaultTabBar) => /*#__PURE__*/_jsxDEV(DefaultTabBar, { ...props,\n      children: node => /*#__PURE__*/_jsxDEV(WrapTabNode, {\n        index: node.key,\n        moveTabNode: this.moveTabNode,\n        children: node\n      }, node.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    const {\n      order\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const tabs = [];\n    React.Children.forEach(children, c => {\n      tabs.push(c);\n    });\n    const orderTabs = tabs.slice().sort((a, b) => {\n      const orderA = order.indexOf(a.key);\n      const orderB = order.indexOf(b.key);\n\n      if (orderA !== -1 && orderB !== -1) {\n        return orderA - orderB;\n      }\n\n      if (orderA !== -1) {\n        return -1;\n      }\n\n      if (orderB !== -1) {\n        return 1;\n      }\n\n      const ia = tabs.indexOf(a);\n      const ib = tabs.indexOf(b);\n      return ia - ib;\n    });\n    return /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        renderTabBar: this.renderTabBar,\n        ...this.props,\n        children: orderTabs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport class CustomTabBarNode extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(DraggableTabs, {\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"tab 1\",\n        children: \"Content of Tab Pane 1\"\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"tab 2\",\n        children: \"Content of Tab Pane 2\"\n      }, \"2\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: \"tab 3\",\n        children: \"Content of Tab Pane 3\"\n      }, \"3\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default CustomTabBarNode;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tabs/CustomTabBarNode.js"],"names":["React","Component","Tabs","DndProvider","DragSource","DropTarget","HTML5Backend","TabPane","TabNode","render","connectDragSource","connectDropTarget","children","props","cardTarget","drop","monitor","dragKey","getItem","index","hoverKey","moveTabNode","cardSource","beginDrag","id","WrapTabNode","connect","dropTarget","dragSource","isDragging","DraggableTabs","state","order","newOrder","slice","Children","forEach","c","indexOf","key","push","dragIndex","hoverIndex","splice","setState","renderTabBar","DefaultTabBar","node","tabs","orderTabs","sort","a","b","orderA","orderB","ia","ib","CustomTabBarNode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport { DndProvider, DragSource, DropTarget } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\n// Drag & Drop node\r\nclass TabNode extends React.Component {\r\n  render() {\r\n    const { connectDragSource, connectDropTarget, children } = this.props;\r\n\r\n    return connectDragSource(connectDropTarget(children));\r\n  }\r\n}\r\n\r\nconst cardTarget = {\r\n  drop(props, monitor) {\r\n    const dragKey = monitor.getItem().index;\r\n    const hoverKey = props.index;\r\n\r\n    if (dragKey === hoverKey) {\r\n      return;\r\n    }\r\n\r\n    props.moveTabNode(dragKey, hoverKey);\r\n    monitor.getItem().index = hoverKey;\r\n  }\r\n};\r\n\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      id: props.id,\r\n      index: props.index\r\n    };\r\n  }\r\n};\r\n\r\nconst WrapTabNode = DropTarget(\"DND_NODE\", cardTarget, connect => ({\r\n  connectDropTarget: connect.dropTarget()\r\n}))(\r\n  DragSource(\"DND_NODE\", cardSource, (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  }))(TabNode)\r\n);\r\n\r\nclass DraggableTabs extends React.Component {\r\n  state = {\r\n    order: []\r\n  };\r\n\r\n  moveTabNode = (dragKey, hoverKey) => {\r\n    const newOrder = this.state.order.slice();\r\n    const { children } = this.props;\r\n\r\n    React.Children.forEach(children, c => {\r\n      if (newOrder.indexOf(c.key) === -1) {\r\n        newOrder.push(c.key);\r\n      }\r\n    });\r\n\r\n    const dragIndex = newOrder.indexOf(dragKey);\r\n    const hoverIndex = newOrder.indexOf(hoverKey);\r\n\r\n    newOrder.splice(dragIndex, 1);\r\n    newOrder.splice(hoverIndex, 0, dragKey);\r\n\r\n    this.setState({\r\n      order: newOrder\r\n    });\r\n  };\r\n\r\n  renderTabBar = (props, DefaultTabBar) => (\r\n    <DefaultTabBar {...props}>\r\n      {node => (\r\n        <WrapTabNode\r\n          key={node.key}\r\n          index={node.key}\r\n          moveTabNode={this.moveTabNode}\r\n        >\r\n          {node}\r\n        </WrapTabNode>\r\n      )}\r\n    </DefaultTabBar>\r\n  );\r\n\r\n  render() {\r\n    const { order } = this.state;\r\n    const { children } = this.props;\r\n\r\n    const tabs = [];\r\n    React.Children.forEach(children, c => {\r\n      tabs.push(c);\r\n    });\r\n\r\n    const orderTabs = tabs.slice().sort((a, b) => {\r\n      const orderA = order.indexOf(a.key);\r\n      const orderB = order.indexOf(b.key);\r\n\r\n      if (orderA !== -1 && orderB !== -1) {\r\n        return orderA - orderB;\r\n      }\r\n      if (orderA !== -1) {\r\n        return -1;\r\n      }\r\n      if (orderB !== -1) {\r\n        return 1;\r\n      }\r\n\r\n      const ia = tabs.indexOf(a);\r\n      const ib = tabs.indexOf(b);\r\n\r\n      return ia - ib;\r\n    });\r\n\r\n    return (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <Tabs renderTabBar={this.renderTabBar} {...this.props}>\r\n          {orderTabs}\r\n        </Tabs>\r\n      </DndProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport class CustomTabBarNode extends Component {\r\n  render() {\r\n    return (\r\n      <DraggableTabs>\r\n        <TabPane tab=\"tab 1\" key=\"1\">\r\n          Content of Tab Pane 1\r\n        </TabPane>\r\n        <TabPane tab=\"tab 2\" key=\"2\">\r\n          Content of Tab Pane 2\r\n        </TabPane>\r\n        <TabPane tab=\"tab 3\" key=\"3\">\r\n          Content of Tab Pane 3\r\n        </TabPane>\r\n      </DraggableTabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomTabBarNode;\r\n"]},"metadata":{},"sourceType":"module"}