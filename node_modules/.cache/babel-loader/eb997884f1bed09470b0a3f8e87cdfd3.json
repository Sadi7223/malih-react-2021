{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/Ajax.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport reqwest from \"reqwest\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  sorter: true,\n  render: name => `${name.first} ${name.last}`,\n  width: \"20%\"\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    text: \"Female\",\n    value: \"female\"\n  }],\n  width: \"20%\"\n}, {\n  title: \"Email\",\n  dataIndex: \"email\"\n}];\nexport class Ajax extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {},\n      loading: false\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination\n      };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager\n      });\n      this.fetch({\n        results: pagination.pageSize,\n        page: pagination.current,\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        ...filters\n      });\n    };\n\n    this.fetch = (params = {}) => {\n      console.log(\"params:\", params);\n      this.setState({\n        loading: true\n      });\n      reqwest({\n        url: \"https://randomuser.me/api\",\n        method: \"get\",\n        data: {\n          results: 10,\n          ...params\n        },\n        type: \"json\"\n      }).then(data => {\n        const pagination = { ...this.state.pagination\n        }; // Read total count from server\n        // pagination.total = data.totalCount;\n\n        pagination.total = 200;\n        this.setState({\n          loading: false,\n          data: data.results,\n          pagination\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetch();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rowKey: record => record.login.uuid,\n      dataSource: this.state.data,\n      pagination: this.state.pagination,\n      loading: this.state.loading,\n      onChange: this.handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Ajax;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/Ajax.js"],"names":["React","Component","Table","reqwest","columns","title","dataIndex","sorter","render","name","first","last","width","filters","text","value","Ajax","state","data","pagination","loading","handleTableChange","pager","current","setState","fetch","results","pageSize","page","sortField","field","sortOrder","order","params","console","log","url","method","type","then","total","componentDidMount","record","login","uuid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport reqwest from \"reqwest\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    sorter: true,\r\n    render: name => `${name.first} ${name.last}`,\r\n    width: \"20%\"\r\n  },\r\n  {\r\n    title: \"Gender\",\r\n    dataIndex: \"gender\",\r\n    filters: [\r\n      { text: \"Male\", value: \"male\" },\r\n      { text: \"Female\", value: \"female\" }\r\n    ],\r\n    width: \"20%\"\r\n  },\r\n  {\r\n    title: \"Email\",\r\n    dataIndex: \"email\"\r\n  }\r\n];\r\n\r\nexport class Ajax extends Component {\r\n  state = {\r\n    data: [],\r\n    pagination: {},\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetch();\r\n  }\r\n\r\n  handleTableChange = (pagination, filters, sorter) => {\r\n    const pager = { ...this.state.pagination };\r\n    pager.current = pagination.current;\r\n    this.setState({\r\n      pagination: pager\r\n    });\r\n    this.fetch({\r\n      results: pagination.pageSize,\r\n      page: pagination.current,\r\n      sortField: sorter.field,\r\n      sortOrder: sorter.order,\r\n      ...filters\r\n    });\r\n  };\r\n\r\n  fetch = (params = {}) => {\r\n    console.log(\"params:\", params);\r\n    this.setState({ loading: true });\r\n    reqwest({\r\n      url: \"https://randomuser.me/api\",\r\n      method: \"get\",\r\n      data: {\r\n        results: 10,\r\n        ...params\r\n      },\r\n      type: \"json\"\r\n    }).then(data => {\r\n      const pagination = { ...this.state.pagination };\r\n      // Read total count from server\r\n      // pagination.total = data.totalCount;\r\n      pagination.total = 200;\r\n      this.setState({\r\n        loading: false,\r\n        data: data.results,\r\n        pagination\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        columns={columns}\r\n        rowKey={record => record.login.uuid}\r\n        dataSource={this.state.data}\r\n        pagination={this.state.pagination}\r\n        loading={this.state.loading}\r\n        onChange={this.handleTableChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ajax;\r\n"]},"metadata":{},"sourceType":"module"}