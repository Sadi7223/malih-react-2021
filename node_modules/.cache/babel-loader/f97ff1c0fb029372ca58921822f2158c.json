{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/tree/Search.js\";\nimport React, { Component } from \"react\";\nimport { Tree, Input } from \"antd\";\nconst {\n  Search\n} = Input;\nconst x = 3;\nconst y = 2;\nconst z = 1;\nconst gData = [];\n\nconst generateData = (_level, _preKey, _tns) => {\n  const preKey = _preKey || '0';\n  const tns = _tns || gData;\n  const children = [];\n\n  for (let i = 0; i < x; i++) {\n    const key = `${preKey}-${i}`;\n    tns.push({\n      title: key,\n      key\n    });\n\n    if (i < y) {\n      children.push(key);\n    }\n  }\n\n  if (_level < 0) {\n    return tns;\n  }\n\n  const level = _level - 1;\n  children.forEach((key, index) => {\n    tns[index].children = [];\n    return generateData(level, key, tns[index].children);\n  });\n};\n\ngenerateData(z);\nconst dataList = [];\n\nconst generateList = data => {\n  for (let i = 0; i < data.length; i++) {\n    const node = data[i];\n    const {\n      key\n    } = node;\n    dataList.push({\n      key,\n      title: key\n    });\n\n    if (node.children) {\n      generateList(node.children);\n    }\n  }\n};\n\ngenerateList(gData);\n\nconst getParentKey = (key, tree) => {\n  let parentKey;\n\n  for (let i = 0; i < tree.length; i++) {\n    const node = tree[i];\n\n    if (node.children) {\n      if (node.children.some(item => item.key === key)) {\n        parentKey = node.key;\n      } else if (getParentKey(key, node.children)) {\n        parentKey = getParentKey(key, node.children);\n      }\n    }\n  }\n\n  return parentKey;\n};\n\nexport class TreeSearch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      expandedKeys: [],\n      searchValue: '',\n      autoExpandParent: true\n    };\n\n    this.onExpand = expandedKeys => {\n      this.setState({\n        expandedKeys,\n        autoExpandParent: false\n      });\n    };\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      const expandedKeys = dataList.map(item => {\n        if (item.title.indexOf(value) > -1) {\n          return getParentKey(item.key, gData);\n        }\n\n        return null;\n      }).filter((item, i, self) => item && self.indexOf(item) === i);\n      this.setState({\n        expandedKeys,\n        searchValue: value,\n        autoExpandParent: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      searchValue,\n      expandedKeys,\n      autoExpandParent\n    } = this.state;\n\n    const loop = data => data.map(item => {\n      const index = item.title.indexOf(searchValue);\n      const beforeStr = item.title.substr(0, index);\n      const afterStr = item.title.substr(index + searchValue.length);\n      const title = index > -1 ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [beforeStr, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"site-tree-search-value\",\n          children: searchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), afterStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this);\n\n      if (item.children) {\n        return {\n          title,\n          key: item.key,\n          children: loop(item.children)\n        };\n      }\n\n      return {\n        title,\n        key: item.key\n      };\n    });\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        style: {\n          marginBottom: 8\n        },\n        placeholder: \"Search\",\n        onChange: this.onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tree, {\n        onExpand: this.onExpand,\n        expandedKeys: expandedKeys,\n        autoExpandParent: autoExpandParent,\n        treeData: loop(gData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default TreeSearch;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/tree/Search.js"],"names":["React","Component","Tree","Input","Search","x","y","z","gData","generateData","_level","_preKey","_tns","preKey","tns","children","i","key","push","title","level","forEach","index","dataList","generateList","data","length","node","getParentKey","tree","parentKey","some","item","TreeSearch","state","expandedKeys","searchValue","autoExpandParent","onExpand","setState","onChange","e","value","target","map","indexOf","filter","self","render","loop","beforeStr","substr","afterStr","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Tree, Input } from \"antd\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst x = 3;\r\nconst y = 2;\r\nconst z = 1;\r\nconst gData = [];\r\n\r\nconst generateData = (_level, _preKey, _tns) => {\r\n  const preKey = _preKey || '0';\r\n  const tns = _tns || gData;\r\n\r\n  const children = [];\r\n  for (let i = 0; i < x; i++) {\r\n    const key = `${preKey}-${i}`;\r\n    tns.push({ title: key, key });\r\n    if (i < y) {\r\n      children.push(key);\r\n    }\r\n  }\r\n  if (_level < 0) {\r\n    return tns;\r\n  }\r\n  const level = _level - 1;\r\n  children.forEach((key, index) => {\r\n    tns[index].children = [];\r\n    return generateData(level, key, tns[index].children);\r\n  });\r\n};\r\ngenerateData(z);\r\n\r\nconst dataList = [];\r\nconst generateList = data => {\r\n  for (let i = 0; i < data.length; i++) {\r\n    const node = data[i];\r\n    const { key } = node;\r\n    dataList.push({ key, title: key });\r\n    if (node.children) {\r\n      generateList(node.children);\r\n    }\r\n  }\r\n};\r\ngenerateList(gData);\r\n\r\nconst getParentKey = (key, tree) => {\r\n  let parentKey;\r\n  for (let i = 0; i < tree.length; i++) {\r\n    const node = tree[i];\r\n    if (node.children) {\r\n      if (node.children.some(item => item.key === key)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey(key, node.children)) {\r\n        parentKey = getParentKey(key, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nexport class TreeSearch extends Component {\r\n  state = {\r\n    expandedKeys: [],\r\n    searchValue: '',\r\n    autoExpandParent: true,\r\n  };\r\n\r\n  onExpand = expandedKeys => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n\r\n  onChange = e => {\r\n    const { value } = e.target;\r\n    const expandedKeys = dataList\r\n      .map(item => {\r\n        if (item.title.indexOf(value) > -1) {\r\n          return getParentKey(item.key, gData);\r\n        }\r\n        return null;\r\n      })\r\n      .filter((item, i, self) => item && self.indexOf(item) === i);\r\n    this.setState({\r\n      expandedKeys,\r\n      searchValue: value,\r\n      autoExpandParent: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchValue, expandedKeys, autoExpandParent } = this.state;\r\n    const loop = data =>\r\n      data.map(item => {\r\n        const index = item.title.indexOf(searchValue);\r\n        const beforeStr = item.title.substr(0, index);\r\n        const afterStr = item.title.substr(index + searchValue.length);\r\n        const title =\r\n          index > -1 ? (\r\n            <span>\r\n              {beforeStr}\r\n              <span className=\"site-tree-search-value\">{searchValue}</span>\r\n              {afterStr}\r\n            </span>\r\n          ) : (\r\n            <span>{item.title}</span>\r\n          );\r\n        if (item.children) {\r\n          return { title, key: item.key, children: loop(item.children) };\r\n        }\r\n\r\n        return {\r\n          title,\r\n          key: item.key,\r\n        };\r\n      });\r\n    return (\r\n      <div>\r\n        <Search style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={this.onChange} />\r\n        <Tree\r\n          onExpand={this.onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n          treeData={loop(gData)}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeSearch;\r\n"]},"metadata":{},"sourceType":"module"}