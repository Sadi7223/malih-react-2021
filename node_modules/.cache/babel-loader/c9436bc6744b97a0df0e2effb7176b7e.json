{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/shared-components/RegiondataWidget/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Row, Col, Badge, Grid } from 'antd';\nimport PropTypes from 'prop-types';\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from 'react-tooltip';\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json';\nimport utils from 'utils';\nconst {\n  useBreakpoint\n} = Grid;\nconst geoUrl = WorldMap;\nconst mapColor = '#F5F4F6';\nconst hoverPercentage = -10;\n\nconst getHighlightedRegion = (name, data) => {\n  if (data.length > 0 || name) {\n    for (let i = 0; i < data.length; i++) {\n      const elm = data[i];\n\n      if (name === elm.name) {\n        return elm.color;\n      }\n    }\n\n    return mapColor;\n  }\n\n  return mapColor;\n};\n\nconst getRegionHoverColor = (name, data) => {\n  if (data.length > 0 || name) {\n    for (let i = 0; i < data.length; i++) {\n      const elm = data[i];\n\n      if (name === elm.name) {\n        return utils.shadeColor(elm.color, hoverPercentage);\n      }\n    }\n\n    return utils.shadeColor(mapColor, hoverPercentage);\n  }\n\n  return utils.shadeColor(mapColor, hoverPercentage);\n};\n\nconst getRegionValue = (name, data) => {\n  if (data.length > 0 || name) {\n    for (let i = 0; i < data.length; i++) {\n      const elm = data[i];\n\n      if (name === elm.name) {\n        return `${elm.name} â€” ${elm.value}`;\n      }\n    }\n\n    return '';\n  }\n\n  return '';\n};\n\nconst MapChart = ({\n  setTooltipContent,\n  data,\n  mapSource,\n  mapType\n}) => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    style: {\n      transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`\n    },\n    \"data-tip\": \"\",\n    height: 380,\n    projectionConfig: {\n      scale: 145\n    },\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: mapSource,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1;\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          onMouseEnter: () => {\n            setTooltipContent(getRegionValue(geoName, data));\n          },\n          onMouseLeave: () => {\n            setTooltipContent(\"\");\n          },\n          fill: getHighlightedRegion(geoName, data),\n          stroke: \"#D6D6DA\",\n          style: {\n            hover: {\n              fill: getRegionHoverColor(geoName, data),\n              outline: \"none\"\n            }\n          }\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this);\n};\n\n_c = MapChart;\n\nconst Map = props => {\n  _s();\n\n  const {\n    data,\n    mapSource,\n    mapType\n  } = props;\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapChart, {\n      data: data,\n      mapSource: mapSource,\n      mapType: mapType,\n      setTooltipContent: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Map, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c2 = Map;\n\nconst renderDataList = data => {\n  const list = data.map(elm => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center justify-content-between mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        color: elm.color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-gray-light\",\n        children: elm.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-bold text-dark\",\n      children: elm.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this)]\n  }, elm.name, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 3\n  }, this));\n  return list;\n};\n\nexport const RegiondataWidget = props => {\n  _s2();\n\n  const {\n    data,\n    mapSource,\n    mapType,\n    title,\n    content,\n    list\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bodyStyle: {\n      padding: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 7,\n        className: \"border-right\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column p-3 justify-content-between h-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: title && /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"font-weight-bold\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: list ? list : renderDataList(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 24,\n        sm: 24,\n        md: 24,\n        lg: 17,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column justify-content-center\",\n          style: {\n            minHeight: isMobile ? 200 : 428\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 w-100\",\n            children: /*#__PURE__*/_jsxDEV(Map, {\n              data: data,\n              mapSource: mapSource,\n              mapType: mapType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(RegiondataWidget, \"wrTyyaVXVdJHveNiBVLXF/kEkkM=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c3 = RegiondataWidget;\nRegiondataWidget.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array,\n  mapSource: PropTypes.object,\n  mapType: PropTypes.string,\n  content: PropTypes.element,\n  list: PropTypes.element\n};\nRegiondataWidget.defaultProps = {\n  data: [],\n  mapSource: geoUrl,\n  mapType: 'world'\n};\nexport default RegiondataWidget;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"Map\");\n$RefreshReg$(_c3, \"RegiondataWidget\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/shared-components/RegiondataWidget/index.js"],"names":["React","useState","Card","Row","Col","Badge","Grid","PropTypes","ComposableMap","Geographies","Geography","ReactTooltip","WorldMap","utils","useBreakpoint","geoUrl","mapColor","hoverPercentage","getHighlightedRegion","name","data","length","i","elm","color","getRegionHoverColor","shadeColor","getRegionValue","value","MapChart","setTooltipContent","mapSource","mapType","transform","scale","geographies","map","geo","geoName","properties","NAME_1","hover","fill","outline","rsmKey","Map","props","content","setContent","renderDataList","list","RegiondataWidget","title","isMobile","getBreakPoint","includes","padding","minHeight","propTypes","string","array","object","element","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} â€” ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 428 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget"]},"metadata":{},"sourceType":"module"}