{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/apps/mail/MailItem.js\";\nimport React, { Component } from 'react';\nimport { Table, Avatar, Badge, Tooltip, Dropdown, Menu, Input } from 'antd';\nimport { StarOutlined, StarFilled, DeleteOutlined, TagOutlined } from '@ant-design/icons';\nimport MailData from \"assets/data/mail.data.json\";\nimport { labels, getLabelColor } from \"./MailLabels\";\nexport class MailItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mails: [],\n      selectedRowKeys: [],\n      searchValue: ''\n    };\n\n    this.onSelectChange = selectedRowKeys => {\n      this.setState({\n        selectedRowKeys\n      });\n    };\n\n    this.onStarTicked = elm => {\n      const {\n        id,\n        starred\n      } = elm;\n      this.setState({\n        mails: this.state.mails.map(item => {\n          if (item.id === id) {\n            item.starred = !starred;\n            return item;\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.formatBody = body => {\n      return body.replace(/<(?:.|\\n)*?>/gm, ' ');\n    };\n\n    this.loadMail = () => {\n      const data = this.getCurrentCategory();\n      this.setState({\n        mails: data,\n        selectedRowKeys: []\n      });\n    };\n\n    this.massDeleted = selectedKey => {\n      let data = this.state.mails;\n      selectedKey.forEach(num => {\n        data = data.filter(elm => elm.id !== num);\n      });\n      this.setState({\n        mails: data,\n        selectedRowKeys: []\n      });\n    };\n\n    this.massStar = selectedKey => {\n      let data = this.state.mails;\n      selectedKey.forEach(num => {\n        data = data.map(elm => {\n          if (elm.id === num) {\n            elm.starred = true;\n            return elm;\n          } else return elm;\n        });\n      });\n      this.setState({\n        mails: data,\n        selectedRowKeys: []\n      });\n    };\n\n    this.massCategorize = (label, selectedKey) => {\n      let data = this.state.mails;\n      selectedKey.forEach(num => {\n        data = data.map(elm => {\n          if (elm.id === num) {\n            elm.label = label;\n            return elm;\n          } else return elm;\n        });\n      });\n      this.setState({\n        mails: data,\n        selectedRowKeys: []\n      });\n    };\n\n    this.onSelectEmail = elm => {\n      const {\n        match,\n        history\n      } = this.props;\n      return {\n        onClick: e => {\n          e.preventDefault();\n          history.push(`${match.url}/${elm.id}`);\n        }\n      };\n    };\n\n    this.search = e => {\n      let query = e.target.value;\n      let data = [];\n      data = this.getCurrentCategory().filter(item => {\n        return query === '' ? item : item.name.toLowerCase().includes(query);\n      });\n      this.setState({\n        mails: data\n      });\n    };\n\n    this.getCurrentCategory = () => {\n      const {\n        category\n      } = this.props.match.params;\n\n      if (labels.includes(category)) {\n        return MailData.inbox.filter(elm => elm.label === category);\n      }\n\n      switch (category) {\n        case 'inbox':\n          return MailData.inbox;\n\n        case 'sent':\n          return MailData.sent;\n\n        case 'draft':\n          return MailData.draft;\n\n        case 'starred':\n          return MailData.inbox.filter(elm => elm.starred);\n\n        case 'deleted':\n          return MailData.deleted;\n\n        default:\n          break;\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.loadMail();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      this.loadMail();\n    }\n  }\n\n  render() {\n    const {\n      match,\n      history\n    } = this.props;\n    const {\n      selectedRowKeys\n    } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange\n    };\n    const locale = {\n      emptyText: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center my-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/others/img-10.png\",\n          alt: \"Add credit card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mt-3 font-weight-light\",\n          children: \"There is no mail!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    };\n    const tableColumns = [{\n      title: () => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mail-list-action\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: hasSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n              overlay: /*#__PURE__*/_jsxDEV(Menu, {\n                children: labels.map(elm => /*#__PURE__*/_jsxDEV(Menu.Item, {\n                  onClick: () => {\n                    this.massCategorize(elm, this.state.selectedRowKeys);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    color: getLabelColor(elm)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-capitalize\",\n                    children: elm\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 15\n                  }, this)]\n                }, `key-${elm}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 14\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 11\n              }, this),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mail-list-action-icon ml-0\",\n                onClick: e => e.preventDefault(),\n                children: /*#__PURE__*/_jsxDEV(TagOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mail-list-action-icon\",\n              onClick: () => {\n                this.massDeleted(this.state.selectedRowKeys);\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Delete\",\n                children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 10\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mail-list-action-icon\",\n              onClick: () => {\n                this.massStar(this.state.selectedRowKeys);\n              },\n              children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                title: \"Star\",\n                children: /*#__PURE__*/_jsxDEV(StarOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            size: \"small\",\n            placeholder: \"Search\",\n            onChange: e => {\n              this.search(e);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this),\n      colSpan: 4,\n      dataIndex: 'name',\n      className: 'mail-list-sender',\n      render: (_, elm) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => {\n            e.stopPropagation();\n            this.onStarTicked(elm);\n          },\n          className: `mail-list-star font-size-md ${elm.starred ? 'checked' : 'uncheck'}`,\n          children: elm.starred ? /*#__PURE__*/_jsxDEV(StarFilled, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(StarOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: elm.avatar,\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-0 ml-2\",\n            children: elm.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 6\n      }, this)\n    }, {\n      title: '',\n      colSpan: 0,\n      className: 'mail-list-content',\n      render: (_, elm) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" mail-list-content-msg\",\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          color: getLabelColor(elm.label)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-weight-semibold text-dark ml-1\",\n          children: elm.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mx-2\",\n          children: \" - \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"p mb-0\",\n          children: this.formatBody(elm.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 6\n      }, this)\n    }, {\n      title: '',\n      colSpan: 0,\n      className: 'mail-list-date',\n      render: (_, elm) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: elm.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 6\n      }, this)\n    }];\n    const hasSelected = selectedRowKeys.length > 0;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mail-list\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        rowSelection: rowSelection,\n        columns: tableColumns,\n        dataSource: this.state.mails,\n        locale: locale,\n        onRow: elm => {\n          return {\n            onClick: e => {\n              e.preventDefault();\n              history.push(`${match.url}/${elm.id}`);\n            }\n          };\n        },\n        rowKey: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport default MailItem;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/apps/mail/MailItem.js"],"names":["React","Component","Table","Avatar","Badge","Tooltip","Dropdown","Menu","Input","StarOutlined","StarFilled","DeleteOutlined","TagOutlined","MailData","labels","getLabelColor","MailItem","state","mails","selectedRowKeys","searchValue","onSelectChange","setState","onStarTicked","elm","id","starred","map","item","formatBody","body","replace","loadMail","data","getCurrentCategory","massDeleted","selectedKey","forEach","num","filter","massStar","massCategorize","label","onSelectEmail","match","history","props","onClick","e","preventDefault","push","url","search","query","target","value","name","toLowerCase","includes","category","params","inbox","sent","draft","deleted","componentDidMount","componentDidUpdate","prevProps","location","pathname","render","rowSelection","onChange","locale","emptyText","tableColumns","title","hasSelected","colSpan","dataIndex","className","_","stopPropagation","avatar","content","date","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table, Avatar, Badge, Tooltip, Dropdown, Menu, Input } from 'antd';\r\nimport { StarOutlined, StarFilled, DeleteOutlined, TagOutlined } from '@ant-design/icons';\r\nimport MailData from \"assets/data/mail.data.json\";\r\nimport { labels, getLabelColor } from \"./MailLabels\";\r\n\r\nexport class MailItem extends Component {\r\n\r\n\tstate = {\r\n\t\tmails: [],\r\n\t\tselectedRowKeys: [],\r\n\t\tsearchValue: ''\r\n\t};\r\n\t\r\n\tonSelectChange = selectedRowKeys => {\r\n\t\tthis.setState({ selectedRowKeys });\r\n\t};\r\n\t\r\n\tonStarTicked = elm => {\r\n\t\tconst { id, starred } = elm;\r\n\t\tthis.setState({\r\n\t\t\tmails: this.state.mails.map( item => {\r\n\t\t\t\tif(item.id === id) {\r\n\t\t\t\t\titem.starred = !starred\r\n\t\t\t\t\treturn item\r\n\t\t\t\t}\r\n\t\t\t\treturn item\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tformatBody = body => {\r\n\t\treturn body.replace(/<(?:.|\\n)*?>/gm, ' ');\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.loadMail()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.loadMail()\r\n\t\t}\r\n\t}\r\n\r\n\tloadMail = () => {\r\n\t\tconst data = this.getCurrentCategory()\r\n\r\n\t\tthis.setState({\r\n\t\t\tmails: data,\r\n\t\t\tselectedRowKeys: []\r\n\t\t})\r\n\t}\r\n\r\n\tmassDeleted = selectedKey => {\r\n\t\tlet data = this.state.mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.filter(elm => elm.id !== num)\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tmails: data,\r\n\t\t\tselectedRowKeys: []\r\n\t\t})\r\n\t}\r\n\r\n\tmassStar = selectedKey => {\r\n\t\tlet data = this.state.mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.map(elm => {\r\n\t\t\t\tif(elm.id === num) {\r\n\t\t\t\t\telm.starred = true\r\n\t\t\t\t\treturn elm\r\n\t\t\t\t} else return elm\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tmails: data,\r\n\t\t\tselectedRowKeys: []\r\n\t\t})\r\n\t}\r\n\r\n\tmassCategorize = (label, selectedKey) => {\r\n\t\tlet data = this.state.mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.map(elm => {\r\n\t\t\t\tif(elm.id === num) {\r\n\t\t\t\t\telm.label = label\r\n\t\t\t\t\treturn elm\r\n\t\t\t\t} else return elm\r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tmails: data,\r\n\t\t\tselectedRowKeys: []\r\n\t\t})\r\n\t}\r\n\r\n\tonSelectEmail = elm => {\r\n\t\tconst { match, history } = this.props\r\n\t\treturn {\r\n\t\t\tonClick: e => {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\thistory.push(`${match.url}/${elm.id}`)\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tsearch = e => {\r\n\t\tlet query = e.target.value;\r\n\t\tlet data = []\r\n\t\tdata = this.getCurrentCategory().filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tmails: data\r\n\t\t});\r\n\t}\r\n\r\n\tgetCurrentCategory = () => {\r\n\t\tconst { category } = this.props.match.params;\r\n\t\tif(labels.includes(category)) {\r\n\t\t\treturn MailData.inbox.filter( elm => elm.label === category )\r\n\t\t}\r\n\t\tswitch (category) {\r\n\t\t\tcase 'inbox':\r\n\t\t\t\treturn MailData.inbox\r\n\t\t\tcase 'sent':\r\n\t\t\t\treturn MailData.sent\r\n\t\t\tcase 'draft':\r\n\t\t\t\treturn MailData.draft\r\n\t\t\tcase 'starred':\r\n\t\t\t\treturn  MailData.inbox.filter( elm => elm.starred )\r\n\t\t\tcase 'deleted':\r\n\t\t\t\treturn  MailData.deleted\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { match, history } = this.props\r\n\t\tconst { selectedRowKeys } = this.state;\r\n    const rowSelection = {\r\n\t\t\tselectedRowKeys,\r\n\t\t\tonChange: this.onSelectChange,\r\n\t\t};\r\n\r\n\t\tconst locale = {\r\n      emptyText: (\r\n        <div className=\"text-center my-5\">\r\n          <img src=\"/img/others/img-10.png\" alt=\"Add credit card\"/>\r\n          <h3 className=\"mt-3 font-weight-light\">There is no mail!</h3>\r\n        </div>\r\n      )\r\n    };\r\n\t\t\r\n\t\tconst tableColumns = [\r\n\t\t\t{\r\n\t\t\t\ttitle: () => (\r\n\t\t\t\t\t<div className=\"mail-list-action\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{\thasSelected? \r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Dropdown  overlay={\r\n\t\t\t\t\t\t\t\t\t\t<Menu>\r\n\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabels.map( elm => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`key-${elm}`} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {this.massCategorize(elm, this.state.selectedRowKeys)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={getLabelColor(elm)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-capitalize\">{elm}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t</Menu>}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon ml-0\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t\t\t\t<TagOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon\" onClick={() => {this.massDeleted(this.state.selectedRowKeys)}}>\r\n\t\t\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon\" onClick={() => {this.massStar(this.state.selectedRowKeys)}}>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Star\">\r\n\t\t\t\t\t\t\t\t\t\t<StarOutlined />\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Input size=\"small\" placeholder=\"Search\" onChange={e => {this.search(e)}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> \r\n\t\t\t\t),\r\n\t\t\t\tcolSpan: 4,\r\n\t\t\t\tdataIndex: 'name',\r\n\t\t\t\tclassName: 'mail-list-sender',\r\n\t\t\t\trender: (_, elm) => (\r\n\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\t\tthis.onStarTicked(elm)\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t  className={`mail-list-star font-size-md ${elm.starred? 'checked' : 'uncheck'}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{elm.starred? <StarFilled /> : <StarOutlined />}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t<Avatar src={elm.avatar} size={30}/>\r\n\t\t\t\t\t\t\t<h4 className=\"mb-0 ml-2\">{elm.name}</h4>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tcolSpan: 0,\r\n\t\t\t\tclassName: 'mail-list-content',\r\n\t\t\t\trender: (_, elm) => (\r\n\t\t\t\t\t<div className=\" mail-list-content-msg\">\r\n\t\t\t\t\t\t<Badge color={getLabelColor(elm.label)}/>\r\n\t\t\t\t\t\t<span className=\"font-weight-semibold text-dark ml-1\">{elm.title}</span>\r\n\t\t\t\t\t\t<span className=\"mx-2\"> - </span>\r\n\t\t\t\t\t\t<span className=\"p mb-0\">{this.formatBody(elm.content)}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tcolSpan: 0,\r\n\t\t\t\tclassName: 'mail-list-date',\r\n\t\t\t\trender: (_, elm) => (\r\n\t\t\t\t\t<div>{elm.date}</div>\r\n\t\t\t\t)\r\n\t\t\t},\r\n\t\t];\r\n\r\n\t\tconst hasSelected = selectedRowKeys.length > 0;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"mail-list\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\trowSelection={rowSelection} \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={this.state.mails} \r\n\t\t\t\t\tlocale={locale}\r\n\t\t\t\t\tonRow={(elm) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tonClick: e => {\r\n\t\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\t\thistory.push(`${match.url}/${elm.id}`)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}}\r\n\t\t\t\t\trowKey='id'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MailItem\r\n"]},"metadata":{},"sourceType":"module"}