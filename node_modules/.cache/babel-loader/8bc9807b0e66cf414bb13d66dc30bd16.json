{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/input/Tooltip.js\";\nimport React, { Component } from \"react\";\nimport { Input, Tooltip } from \"antd\";\n\nfunction formatNumber(value) {\n  value += \"\";\n  const list = value.split(\".\");\n  const prefix = list[0].charAt(0) === \"-\" ? \"-\" : \"\";\n  let num = prefix ? list[0].slice(1) : list[0];\n  let result = \"\";\n\n  while (num.length > 3) {\n    result = `,${num.slice(-3)}${result}`;\n    num = num.slice(0, num.length - 3);\n  }\n\n  if (num) {\n    result = num + result;\n  }\n\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : \"\"}`;\n}\n\nclass NumericInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onChange = e => {\n      const {\n        value\n      } = e.target;\n      const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n\n      if (!isNaN(value) && reg.test(value) || value === \"\" || value === \"-\") {\n        this.props.onChange(value);\n      }\n    };\n\n    this.onBlur = () => {\n      const {\n        value,\n        onBlur,\n        onChange\n      } = this.props;\n\n      if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\n        onChange(value.slice(0, -1));\n      }\n\n      if (onBlur) {\n        onBlur();\n      }\n    };\n  }\n\n  render() {\n    const {\n      value\n    } = this.props;\n    const title = value ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"numeric-input-title\",\n      children: value !== \"-\" ? formatNumber(value) : \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this) : \"Input a number\";\n    return /*#__PURE__*/_jsxDEV(Tooltip, {\n      trigger: [\"focus\"],\n      title: title,\n      placement: \"topLeft\",\n      overlayClassName: \"numeric-input\",\n      children: /*#__PURE__*/_jsxDEV(Input, { ...this.props,\n        onChange: this.onChange,\n        onBlur: this.onBlur,\n        placeholder: \"Input a number\",\n        maxLength: 25,\n        style: {\n          width: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass NumericInputDemo extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = value => {\n      this.setState({\n        value\n      });\n    };\n\n    this.state = {\n      value: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(NumericInput, {\n      style: {\n        width: 120\n      },\n      value: this.state.value,\n      onChange: this.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport class InputTooltip extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(NumericInputDemo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default InputTooltip;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/input/Tooltip.js"],"names":["React","Component","Input","Tooltip","formatNumber","value","list","split","prefix","charAt","num","slice","result","length","NumericInput","onChange","e","target","reg","isNaN","test","props","onBlur","render","title","width","NumericInputDemo","constructor","setState","state","InputTooltip"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Input, Tooltip } from \"antd\";\r\n\r\nfunction formatNumber(value) {\r\n  value += \"\";\r\n  const list = value.split(\".\");\r\n  const prefix = list[0].charAt(0) === \"-\" ? \"-\" : \"\";\r\n  let num = prefix ? list[0].slice(1) : list[0];\r\n  let result = \"\";\r\n  while (num.length > 3) {\r\n    result = `,${num.slice(-3)}${result}`;\r\n    num = num.slice(0, num.length - 3);\r\n  }\r\n  if (num) {\r\n    result = num + result;\r\n  }\r\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : \"\"}`;\r\n}\r\n\r\nclass NumericInput extends React.Component {\r\n  onChange = e => {\r\n    const { value } = e.target;\r\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\r\n    if ((!isNaN(value) && reg.test(value)) || value === \"\" || value === \"-\") {\r\n      this.props.onChange(value);\r\n    }\r\n  };\r\n\r\n  // '.' at the end or only '-' in the input box.\r\n  onBlur = () => {\r\n    const { value, onBlur, onChange } = this.props;\r\n    if (value.charAt(value.length - 1) === \".\" || value === \"-\") {\r\n      onChange(value.slice(0, -1));\r\n    }\r\n    if (onBlur) {\r\n      onBlur();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.props;\r\n    const title = value ? (\r\n      <span className=\"numeric-input-title\">\r\n        {value !== \"-\" ? formatNumber(value) : \"-\"}\r\n      </span>\r\n    ) : (\r\n      \"Input a number\"\r\n    );\r\n    return (\r\n      <Tooltip\r\n        trigger={[\"focus\"]}\r\n        title={title}\r\n        placement=\"topLeft\"\r\n        overlayClassName=\"numeric-input\"\r\n      >\r\n        <Input\r\n          {...this.props}\r\n          onChange={this.onChange}\r\n          onBlur={this.onBlur}\r\n          placeholder=\"Input a number\"\r\n          maxLength={25}\r\n          style={{width: '150px'}}\r\n        />\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n\r\nclass NumericInputDemo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: \"\" };\r\n  }\r\n\r\n  onChange = value => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <NumericInput\r\n        style={{ width: 120 }}\r\n        value={this.state.value}\r\n        onChange={this.onChange}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport class InputTooltip extends Component {\r\n  render() {\r\n    return <NumericInputDemo />;\r\n  }\r\n}\r\n\r\nexport default InputTooltip;\r\n"]},"metadata":{},"sourceType":"module"}