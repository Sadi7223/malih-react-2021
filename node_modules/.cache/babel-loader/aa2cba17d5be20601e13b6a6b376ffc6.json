{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/apps/e-commerce/orders/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag } from 'antd';\nimport OrderListData from \"assets/data/order-list.data.json\";\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\nimport Flex from 'components/shared-components/Flex';\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment';\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant';\nimport utils from 'utils';\nconst {\n  Option\n} = Select;\n\nconst getPaymentStatus = status => {\n  if (status === 'Paid') {\n    return 'success';\n  }\n\n  if (status === 'Pending') {\n    return 'warning';\n  }\n\n  if (status === 'Expired') {\n    return 'error';\n  }\n\n  return '';\n};\n\nconst getShippingStatus = status => {\n  if (status === 'Ready') {\n    return 'blue';\n  }\n\n  if (status === 'Shipped') {\n    return 'cyan';\n  }\n\n  return '';\n};\n\nconst paymentStatusList = ['Paid', 'Pending', 'Expired'];\n\nconst Orders = () => {\n  _s();\n\n  const [list, setList] = useState(OrderListData);\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n\n  const handleShowStatus = value => {\n    if (value !== 'All') {\n      const key = 'paymentStatus';\n      const data = utils.filterArray(OrderListData, key, value);\n      setList(data);\n    } else {\n      setList(OrderListData);\n    }\n  };\n\n  const dropdownMenu = row => /*#__PURE__*/_jsxDEV(Menu, {\n    children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(EyeOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(PlusCircleOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: \"Add to remark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 3\n  }, this);\n\n  const tableColumns = [{\n    title: 'ID',\n    dataIndex: 'id'\n  }, {\n    title: 'Product',\n    dataIndex: 'name',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(AvatarStatus, {\n        size: 30,\n        src: record.image,\n        name: record.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'name')\n  }, {\n    title: 'Date',\n    dataIndex: 'date',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'date')\n  }, {\n    title: 'Order status',\n    dataIndex: 'orderStatus',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Tag, {\n        color: getShippingStatus(record.orderStatus),\n        children: record.orderStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\n  }, {\n    title: 'Payment status',\n    dataIndex: 'paymentStatus',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Badge, {\n        status: getPaymentStatus(record.paymentStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: record.paymentStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 64\n      }, this)]\n    }, void 0, true),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\n  }, {\n    title: 'Total',\n    dataIndex: 'amount',\n    render: (_, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"font-weight-semibold\",\n      children: /*#__PURE__*/_jsxDEV(NumberFormat, {\n        displayType: 'text',\n        value: (Math.round(record.amount * 100) / 100).toFixed(2),\n        prefix: '$',\n        thousandSeparator: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this),\n    sorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\n  }, {\n    title: '',\n    dataIndex: 'actions',\n    render: (_, elm) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsxDEV(EllipsisDropdown, {\n        menu: dropdownMenu(elm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }, this)\n  }];\n  const rowSelection = {\n    onChange: (key, rows) => {\n      setSelectedRows(rows);\n      setSelectedRowKeys(key);\n    }\n  };\n\n  const onSearch = e => {\n    const value = e.currentTarget.value;\n    const searchArray = e.currentTarget.value ? list : OrderListData;\n    const data = utils.wildCardSearch(searchArray, value);\n    setList(data);\n    setSelectedRowKeys([]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      alignItems: \"center\",\n      justifyContent: \"between\",\n      mobileFlex: false,\n      children: [/*#__PURE__*/_jsxDEV(Flex, {\n        className: \"mb-1\",\n        mobileFlex: false,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mr-md-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Search\",\n            prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 43\n            }, this),\n            onChange: e => onSearch(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            defaultValue: \"All\",\n            className: \"w-100\",\n            style: {\n              minWidth: 180\n            },\n            onChange: handleShowStatus,\n            placeholder: \"Status\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"All\",\n              children: \"All payment \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 8\n            }, this), paymentStatusList.map(elm => /*#__PURE__*/_jsxDEV(Option, {\n              value: elm,\n              children: elm\n            }, elm, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 38\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          icon: /*#__PURE__*/_jsxDEV(FileExcelOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 35\n          }, this),\n          block: true,\n          children: \"Export All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-responsive\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: tableColumns,\n        dataSource: list,\n        rowKey: \"id\",\n        rowSelection: {\n          selectedRowKeys: selectedRowKeys,\n          type: 'checkbox',\n          preserveSelectedRowKeys: false,\n          ...rowSelection\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Orders, \"j4+OeQZSRyeFL/9CZuK38ht+sBs=\");\n\n_c = Orders;\nexport default Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/apps/e-commerce/orders/index.js"],"names":["React","useState","Card","Table","Select","Input","Button","Badge","Menu","Tag","OrderListData","EyeOutlined","FileExcelOutlined","SearchOutlined","PlusCircleOutlined","AvatarStatus","EllipsisDropdown","Flex","NumberFormat","moment","DATE_FORMAT_DD_MM_YYYY","utils","Option","getPaymentStatus","status","getShippingStatus","paymentStatusList","Orders","list","setList","selectedRows","setSelectedRows","selectedRowKeys","setSelectedRowKeys","handleShowStatus","value","key","data","filterArray","dropdownMenu","row","tableColumns","title","dataIndex","render","_","record","image","name","sorter","a","b","antdTableSorter","unix","date","format","orderStatus","paymentStatus","Math","round","amount","toFixed","elm","rowSelection","onChange","rows","onSearch","e","currentTarget","searchArray","wildCardSearch","minWidth","map","type","preserveSelectedRowKeys"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, {useState} from 'react'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag } from 'antd';\r\nimport OrderListData from \"assets/data/order-list.data.json\"\r\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst paymentStatusList = ['Paid', 'Pending', 'Expired']\r\n\r\nconst Orders = () => {\r\n\r\n\tconst [list, setList] = useState(OrderListData)\r\n\tconst [selectedRows, setSelectedRows] = useState([])\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n\tconst handleShowStatus = value => {\r\n\t\tif(value !== 'All') {\r\n\t\t\tconst key = 'paymentStatus'\r\n\t\t\tconst data = utils.filterArray(OrderListData, key, value)\r\n\t\t\tsetList(data)\r\n\t\t} else {\r\n\t\t\tsetList(OrderListData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst dropdownMenu = row => (\r\n\t\t<Menu>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<EyeOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<PlusCircleOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Add to remark</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t);\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'ID',\r\n\t\t\tdataIndex: 'id'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Product',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'date',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Order status',\r\n\t\t\tdataIndex: 'orderStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Payment status',\r\n\t\t\tdataIndex: 'paymentStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Badge status={getPaymentStatus(record.paymentStatus)} /><span>{record.paymentStatus}</span></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Total',\r\n\t\t\tdataIndex: 'amount',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\t\r\n\tconst rowSelection = {\r\n\t\tonChange: (key, rows) => {\r\n\t\t\tsetSelectedRows(rows)\r\n\t\t\tsetSelectedRowKeys(key)\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : OrderListData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t\tsetSelectedRowKeys([])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tonChange={handleShowStatus} \r\n\t\t\t\t\t\t\tplaceholder=\"Status\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"All\">All payment </Option>\r\n\t\t\t\t\t\t\t{paymentStatusList.map(elm => <Option key={elm} value={elm}>{elm}</Option>)}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button type=\"primary\" icon={<FileExcelOutlined />} block>Export All</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t\trowSelection={{\r\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\r\n\t\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\r\n\t\t\t\t\t\t...rowSelection,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Orders\r\n"]},"metadata":{},"sourceType":"module"}