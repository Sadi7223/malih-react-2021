{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/maps/simple-map/ChoroplethMap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { csv } from \"d3-fetch\";\nimport { scaleLinear } from \"d3-scale\";\nimport { ComposableMap, Geographies, Geography, Sphere, Graticule } from \"react-simple-maps\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst colorScale = scaleLinear().domain([0.29, 0.68]).range([\"#ffedea\", \"#ff5233\"]);\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    csv(`/data/vulnerability.csv`).then(data => {\n      setData(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    height: 200,\n    projectionConfig: {\n      rotate: [-10, 0, 0],\n      scale: 80\n    },\n    children: [/*#__PURE__*/_jsxDEV(Sphere, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n      stroke: \"#E4E5E6\",\n      strokeWidth: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/maps/simple-map/ChoroplethMap.js"],"names":["React","useEffect","useState","csv","scaleLinear","ComposableMap","Geographies","Geography","Sphere","Graticule","geoUrl","colorScale","domain","range","MapChart","data","setData","then","rotate","scale","length","geographies","map","geo","d","find","s","ISO3","properties","ISO_A3","rsmKey"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,SALF,QAMO,mBANP;AAQA,MAAMC,MAAM,GAAE,wGAAd;AAEA,MAAMC,UAAU,GAAGP,WAAW,GAC3BQ,MADgB,CACT,CAAC,IAAD,EAAO,IAAP,CADS,EAEhBC,KAFgB,CAEV,CAAC,SAAD,EAAY,SAAZ,CAFU,CAAnB;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAAE,yBAAF,CAAH,CAA+Bc,IAA/B,CAAoCF,IAAI,IAAI;AAC1CC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE,QAAC,aAAD;AACD,IAAA,MAAM,EAAE,GADP;AAEE,IAAA,gBAAgB,EAAE;AAChBG,MAAAA,MAAM,EAAE,CAAC,CAAC,EAAF,EAAM,CAAN,EAAS,CAAT,CADQ;AAEhBC,MAAAA,KAAK,EAAE;AAFS,KAFpB;AAAA,4BAOE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,SAAf;AAAyB,MAAA,WAAW,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAC,SAAlB;AAA4B,MAAA,WAAW,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,YARF,EASGJ,IAAI,CAACK,MAAL,GAAc,CAAd,iBACC,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEV,MAAxB;AAAA,gBACG,CAAC;AAAEW,QAAAA;AAAF,OAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,IAAI;AACrB,cAAMC,CAAC,GAAGT,IAAI,CAACU,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,GAAG,CAACK,UAAJ,CAAeC,MAAzC,CAAV;AACA,4BACE,QAAC,SAAD;AAEE,UAAA,SAAS,EAAEN,GAFb;AAGE,UAAA,IAAI,EAAEC,CAAC,GAAGb,UAAU,CAACa,CAAC,CAAC,MAAD,CAAF,CAAb,GAA2B;AAHpC,WACOD,GAAG,CAACO,MADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CArCD;;GAAMhB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { csv } from \"d3-fetch\";\r\nimport { scaleLinear } from \"d3-scale\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Graticule\r\n} from \"react-simple-maps\";\r\n\r\nconst geoUrl =\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst colorScale = scaleLinear()\r\n  .domain([0.29, 0.68])\r\n  .range([\"#ffedea\", \"#ff5233\"]);\r\n\r\nconst MapChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    csv(`/data/vulnerability.csv`).then(data => {\r\n      setData(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ComposableMap\r\n\t\t\theight={200}\r\n      projectionConfig={{\r\n        rotate: [-10, 0, 0],\r\n        scale: 80\r\n      }}\r\n    >\r\n      <Sphere stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      <Graticule stroke=\"#E4E5E6\" strokeWidth={0.5} />\r\n      {data.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map(geo => {\r\n              const d = data.find(s => s.ISO3 === geo.properties.ISO_A3);\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d[\"2017\"]) : \"#F5F4F6\"}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      )}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}