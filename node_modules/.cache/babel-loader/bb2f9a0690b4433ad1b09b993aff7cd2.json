{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/transfer/TableTransfer.js\";\nimport React, { Component } from \"react\";\nimport { Transfer, Switch, Table, Tag } from \"antd\";\nimport difference from \"lodash/difference\"; // Customize Table Transfer\n\nconst TableTransfer = ({\n  leftColumns,\n  rightColumns,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Transfer, { ...restProps,\n  showSelectAll: false,\n  children: ({\n    direction,\n    filteredItems,\n    onItemSelectAll,\n    onItemSelect,\n    selectedKeys: listSelectedKeys,\n    disabled: listDisabled\n  }) => {\n    const columns = direction === \"left\" ? leftColumns : rightColumns;\n    const rowSelection = {\n      getCheckboxProps: item => ({\n        disabled: listDisabled || item.disabled\n      }),\n\n      onSelectAll(selected, selectedRows) {\n        const treeSelectedKeys = selectedRows.filter(item => !item.disabled).map(({\n          key\n        }) => key);\n        const diffKeys = selected ? difference(treeSelectedKeys, listSelectedKeys) : difference(listSelectedKeys, treeSelectedKeys);\n        onItemSelectAll(diffKeys, selected);\n      },\n\n      onSelect({\n        key\n      }, selected) {\n        onItemSelect(key, selected);\n      },\n\n      selectedRowKeys: listSelectedKeys\n    };\n    return /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: rowSelection,\n      columns: columns,\n      dataSource: filteredItems,\n      size: \"small\",\n      style: {\n        pointerEvents: listDisabled ? \"none\" : null\n      },\n      onRow: ({\n        key,\n        disabled: itemDisabled\n      }) => ({\n        onClick: () => {\n          if (itemDisabled || listDisabled) return;\n          onItemSelect(key, !listSelectedKeys.includes(key));\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this);\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n_c = TableTransfer;\nconst mockTags = [\"cat\", \"dog\", \"bird\"];\nconst mockData = [];\n\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    key: i.toString(),\n    title: `content${i + 1}`,\n    description: `description of content${i + 1}`,\n    disabled: i % 4 === 0,\n    tag: mockTags[i % 3]\n  });\n}\n\nconst originTargetKeys = mockData.filter(item => +item.key % 3 > 1).map(item => item.key);\nconst leftTableColumns = [{\n  dataIndex: \"title\",\n  title: \"Name\"\n}, {\n  dataIndex: \"tag\",\n  title: \"Tag\",\n  render: tag => /*#__PURE__*/_jsxDEV(Tag, {\n    children: tag\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 20\n  }, this)\n}, {\n  dataIndex: \"description\",\n  title: \"Description\"\n}];\nconst rightTableColumns = [{\n  dataIndex: \"title\",\n  title: \"Name\"\n}];\nexport class TransferTableTransfer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      targetKeys: originTargetKeys,\n      disabled: false,\n      showSearch: false\n    };\n\n    this.onChange = nextTargetKeys => {\n      this.setState({\n        targetKeys: nextTargetKeys\n      });\n    };\n\n    this.triggerDisable = disabled => {\n      this.setState({\n        disabled\n      });\n    };\n\n    this.triggerShowSearch = showSearch => {\n      this.setState({\n        showSearch\n      });\n    };\n  }\n\n  render() {\n    const {\n      targetKeys,\n      disabled,\n      showSearch\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TableTransfer, {\n        dataSource: mockData,\n        targetKeys: targetKeys,\n        disabled: disabled,\n        showSearch: showSearch,\n        onChange: this.onChange,\n        filterOption: (inputValue, item) => item.title.indexOf(inputValue) !== -1 || item.tag.indexOf(inputValue) !== -1,\n        leftColumns: leftTableColumns,\n        rightColumns: rightTableColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        unCheckedChildren: \"disabled\",\n        checkedChildren: \"disabled\",\n        checked: disabled,\n        onChange: this.triggerDisable,\n        style: {\n          marginTop: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        unCheckedChildren: \"showSearch\",\n        checkedChildren: \"showSearch\",\n        checked: showSearch,\n        onChange: this.triggerShowSearch,\n        style: {\n          marginTop: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default TransferTableTransfer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableTransfer\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/transfer/TableTransfer.js"],"names":["React","Component","Transfer","Switch","Table","Tag","difference","TableTransfer","leftColumns","rightColumns","restProps","direction","filteredItems","onItemSelectAll","onItemSelect","selectedKeys","listSelectedKeys","disabled","listDisabled","columns","rowSelection","getCheckboxProps","item","onSelectAll","selected","selectedRows","treeSelectedKeys","filter","map","key","diffKeys","onSelect","selectedRowKeys","pointerEvents","itemDisabled","onClick","includes","mockTags","mockData","i","push","toString","title","description","tag","originTargetKeys","leftTableColumns","dataIndex","render","rightTableColumns","TransferTableTransfer","state","targetKeys","showSearch","onChange","nextTargetKeys","setState","triggerDisable","triggerShowSearch","inputValue","indexOf","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Transfer, Switch, Table, Tag } from \"antd\";\r\nimport difference from \"lodash/difference\";\r\n\r\n// Customize Table Transfer\r\nconst TableTransfer = ({ leftColumns, rightColumns, ...restProps }) => (\r\n  <Transfer {...restProps} showSelectAll={false}>\r\n    {({\r\n      direction,\r\n      filteredItems,\r\n      onItemSelectAll,\r\n      onItemSelect,\r\n      selectedKeys: listSelectedKeys,\r\n      disabled: listDisabled\r\n    }) => {\r\n      const columns = direction === \"left\" ? leftColumns : rightColumns;\r\n\r\n      const rowSelection = {\r\n        getCheckboxProps: item => ({ disabled: listDisabled || item.disabled }),\r\n        onSelectAll(selected, selectedRows) {\r\n          const treeSelectedKeys = selectedRows\r\n            .filter(item => !item.disabled)\r\n            .map(({ key }) => key);\r\n          const diffKeys = selected\r\n            ? difference(treeSelectedKeys, listSelectedKeys)\r\n            : difference(listSelectedKeys, treeSelectedKeys);\r\n          onItemSelectAll(diffKeys, selected);\r\n        },\r\n        onSelect({ key }, selected) {\r\n          onItemSelect(key, selected);\r\n        },\r\n        selectedRowKeys: listSelectedKeys\r\n      };\r\n\r\n      return (\r\n        <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={filteredItems}\r\n          size=\"small\"\r\n          style={{ pointerEvents: listDisabled ? \"none\" : null }}\r\n          onRow={({ key, disabled: itemDisabled }) => ({\r\n            onClick: () => {\r\n              if (itemDisabled || listDisabled) return;\r\n              onItemSelect(key, !listSelectedKeys.includes(key));\r\n            }\r\n          })}\r\n        />\r\n      );\r\n    }}\r\n  </Transfer>\r\n);\r\n\r\nconst mockTags = [\"cat\", \"dog\", \"bird\"];\r\n\r\nconst mockData = [];\r\nfor (let i = 0; i < 20; i++) {\r\n  mockData.push({\r\n    key: i.toString(),\r\n    title: `content${i + 1}`,\r\n    description: `description of content${i + 1}`,\r\n    disabled: i % 4 === 0,\r\n    tag: mockTags[i % 3]\r\n  });\r\n}\r\n\r\nconst originTargetKeys = mockData\r\n  .filter(item => +item.key % 3 > 1)\r\n  .map(item => item.key);\r\n\r\nconst leftTableColumns = [\r\n  {\r\n    dataIndex: \"title\",\r\n    title: \"Name\"\r\n  },\r\n  {\r\n    dataIndex: \"tag\",\r\n    title: \"Tag\",\r\n    render: tag => <Tag>{tag}</Tag>\r\n  },\r\n  {\r\n    dataIndex: \"description\",\r\n    title: \"Description\"\r\n  }\r\n];\r\nconst rightTableColumns = [\r\n  {\r\n    dataIndex: \"title\",\r\n    title: \"Name\"\r\n  }\r\n];\r\n\r\nexport class TransferTableTransfer extends Component {\r\n  state = {\r\n    targetKeys: originTargetKeys,\r\n    disabled: false,\r\n    showSearch: false\r\n  };\r\n\r\n  onChange = nextTargetKeys => {\r\n    this.setState({ targetKeys: nextTargetKeys });\r\n  };\r\n\r\n  triggerDisable = disabled => {\r\n    this.setState({ disabled });\r\n  };\r\n\r\n  triggerShowSearch = showSearch => {\r\n    this.setState({ showSearch });\r\n  };\r\n\r\n  render() {\r\n    const { targetKeys, disabled, showSearch } = this.state;\r\n    return (\r\n      <div>\r\n        <TableTransfer\r\n          dataSource={mockData}\r\n          targetKeys={targetKeys}\r\n          disabled={disabled}\r\n          showSearch={showSearch}\r\n          onChange={this.onChange}\r\n          filterOption={(inputValue, item) =>\r\n            item.title.indexOf(inputValue) !== -1 ||\r\n            item.tag.indexOf(inputValue) !== -1\r\n          }\r\n          leftColumns={leftTableColumns}\r\n          rightColumns={rightTableColumns}\r\n        />\r\n        <Switch\r\n          unCheckedChildren=\"disabled\"\r\n          checkedChildren=\"disabled\"\r\n          checked={disabled}\r\n          onChange={this.triggerDisable}\r\n          style={{ marginTop: 16 }}\r\n        />\r\n        <Switch\r\n          unCheckedChildren=\"showSearch\"\r\n          checkedChildren=\"showSearch\"\r\n          checked={showSearch}\r\n          onChange={this.triggerShowSearch}\r\n          style={{ marginTop: 16 }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransferTableTransfer;\r\n"]},"metadata":{},"sourceType":"module"}