{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/EditRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\nconst originData = [];\n\nfor (let i = 0; i < 100; i++) {\n  originData.push({\n    key: i.toString(),\n    name: `Edrward ${i}`,\n    age: 32,\n    address: `London Park no. ${i}`\n  });\n}\n\nconst EditableCell = ({\n  editing,\n  dataIndex,\n  title,\n  inputType,\n  record,\n  index,\n  children,\n  ...restProps\n}) => {\n  const inputNode = inputType === 'number' ? /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 46\n  }, this) : /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 64\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"td\", { ...restProps,\n    children: editing ? /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: dataIndex,\n      style: {\n        margin: 0\n      },\n      rules: [{\n        required: true,\n        message: `Please Input ${title}!`\n      }],\n      children: inputNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_c = EditableCell;\n\nconst EditableTable = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [data, setData] = useState(originData);\n  const [editingKey, setEditingKey] = useState('');\n\n  const isEditing = record => record.key === editingKey;\n\n  const edit = record => {\n    form.setFieldsValue({ ...record\n    });\n    setEditingKey(record.key);\n  };\n\n  const cancel = () => {\n    setEditingKey('');\n  };\n\n  const save = async key => {\n    try {\n      const row = await form.validateFields();\n      const newData = [...data];\n      const index = newData.findIndex(item => key === item.key);\n\n      if (index > -1) {\n        const item = newData[index];\n        newData.splice(index, 1, { ...item,\n          ...row\n        });\n        setData(newData);\n        setEditingKey('');\n      } else {\n        newData.push(row);\n        setData(newData);\n        setEditingKey('');\n      }\n    } catch (errInfo) {\n      console.log('Validate Failed:', errInfo);\n    }\n  };\n\n  const columns = [{\n    title: 'name',\n    dataIndex: 'name',\n    width: '25%',\n    editable: true\n  }, {\n    title: 'age',\n    dataIndex: 'age',\n    width: '15%',\n    editable: true\n  }, {\n    title: 'address',\n    dataIndex: 'address',\n    width: '40%',\n    editable: true\n  }, {\n    title: 'operation',\n    dataIndex: 'operation',\n    render: (text, record) => {\n      const editable = isEditing(record);\n      return editable ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          onClick: e => {\n            e.preventDefault();\n            save(record.key);\n          },\n          style: {\n            marginRight: 8\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Sure to cancel?\",\n          onConfirm: e => {\n            e.preventDefault();\n            cancel(record.key);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/#\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/#\",\n        disabled: editingKey !== '',\n        onClick: e => {\n          e.preventDefault();\n          edit(record);\n        },\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  const components = {\n    body: {\n      cell: EditableCell\n    }\n  };\n  const mergedColumns = columns.map(col => {\n    if (!col.editable) {\n      return col;\n    }\n\n    return { ...col,\n      onCell: record => ({\n        record,\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\n        dataIndex: col.dataIndex,\n        title: col.title,\n        editing: isEditing(record)\n      })\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    component: false,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      components: components,\n      bordered: true,\n      dataSource: data,\n      columns: mergedColumns,\n      rowClassName: \"editable-row\",\n      pagination: {\n        onChange: cancel\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditableTable, \"q2WvQ48g9gsiNPOsL7D7gpry76Y=\", false, function () {\n  return [Form.useForm];\n});\n\n_c2 = EditableTable;\nexport class EditRow extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(EditableTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default EditRow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EditableCell\");\n$RefreshReg$(_c2, \"EditableTable\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/EditRow.js"],"names":["React","Component","useState","Table","Input","InputNumber","Popconfirm","Form","originData","i","push","key","toString","name","age","address","EditableCell","editing","dataIndex","title","inputType","record","index","children","restProps","inputNode","margin","required","message","EditableTable","form","useForm","data","setData","editingKey","setEditingKey","isEditing","edit","setFieldsValue","cancel","save","row","validateFields","newData","findIndex","item","splice","errInfo","console","log","columns","width","editable","render","text","e","preventDefault","marginRight","components","body","cell","mergedColumns","map","col","onCell","onChange","EditRow"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form } from 'antd';\r\n\r\nconst originData = [];\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n  originData.push({\r\n    key: i.toString(),\r\n    name: `Edrward ${i}`,\r\n    age: 32,\r\n    address: `London Park no. ${i}`,\r\n  });\r\n}\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState('');\r\n\r\n  const isEditing = record => record.key === editingKey;\r\n\r\n  const edit = record => {\r\n    form.setFieldsValue({ ...record });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async key => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'age',\r\n      dataIndex: 'age',\r\n      width: '15%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'address',\r\n      dataIndex: 'address',\r\n      width: '40%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'operation',\r\n      dataIndex: 'operation',\r\n      render: (text, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"/#\"\r\n              onClick={e => {\r\n                e.preventDefault()\r\n                save(record.key)\r\n              }}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </a>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={e => {\r\n              e.preventDefault()\r\n              cancel(record.key)\r\n            }}>\r\n              <a href=\"/#\">Cancel</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <a href=\"/#\" disabled={editingKey !== ''} onClick={e => {\r\n            e.preventDefault()\r\n            edit(record)\r\n          }}>\r\n            Edit\r\n          </a>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const components = {\r\n    body: {\r\n      cell: EditableCell,\r\n    },\r\n  };\r\n  const mergedColumns = columns.map(col => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: record => ({\r\n        record,\r\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={components}\r\n        bordered\r\n        dataSource={data}\r\n        columns={mergedColumns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n      />\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class EditRow extends Component {\r\n  render() {\r\n    return (\r\n      <EditableTable />\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditRow\r\n"]},"metadata":{},"sourceType":"module"}