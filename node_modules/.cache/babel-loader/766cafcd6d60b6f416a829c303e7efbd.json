{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/select/SelectUsers.js\";\nimport React, { Component } from \"react\";\nimport { Select, Spin } from \"antd\";\nimport debounce from \"lodash/debounce\";\nconst {\n  Option\n} = Select;\nexport class SelectUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      value: [],\n      fetching: false\n    };\n\n    this.fetchUser = value => {\n      console.log(\"fetching user\", value);\n      this.lastFetchId += 1;\n      const fetchId = this.lastFetchId;\n      this.setState({\n        data: [],\n        fetching: true\n      });\n      fetch(\"https://randomuser.me/api/?results=5\").then(response => response.json()).then(body => {\n        if (fetchId !== this.lastFetchId) {\n          // for fetch callback order\n          return;\n        }\n\n        const data = body.results.map(user => ({\n          text: `${user.name.first} ${user.name.last}`,\n          value: user.login.username\n        }));\n        this.setState({\n          data,\n          fetching: false\n        });\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        value,\n        data: [],\n        fetching: false\n      });\n    };\n\n    this.lastFetchId = 0;\n    this.fetchUser = debounce(this.fetchUser, 800);\n  }\n\n  render() {\n    const {\n      fetching,\n      data,\n      value\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Select, {\n      mode: \"multiple\",\n      labelInValue: true,\n      value: value,\n      placeholder: \"Select users\",\n      notFoundContent: fetching ? /*#__PURE__*/_jsxDEV(Spin, {\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }, this) : null,\n      filterOption: false,\n      onSearch: this.fetchUser,\n      onChange: this.handleChange,\n      style: {\n        width: \"100%\"\n      },\n      children: data.map(d => /*#__PURE__*/_jsxDEV(Option, {\n        children: d.text\n      }, d.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default SelectUsers;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/select/SelectUsers.js"],"names":["React","Component","Select","Spin","debounce","Option","SelectUsers","constructor","props","state","data","value","fetching","fetchUser","console","log","lastFetchId","fetchId","setState","fetch","then","response","json","body","results","map","user","text","name","first","last","login","username","handleChange","render","width","d"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,MAAnB;AAEA,OAAO,MAAMI,WAAN,SAA0BL,SAA1B,CAAoC;AACzCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KANW;;AAAA,SAYnBC,SAZmB,GAYPF,KAAK,IAAI;AACnBG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAA7B;AACA,WAAKK,WAAL,IAAoB,CAApB;AACA,YAAMC,OAAO,GAAG,KAAKD,WAArB;AACA,WAAKE,QAAL,CAAc;AAAER,QAAAA,IAAI,EAAE,EAAR;AAAYE,QAAAA,QAAQ,EAAE;AAAtB,OAAd;AACAO,MAAAA,KAAK,CAAC,sCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,YAAIN,OAAO,KAAK,KAAKD,WAArB,EAAkC;AAChC;AACA;AACD;;AACD,cAAMN,IAAI,GAAGa,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiBC,IAAI,KAAK;AACrCC,UAAAA,IAAI,EAAG,GAAED,IAAI,CAACE,IAAL,CAAUC,KAAM,IAAGH,IAAI,CAACE,IAAL,CAAUE,IAAK,EADN;AAErCnB,UAAAA,KAAK,EAAEe,IAAI,CAACK,KAAL,CAAWC;AAFmB,SAAL,CAArB,CAAb;AAIA,aAAKd,QAAL,CAAc;AAAER,UAAAA,IAAF;AAAQE,UAAAA,QAAQ,EAAE;AAAlB,SAAd;AACD,OAZH;AAaD,KA9BkB;;AAAA,SAgCnBqB,YAhCmB,GAgCJtB,KAAK,IAAI;AACtB,WAAKO,QAAL,CAAc;AACZP,QAAAA,KADY;AAEZD,QAAAA,IAAI,EAAE,EAFM;AAGZE,QAAAA,QAAQ,EAAE;AAHE,OAAd;AAKD,KAtCkB;;AAEjB,SAAKI,WAAL,GAAmB,CAAnB;AACA,SAAKH,SAAL,GAAiBT,QAAQ,CAAC,KAAKS,SAAN,EAAiB,GAAjB,CAAzB;AACD;;AAoCDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,QAAF;AAAYF,MAAAA,IAAZ;AAAkBC,MAAAA;AAAlB,QAA4B,KAAKF,KAAvC;AACA,wBACE,QAAC,MAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,YAAY,MAFd;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,WAAW,EAAC,cAJd;AAKE,MAAA,eAAe,EAAEC,QAAQ,gBAAG,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAAH,GAA2B,IALtD;AAME,MAAA,YAAY,EAAE,KANhB;AAOE,MAAA,QAAQ,EAAE,KAAKC,SAPjB;AAQE,MAAA,QAAQ,EAAE,KAAKoB,YARjB;AASE,MAAA,KAAK,EAAE;AAAEE,QAAAA,KAAK,EAAE;AAAT,OATT;AAAA,gBAWGzB,IAAI,CAACe,GAAL,CAASW,CAAC,iBACT,QAAC,MAAD;AAAA,kBAAuBA,CAAC,CAACT;AAAzB,SAAaS,CAAC,CAACzB,KAAf;AAAA;AAAA;AAAA;AAAA,cADD;AAXH;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA5DwC;AA+D3C,eAAeL,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Select, Spin } from \"antd\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport class SelectUsers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.lastFetchId = 0;\r\n    this.fetchUser = debounce(this.fetchUser, 800);\r\n  }\r\n\r\n  state = {\r\n    data: [],\r\n    value: [],\r\n    fetching: false\r\n  };\r\n\r\n  fetchUser = value => {\r\n    console.log(\"fetching user\", value);\r\n    this.lastFetchId += 1;\r\n    const fetchId = this.lastFetchId;\r\n    this.setState({ data: [], fetching: true });\r\n    fetch(\"https://randomuser.me/api/?results=5\")\r\n      .then(response => response.json())\r\n      .then(body => {\r\n        if (fetchId !== this.lastFetchId) {\r\n          // for fetch callback order\r\n          return;\r\n        }\r\n        const data = body.results.map(user => ({\r\n          text: `${user.name.first} ${user.name.last}`,\r\n          value: user.login.username\r\n        }));\r\n        this.setState({ data, fetching: false });\r\n      });\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      value,\r\n      data: [],\r\n      fetching: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { fetching, data, value } = this.state;\r\n    return (\r\n      <Select\r\n        mode=\"multiple\"\r\n        labelInValue\r\n        value={value}\r\n        placeholder=\"Select users\"\r\n        notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n        filterOption={false}\r\n        onSearch={this.fetchUser}\r\n        onChange={this.handleChange}\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        {data.map(d => (\r\n          <Option key={d.value}>{d.text}</Option>\r\n        ))}\r\n      </Select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectUsers;\r\n"]},"metadata":{},"sourceType":"module"}