{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/maps/simple-map/MapChartWithTooltip.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport ReactTooltip from 'react-tooltip';\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nconst MapChart = ({\n  setTooltipContent\n}) => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    \"data-tip\": \"\",\n    height: 200,\n    projectionConfig: {\n      scale: 80\n    },\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n        geography: geo,\n        onMouseEnter: () => {\n          const {\n            NAME,\n            POP_EST\n          } = geo.properties;\n          setTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\n        },\n        onMouseLeave: () => {\n          setTooltipContent(\"\");\n        },\n        style: {\n          default: {\n            fill: \"#D6D6DA\",\n            outline: \"none\"\n          },\n          hover: {\n            fill: \"#F53\",\n            outline: \"none\"\n          },\n          pressed: {\n            fill: \"#E42\",\n            outline: \"none\"\n          }\n        }\n      }, geo.rsmKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this);\n};\n\n_c = MapChart;\n\nfunction Map() {\n  _s();\n\n  const [content, setContent] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MapChart, {\n      setTooltipContent: setContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactTooltip, {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Map, \"KPwtwb4lt1NZxOwnjhyyIoKb9lQ=\");\n\n_c2 = Map;\nexport class MapChartWithTooltip extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default MapChartWithTooltip;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MapChart\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/maps/simple-map/MapChartWithTooltip.js"],"names":["React","Component","useState","ComposableMap","Geographies","Geography","ReactTooltip","geoUrl","rounded","num","Math","round","MapChart","setTooltipContent","scale","geographies","map","geo","NAME","POP_EST","properties","default","fill","outline","hover","pressed","rsmKey","Map","content","setContent","MapChartWithTooltip","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,QAIO,mBAJP;AAMA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,MAAMC,MAAM,GAAG,wGAAf;;AAEA,MAAMC,OAAO,GAAGC,GAAG,IAAI;AACrB,MAAIA,GAAG,GAAG,UAAV,EAAsB;AACpB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,SAAjB,IAA8B,EAA9B,GAAmC,IAA1C;AACD,GAFD,MAEO,IAAIA,GAAG,GAAG,OAAV,EAAmB;AACxB,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,MAAjB,IAA2B,EAA3B,GAAgC,GAAvC;AACD,GAFM,MAEA;AACL,WAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,GAAjB,IAAwB,EAAxB,GAA6B,GAApC;AACD;AACF,CARD;;AAUA,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAC1C,sBACA,QAAC,aAAD;AAAe,gBAAS,EAAxB;AAA2B,IAAA,MAAM,EAAE,GAAnC;AAAwC,IAAA,gBAAgB,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAA1D;AAAA,2BACC,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEP,MAAxB;AAAA,gBACG,CAAC;AAAEQ,QAAAA;AAAF,OAAD,KACAA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBAClB,QAAC,SAAD;AAEC,QAAA,SAAS,EAAEA,GAFZ;AAGC,QAAA,YAAY,EAAE,MAAM;AACnB,gBAAM;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,cAAoBF,GAAG,CAACG,UAA9B;AACAP,UAAAA,iBAAiB,CAAE,GAAEK,IAAK,MAAKV,OAAO,CAACW,OAAD,CAAU,EAA/B,CAAjB;AACA,SANF;AAOC,QAAA,YAAY,EAAE,MAAM;AACnBN,UAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACA,SATF;AAUC,QAAA,KAAK,EAAE;AACNQ,UAAAA,OAAO,EAAE;AACRC,YAAAA,IAAI,EAAE,SADE;AAERC,YAAAA,OAAO,EAAE;AAFD,WADH;AAKNC,UAAAA,KAAK,EAAE;AACNF,YAAAA,IAAI,EAAE,MADA;AAENC,YAAAA,OAAO,EAAE;AAFH,WALD;AASNE,UAAAA,OAAO,EAAE;AACRH,YAAAA,IAAI,EAAE,MADE;AAERC,YAAAA,OAAO,EAAE;AAFD;AATH;AAVR,SACMN,GAAG,CAACS,MADV;AAAA;AAAA;AAAA;AAAA,cADD;AAFH;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA;AAmCD,CApCD;;KAAMd,Q;;AAsCN,SAASe,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAAC,EAAD,CAAtC;AACA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,iBAAiB,EAAE2B;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,gBAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GARQD,G;;MAAAA,G;AAUT,OAAO,MAAMG,mBAAN,SAAkC7B,SAAlC,CAA4C;AAClD8B,EAAAA,MAAM,GAAG;AACR,wBACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAGA;;AALiD;AAQnD,eAAeD,mBAAf","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\n\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst rounded = num => {\r\n  if (num > 1000000000) {\r\n    return Math.round(num / 100000000) / 10 + \"Bn\";\r\n  } else if (num > 1000000) {\r\n    return Math.round(num / 100000) / 10 + \"M\";\r\n  } else {\r\n    return Math.round(num / 100) / 10 + \"K\";\r\n  }\r\n};\r\n\r\nconst MapChart = ({ setTooltipContent }) => {\r\n  return (\r\n\t\t<ComposableMap data-tip=\"\" height={200} projectionConfig={{ scale: 80 }}>\r\n\t\t\t<Geographies geography={geoUrl}>\r\n\t\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\t\tgeographies.map(geo => (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tconst { NAME, POP_EST } = geo.properties;\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(`${NAME} — ${rounded(POP_EST)}`);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#D6D6DA\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#F53\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tpressed: {\r\n\t\t\t\t\t\t\t\t\t\tfill: \"#E42\",\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n  );\r\n};\r\n\r\nfunction Map() {\r\n  const [content, setContent] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <MapChart setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport class MapChartWithTooltip extends Component {\r\n\trender() {\r\n\t\treturn (\r\n      <Map />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MapChartWithTooltip\r\n"]},"metadata":{},"sourceType":"module"}