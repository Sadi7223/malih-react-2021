{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/docs/components/Localization.js\";\nimport React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport { Tree } from 'antd';\nconst {\n  DirectoryTree\n} = Tree;\nconst treeData = [{\n  title: 'entries',\n  key: '0-0',\n  children: []\n}, {\n  title: 'locales',\n  key: '0-1',\n  children: []\n}, {\n  title: 'index.js',\n  key: '0-2',\n  isLeaf: true\n}];\nconst switchOffLang = `<SideNav localization={false} />\n<TopNav localization={false} />`;\nconst langKey = `{\n\t\"sidenav.dashboard\": \"Dashboard\"\n}`;\nconst langConfig = `import antdEnUS from 'antd/es/locale/en_US';\nimport enMsg from \"../locales/en_US.json\";\n\nconst EnLang = {\n  antd: antdEnUS,\n  locale: 'en-US',\n  messages: {\n    ...enMsg\n  },\n};\nexport default EnLang;`;\nconst langEntry = `import enLang from './entries/en_US';\nimport frLang from './entries/fr_FR';\n\nconst AppLocale = {\n    en: enLang,\n    fr: frLang\n};\n\nexport default AppLocale;`;\nconst translate = `import IntlMessage from 'components/util-components/IntlMessage';\n\nconst MyComponent = () => {\n\treturn (\n\t\t<IntlMessage id=\"sidenav.dashboard\" />\n\t\t// output: Dashboard\n\t)\n`;\n\nconst Localization = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Localization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Emilus implement localization through \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"react-intl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 45\n      }, this), \", corresponding files can be found in \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"src/lang/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 40\n      }, this), \", folder structure as below\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: /*#__PURE__*/_jsxDEV(DirectoryTree, {\n        multiple: true,\n        treeData: treeData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Set new locale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"locales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 8\n        }, this), \" folder is the place we store language key. Add your language as JSON format in this folder.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"json\",\n        style: atomDark,\n        children: langKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Create a config file for your new added language at \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 77\n        }, this), \" folder, please also include antd language to the configuration.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: langConfig\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Add your configuration to the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"index.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 55\n        }, this), \", which is the entry file of i18n. Setup a key with your language config as value in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"AppLocale\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 161\n        }, this), \". \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Note that the key you set will be use as \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"locale\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 229\n          }, this), \" value in \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/configs/AppConfig.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 258\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 185\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"javascript\",\n        style: atomDark,\n        children: langEntry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3\",\n        children: [\"Now, with \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"IntlMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 35\n        }, this), \" component, you can translate your language with your language key\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"jsx\",\n        style: atomDark,\n        children: translate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Remove localization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Currently i18n is only implemented in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"SideNav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 46\n        }, this), \" & \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"TopNav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 69\n        }, this), \" component, If you want to remove the localization that comes with default, you can setting \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"localization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), \" prop to \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"false\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 55\n        }, this), \" for the above components\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        className: \"hl-code\",\n        language: \"jsx\",\n        style: atomDark,\n        children: switchOffLang\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Localization;\nexport default Localization;\n\nvar _c;\n\n$RefreshReg$(_c, \"Localization\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/docs/components/Localization.js"],"names":["React","Prism","SyntaxHighlighter","atomDark","Tree","DirectoryTree","treeData","title","key","children","isLeaf","switchOffLang","langKey","langConfig","langEntry","translate","Localization"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport { atomDark } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nimport { Tree } from 'antd';\r\n\r\nconst { DirectoryTree } = Tree;\r\n\r\nconst treeData = [\r\n  {\r\n    title: 'entries',\r\n    key: '0-0',\r\n    children: [],\r\n\t},\r\n\t{\r\n    title: 'locales',\r\n    key: '0-1',\r\n    children: [],\r\n\t},\r\n\t{\r\n\t\ttitle: 'index.js',\r\n\t\tkey: '0-2',\r\n\t\tisLeaf: true,\r\n\t}\r\n];\r\n\r\n\r\nconst switchOffLang = `<SideNav localization={false} />\r\n<TopNav localization={false} />`\r\n\r\nconst langKey = `{\r\n\t\"sidenav.dashboard\": \"Dashboard\"\r\n}`\r\n\r\nconst langConfig = `import antdEnUS from 'antd/es/locale/en_US';\r\nimport enMsg from \"../locales/en_US.json\";\r\n\r\nconst EnLang = {\r\n  antd: antdEnUS,\r\n  locale: 'en-US',\r\n  messages: {\r\n    ...enMsg\r\n  },\r\n};\r\nexport default EnLang;`\r\n\r\nconst langEntry = `import enLang from './entries/en_US';\r\nimport frLang from './entries/fr_FR';\r\n\r\nconst AppLocale = {\r\n    en: enLang,\r\n    fr: frLang\r\n};\r\n\r\nexport default AppLocale;`\r\n\r\nconst translate = `import IntlMessage from 'components/util-components/IntlMessage';\r\n\r\nconst MyComponent = () => {\r\n\treturn (\r\n\t\t<IntlMessage id=\"sidenav.dashboard\" />\r\n\t\t// output: Dashboard\r\n\t)\r\n`\r\n\r\nconst Localization = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Localization</h2>\r\n\t\t\t<p>Emilus implement localization through <code>react-intl</code>, \r\n\t\t\tcorresponding files can be found in <code>src/lang/</code>, folder structure as below</p>\r\n\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t<DirectoryTree\r\n\t\t\t\t\tmultiple\r\n\t\t\t\t\ttreeData={treeData}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t<h4>Set new locale</h4>\r\n\t\t\t\t<p><code>locales</code> folder is the place we store language key. Add your language as JSON format in this folder.</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"json\" style={atomDark}>\r\n\t\t\t\t\t{langKey}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<p className=\"mt-3\">Create a config file for your new added language at <code>entries</code> folder, please also include antd language to the configuration.</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{langConfig}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<p className=\"mt-3\">Add your configuration to the <code>index.js</code>, which is the entry file of i18n. Setup a key with your language config as value in <code>AppLocale</code>. <i>Note that the key you set will be use as <code>locale</code> value in <code>src/configs/AppConfig.js</code></i></p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"javascript\" style={atomDark}>\r\n\t\t\t\t\t{langEntry}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t\t<p className=\"mt-3\">Now, with <code>IntlMessage</code> component, you can translate your language with your language key</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"jsx\" style={atomDark}>\r\n\t\t\t\t\t{translate}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mt-5\">\r\n\t\t\t\t<h4>Remove localization</h4>\r\n\t\t\t\t<p>Currently i18n is only implemented in <code>SideNav</code> & <code>TopNav</code> component,\r\n\t\t\t\tIf you want to remove the localization that comes with default,\r\n\t\t\t\tyou can setting <code>localization</code> prop to <code>false</code> for the above components</p>\r\n\t\t\t\t<SyntaxHighlighter className=\"hl-code\" language=\"jsx\" style={atomDark}>\r\n\t\t\t\t\t{switchOffLang}\r\n\t\t\t\t</SyntaxHighlighter>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Localization\r\n"]},"metadata":{},"sourceType":"module"}