{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/mentions/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { Mentions, Form, Button } from 'antd';\nconst {\n  Option,\n  getMentions\n} = Mentions;\n\nconst FormDemo = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const onFinish = async () => {\n    try {\n      const values = await form.validateFields();\n      console.log('Submit:', values);\n    } catch (errInfo) {\n      console.log('Error:', errInfo);\n    }\n  };\n\n  const checkMention = async (rule, value, callback) => {\n    const mentions = getMentions(value);\n\n    if (mentions.length < 2) {\n      throw new Error('More than one must be selected!');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"horizontal\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"coders\",\n      label: \"Top coders\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      },\n      rules: [{\n        validator: checkMention\n      }],\n      children: /*#__PURE__*/_jsxDEV(Mentions, {\n        rows: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"afc163\",\n          children: \"afc163\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"zombieJ\",\n          children: \"zombieJ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"yesmeck\",\n          children: \"yesmeck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"bio\",\n      label: \"Bio\",\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 16\n      },\n      rules: [{\n        required: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Mentions, {\n        rows: \"3\",\n        placeholder: \"You can use @ to ref user here\",\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"afc163\",\n          children: \"afc163\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"zombieJ\",\n          children: \"zombieJ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"yesmeck\",\n          children: \"yesmeck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        span: 14,\n        offset: 6\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"submit\",\n        type: \"primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(Button, {\n        htmlType: \"button\",\n        onClick: onReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormDemo, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = FormDemo;\nexport class MentionForm extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(FormDemo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default MentionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDemo\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/mentions/Form.js"],"names":["React","Component","Mentions","Form","Button","Option","getMentions","FormDemo","form","useForm","onReset","resetFields","onFinish","values","validateFields","console","log","errInfo","checkMention","rule","value","callback","mentions","length","Error","span","validator","required","offset","MentionForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Mentions, Form, Button } from 'antd';\r\n\r\nconst { Option, getMentions } = Mentions;\r\n\r\nconst FormDemo = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = async () => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      console.log('Submit:', values);\r\n    } catch (errInfo) {\r\n      console.log('Error:', errInfo);\r\n    }\r\n  };\r\n\r\n  const checkMention = async (rule, value, callback) => {\r\n    const mentions = getMentions(value);\r\n\r\n    if (mentions.length < 2) {\r\n      throw new Error('More than one must be selected!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form form={form} layout=\"horizontal\" onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"coders\"\r\n        label=\"Top coders\"\r\n        labelCol={{\r\n          span: 6,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        rules={[\r\n          {\r\n            validator: checkMention,\r\n          },\r\n        ]}\r\n      >\r\n        <Mentions rows=\"1\">\r\n          <Option value=\"afc163\">afc163</Option>\r\n          <Option value=\"zombieJ\">zombieJ</Option>\r\n          <Option value=\"yesmeck\">yesmeck</Option>\r\n        </Mentions>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"bio\"\r\n        label=\"Bio\"\r\n        labelCol={{\r\n          span: 6,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        rules={[\r\n          {\r\n            required: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Mentions rows=\"3\" placeholder=\"You can use @ to ref user here\">\r\n          <Option value=\"afc163\">afc163</Option>\r\n          <Option value=\"zombieJ\">zombieJ</Option>\r\n          <Option value=\"yesmeck\">yesmeck</Option>\r\n        </Mentions>\r\n      </Form.Item>\r\n      <Form.Item\r\n        wrapperCol={{\r\n          span: 14,\r\n          offset: 6,\r\n        }}\r\n      >\r\n        <Button htmlType=\"submit\" type=\"primary\">\r\n          Submit\r\n        </Button>\r\n        &nbsp;&nbsp;&nbsp;\r\n        <Button htmlType=\"button\" onClick={onReset}>\r\n          Reset\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class MentionForm extends Component {\r\n  render() {\r\n    return <FormDemo />;\r\n  }\r\n}\r\n\r\nexport default MentionForm;\r\n"]},"metadata":{},"sourceType":"module"}