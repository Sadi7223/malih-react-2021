{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/DemoCard/CardToolbar.js\";\nimport React, { Component } from \"react\";\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { DownSquareOutlined, UpSquareOutlined, CheckOutlined, SnippetsOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\nexport class CardToolbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      copied: false,\n      copyTooltipVisible: false\n    };\n\n    this.handleCodeCopied = () => {\n      this.setState({\n        copied: true\n      });\n    };\n\n    this.onCopyTooltipVisibleChange = visible => {\n      if (visible) {\n        this.setState({\n          copyTooltipVisible: visible,\n          copied: false\n        });\n        return;\n      }\n\n      this.setState({\n        copyTooltipVisible: visible\n      });\n    };\n  }\n\n  render() {\n    const {\n      code,\n      expand,\n      isExpand\n    } = this.props;\n    const {\n      copied,\n      copyTooltipVisible\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-box-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `code-box-icon mr-3 ${copied && copyTooltipVisible ? 'text-success' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: copied ? 'Copied' : 'Copy code',\n          visible: copyTooltipVisible,\n          onVisibleChange: this.onCopyTooltipVisibleChange,\n          children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: code,\n            onCopy: () => this.handleCodeCopied(),\n            children: copied ? /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(SnippetsOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"code-box-icon\",\n        onClick: expand,\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: isExpand ? 'Hide code' : 'Show code',\n          children: isExpand ? /*#__PURE__*/_jsxDEV(UpSquareOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(DownSquareOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default CardToolbar;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/DemoCard/CardToolbar.js"],"names":["React","Component","CopyToClipboard","DownSquareOutlined","UpSquareOutlined","CheckOutlined","SnippetsOutlined","Tooltip","CardToolbar","state","copied","copyTooltipVisible","handleCodeCopied","setState","onCopyTooltipVisibleChange","visible","render","code","expand","isExpand","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SACEC,kBADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,gBAJF,QAKO,mBALP;AAMA,SAASC,OAAT,QAAwB,MAAxB;AAEA,OAAO,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEzCQ,KAFyC,GAEjC;AACNC,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,kBAAkB,EAAE;AAFd,KAFiC;;AAAA,SAOzCC,gBAPyC,GAOtB,MAAM;AACvB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KATwC;;AAAA,SAWzCI,0BAXyC,GAWZC,OAAO,IAAI;AACtC,UAAIA,OAAJ,EAAa;AACX,aAAKF,QAAL,CAAc;AACZF,UAAAA,kBAAkB,EAAEI,OADR;AAEZL,UAAAA,MAAM,EAAE;AAFI,SAAd;AAIA;AACD;;AACD,WAAKG,QAAL,CAAc;AACZF,QAAAA,kBAAkB,EAAEI;AADR,OAAd;AAGD,KAtBwC;AAAA;;AAwBzCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA6B,KAAKC,KAAxC;AACA,UAAM;AAAEV,MAAAA,MAAF;AAAUC,MAAAA;AAAV,QAAiC,KAAKF,KAA5C;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAG,sBAAqBC,MAAM,IAAIC,kBAAV,GAA+B,cAA/B,GAAgD,EAAG,EAA1F;AAAA,+BACE,QAAC,OAAD;AACE,UAAA,KAAK,EAAED,MAAM,GAAG,QAAH,GAAc,WAD7B;AAEE,UAAA,OAAO,EAAEC,kBAFX;AAGE,UAAA,eAAe,EAAE,KAAKG,0BAHxB;AAAA,iCAKE,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAEG,IAAvB;AAA6B,YAAA,MAAM,EAAE,MAAM,KAAKL,gBAAL,EAA3C;AAAA,sBACGF,MAAM,gBAAG,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,oBAAH,gBAAuB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAgC,QAAA,OAAO,EAAEQ,MAAzC;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEC,QAAQ,GAAE,WAAF,GAAc,WAAtC;AAAA,oBACGA,QAAQ,gBAAI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAAJ,gBAA4B,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA/CwC;AAkD3C,eAAeX,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport {\r\n  DownSquareOutlined,\r\n  UpSquareOutlined,\r\n  CheckOutlined,\r\n  SnippetsOutlined,\r\n} from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport class CardToolbar extends Component {\r\n\r\n  state = {\r\n    copied: false,\r\n    copyTooltipVisible: false,\r\n  };\r\n\r\n  handleCodeCopied = () => {\r\n    this.setState({ copied: true });\r\n  };\r\n\r\n  onCopyTooltipVisibleChange = visible => {\r\n    if (visible) {\r\n      this.setState({\r\n        copyTooltipVisible: visible,\r\n        copied: false,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({\r\n      copyTooltipVisible: visible,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { code, expand ,isExpand } = this.props;\r\n    const { copied, copyTooltipVisible } = this.state;\r\n    return (\r\n      <div className=\"code-box-actions\">\r\n        <span className={`code-box-icon mr-3 ${copied && copyTooltipVisible ? 'text-success' : ''}`}> \r\n          <Tooltip \r\n            title={copied ? 'Copied' : 'Copy code'}\r\n            visible={copyTooltipVisible}\r\n            onVisibleChange={this.onCopyTooltipVisibleChange}\r\n          >\r\n            <CopyToClipboard text={code} onCopy={() => this.handleCodeCopied()}>\r\n              {copied ? <CheckOutlined /> : <SnippetsOutlined />}\r\n            </CopyToClipboard>\r\n          </Tooltip>\r\n        </span>\r\n        <span className=\"code-box-icon\" onClick={expand}> \r\n          <Tooltip title={isExpand? 'Hide code':'Show code'}>\r\n            {isExpand ?  <UpSquareOutlined />  : <DownSquareOutlined />}\r\n          </Tooltip>\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardToolbar;\r\n"]},"metadata":{},"sourceType":"module"}