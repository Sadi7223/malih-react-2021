{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tabs/EditableCard.js\";\nimport React, { Component } from \"react\";\nimport { Tabs } from \"antd\";\nconst {\n  TabPane\n} = Tabs;\nexport class EditableCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = activeKey => {\n      this.setState({\n        activeKey\n      });\n    };\n\n    this.onEdit = (targetKey, action) => {\n      this[action](targetKey);\n    };\n\n    this.add = () => {\n      const {\n        panes\n      } = this.state;\n      const activeKey = `newTab${this.newTabIndex++}`;\n      panes.push({\n        title: \"New Tab\",\n        content: \"Content of new Tab\",\n        key: activeKey\n      });\n      this.setState({\n        panes,\n        activeKey\n      });\n    };\n\n    this.remove = targetKey => {\n      let {\n        activeKey\n      } = this.state;\n      let lastIndex;\n      this.state.panes.forEach((pane, i) => {\n        if (pane.key === targetKey) {\n          lastIndex = i - 1;\n        }\n      });\n      const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n\n      if (panes.length && activeKey === targetKey) {\n        if (lastIndex >= 0) {\n          activeKey = panes[lastIndex].key;\n        } else {\n          activeKey = panes[0].key;\n        }\n      }\n\n      this.setState({\n        panes,\n        activeKey\n      });\n    };\n\n    this.newTabIndex = 0;\n    const _panes = [{\n      title: \"Tab 1\",\n      content: \"Content of Tab 1\",\n      key: \"1\"\n    }, {\n      title: \"Tab 2\",\n      content: \"Content of Tab 2\",\n      key: \"2\"\n    }, {\n      title: \"Tab 3\",\n      content: \"Content of Tab 3\",\n      key: \"3\",\n      closable: false\n    }];\n    this.state = {\n      activeKey: _panes[0].key,\n      panes: _panes\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Tabs, {\n      onChange: this.onChange,\n      activeKey: this.state.activeKey,\n      type: \"editable-card\",\n      onEdit: this.onEdit,\n      children: this.state.panes.map(pane => /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: pane.title,\n        closable: pane.closable,\n        children: pane.content\n      }, pane.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default EditableCard;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tabs/EditableCard.js"],"names":["React","Component","Tabs","TabPane","EditableCard","constructor","props","onChange","activeKey","setState","onEdit","targetKey","action","add","panes","state","newTabIndex","push","title","content","key","remove","lastIndex","forEach","pane","i","filter","length","closable","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Tabs } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nexport class EditableCard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.newTabIndex = 0;\r\n    const panes = [\r\n      { title: \"Tab 1\", content: \"Content of Tab 1\", key: \"1\" },\r\n      { title: \"Tab 2\", content: \"Content of Tab 2\", key: \"2\" },\r\n      {\r\n        title: \"Tab 3\",\r\n        content: \"Content of Tab 3\",\r\n        key: \"3\",\r\n        closable: false\r\n      }\r\n    ];\r\n    this.state = {\r\n      activeKey: panes[0].key,\r\n      panes\r\n    };\r\n  }\r\n\r\n  onChange = activeKey => {\r\n    this.setState({ activeKey });\r\n  };\r\n\r\n  onEdit = (targetKey, action) => {\r\n    this[action](targetKey);\r\n  };\r\n\r\n  add = () => {\r\n    const { panes } = this.state;\r\n    const activeKey = `newTab${this.newTabIndex++}`;\r\n    panes.push({\r\n      title: \"New Tab\",\r\n      content: \"Content of new Tab\",\r\n      key: activeKey\r\n    });\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  remove = targetKey => {\r\n    let { activeKey } = this.state;\r\n    let lastIndex;\r\n    this.state.panes.forEach((pane, i) => {\r\n      if (pane.key === targetKey) {\r\n        lastIndex = i - 1;\r\n      }\r\n    });\r\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\r\n    if (panes.length && activeKey === targetKey) {\r\n      if (lastIndex >= 0) {\r\n        activeKey = panes[lastIndex].key;\r\n      } else {\r\n        activeKey = panes[0].key;\r\n      }\r\n    }\r\n    this.setState({ panes, activeKey });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Tabs\r\n        onChange={this.onChange}\r\n        activeKey={this.state.activeKey}\r\n        type=\"editable-card\"\r\n        onEdit={this.onEdit}\r\n      >\r\n        {this.state.panes.map(pane => (\r\n          <TabPane tab={pane.title} key={pane.key} closable={pane.closable}>\r\n            {pane.content}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableCard;\r\n"]},"metadata":{},"sourceType":"module"}