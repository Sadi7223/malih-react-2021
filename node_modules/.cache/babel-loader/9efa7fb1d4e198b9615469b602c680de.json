{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/general/icon/IconDisplay.js\";\nimport React, { Component } from 'react';\nimport { FilledIcon, OutlinedIcon, TwoToneIcon } from './themeIcons';\nimport { categories } from './fields';\nimport { Radio, Input } from 'antd';\nimport Category from './Category';\nimport debounce from 'lodash/debounce';\nimport Icon, * as AntdIcons from '@ant-design/icons';\nconst allIcons = AntdIcons;\nexport const ThemeType = {\n  Filled: 'Filled',\n  Outlined: 'Outlined',\n  TwoTone: 'TwoTone'\n};\n\nclass IconDisplay extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theme: ThemeType.Outlined,\n      searchKey: ''\n    };\n\n    this.handleChangeTheme = e => {\n      this.setState({\n        theme: e.target.value\n      });\n    };\n\n    this.handleSearchIcon = searchKey => {\n      this.setState(prevState => ({ ...prevState,\n        searchKey\n      }));\n    };\n\n    this.handleSearchIcon = debounce(this.handleSearchIcon, 300);\n  }\n\n  renderCategories() {\n    const {\n      searchKey = '',\n      theme\n    } = this.state;\n    return Object.keys(categories).map(key => {\n      let iconList = categories[key];\n\n      if (searchKey) {\n        iconList = iconList.filter(iconName => iconName.toLowerCase().includes(searchKey.toLowerCase()));\n      }\n\n      return {\n        category: key,\n        icons: iconList.map(iconName => iconName + theme).filter(iconName => allIcons[iconName])\n      };\n    }).filter(({\n      icons\n    }) => !!icons.length).map(({\n      category,\n      icons\n    }) => /*#__PURE__*/_jsxDEV(Category, {\n      title: category,\n      theme: theme,\n      icons: icons,\n      newIcons: IconDisplay.newIconNames\n    }, category, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-md-flex\",\n        children: [/*#__PURE__*/_jsxDEV(Radio.Group, {\n          value: this.state.theme,\n          onChange: this.handleChangeTheme,\n          buttonStyle: \"solid\",\n          children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: ThemeType.Outlined,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              component: OutlinedIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), \" outlined\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: ThemeType.Filled,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              component: FilledIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), \" filled\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: ThemeType.TwoTone,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              component: TwoToneIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), \" two-tone\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 mt-md-0 ml-md-3 d-inline-flex flex-fill\",\n          children: /*#__PURE__*/_jsxDEV(Input.Search, {\n            placeholder: \"Search icon here\",\n            allowClear: true,\n            onChange: e => this.handleSearchIcon(e.currentTarget.value),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), this.renderCategories()]\n    }, void 0, true);\n  }\n\n}\n\nIconDisplay.categories = categories;\nIconDisplay.newIconNames = [];\nexport default IconDisplay;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/general/icon/IconDisplay.js"],"names":["React","Component","FilledIcon","OutlinedIcon","TwoToneIcon","categories","Radio","Input","Category","debounce","Icon","AntdIcons","allIcons","ThemeType","Filled","Outlined","TwoTone","IconDisplay","constructor","props","state","theme","searchKey","handleChangeTheme","e","setState","target","value","handleSearchIcon","prevState","renderCategories","Object","keys","map","key","iconList","filter","iconName","toLowerCase","includes","category","icons","length","newIconNames","render","currentTarget"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { FilledIcon, OutlinedIcon, TwoToneIcon } from './themeIcons';\r\nimport { categories } from './fields';\r\nimport { Radio, Input } from 'antd';\r\nimport Category from './Category';\r\nimport debounce from 'lodash/debounce';\r\nimport Icon, * as AntdIcons from '@ant-design/icons';\r\n\r\nconst allIcons = AntdIcons;\r\n\r\nexport const ThemeType = {\r\n  Filled: 'Filled',\r\n  Outlined: 'Outlined',\r\n  TwoTone: 'TwoTone',\r\n}\r\n\r\nclass IconDisplay extends Component {\r\n  static categories = categories;\r\n\r\n  static newIconNames = [];\r\n\r\n  state = {\r\n    theme: ThemeType.Outlined,\r\n    searchKey: '',\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSearchIcon = debounce(this.handleSearchIcon, 300);\r\n  }\r\n\r\n  handleChangeTheme = e => {\r\n    this.setState({\r\n      theme: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSearchIcon = (searchKey) => {\r\n    this.setState(prevState => ({\r\n      ...prevState,\r\n      searchKey,\r\n    }));\r\n  };\r\n\r\n  renderCategories() {\r\n    const { searchKey = '', theme } = this.state;\r\n\r\n    return Object.keys(categories)\r\n      .map((key) => {\r\n        let iconList = categories[key];\r\n        if (searchKey) {\r\n          iconList = iconList.filter(iconName =>\r\n            iconName.toLowerCase().includes(searchKey.toLowerCase()),\r\n          );\r\n        }\r\n\r\n        return {\r\n          category: key,\r\n          icons: iconList.map(iconName => iconName + theme).filter(iconName => allIcons[iconName]),\r\n        };\r\n      })\r\n      .filter(({ icons }) => !!icons.length)\r\n      .map(({ category, icons }) => (\r\n        <Category\r\n          key={category}\r\n          title={category}\r\n          theme={theme}\r\n          icons={icons}\r\n          newIcons={IconDisplay.newIconNames}\r\n        />\r\n      ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"d-md-flex\">\r\n          <Radio.Group\r\n            value={this.state.theme}\r\n            onChange={this.handleChangeTheme}\r\n            buttonStyle=\"solid\"\r\n          >\r\n            <Radio.Button value={ThemeType.Outlined}>\r\n              <Icon component={OutlinedIcon} /> outlined\r\n            </Radio.Button>\r\n            <Radio.Button value={ThemeType.Filled}>\r\n              <Icon component={FilledIcon} /> filled\r\n            </Radio.Button>\r\n            <Radio.Button value={ThemeType.TwoTone}>\r\n              <Icon component={TwoToneIcon} /> two-tone\r\n            </Radio.Button>\r\n          </Radio.Group>\r\n          <div className=\"mt-3 mt-md-0 ml-md-3 d-inline-flex flex-fill\">\r\n            <Input.Search\r\n              placeholder='Search icon here'\r\n              allowClear\r\n              onChange={e => this.handleSearchIcon(e.currentTarget.value)}\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.renderCategories()}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IconDisplay\r\n"]},"metadata":{},"sourceType":"module"}