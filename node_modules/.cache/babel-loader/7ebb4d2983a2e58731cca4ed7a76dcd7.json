{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/maps/simple-map/StateMap.js\";\nimport React from \"react\";\nimport { geoCentroid } from \"d3-geo\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport allStates from \"assets/data/allstates.json\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    height: 200,\n    projectionConfig: {\n      scale: 450\n    },\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: ({\n        geographies\n      }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          stroke: \"#FFF\",\n          geography: geo,\n          fill: \"#DDD\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)), geographies.map(geo => {\n          const centroid = geoCentroid(geo);\n          const cur = allStates.find(s => s.val === geo.id);\n          return /*#__PURE__*/_jsxDEV(\"g\", {\n            children: cur && centroid[0] > -160 && centroid[0] < -67 && (Object.keys(offsets).indexOf(cur.id) === -1 ? /*#__PURE__*/_jsxDEV(Marker, {\n              coordinates: centroid,\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                y: \"2\",\n                fontSize: 7,\n                textAnchor: \"middle\",\n                children: cur.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(Annotation, {\n              subject: centroid,\n              dx: offsets[cur.id][0],\n              dy: offsets[cur.id][1],\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                x: 4,\n                fontSize: 7,\n                alignmentBaseline: \"middle\",\n                children: cur.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this))\n          }, geo.rsmKey + \"-name\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/maps/simple-map/StateMap.js"],"names":["React","geoCentroid","ComposableMap","Geographies","Geography","Marker","Annotation","allStates","geoUrl","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","scale","geographies","map","geo","rsmKey","centroid","cur","find","s","val","id","Object","keys","indexOf"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { geoCentroid } from \"d3-geo\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Annotation\r\n} from \"react-simple-maps\";\r\n\r\nimport allStates from \"assets/data/allstates.json\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21]\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap height={200} projectionConfig={{ scale: 450 }} projection=\"geoAlbersUsa\">\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) => (\r\n          <>\r\n            {geographies.map(geo => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke=\"#FFF\"\r\n                geography={geo}\r\n                fill=\"#DDD\"\r\n              />\r\n            ))}\r\n            {geographies.map(geo => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find(s => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + \"-name\"}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y=\"2\" fontSize={7} textAnchor=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={7} alignmentBaseline=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}