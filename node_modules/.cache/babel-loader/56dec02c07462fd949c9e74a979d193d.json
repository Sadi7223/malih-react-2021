{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport { Form, Input, Tooltip, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nconst {\n  Option\n} = Select;\nconst residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n};\n\nconst RegistrationForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  const prefixSelector = /*#__PURE__*/_jsxDEV(Form.Item, {\n    name: \"prefix\",\n    noStyle: true,\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 70\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"86\",\n        children: \"+86\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"87\",\n        children: \"+87\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\n\n  const onWebsiteChange = value => {\n    if (!value) {\n      setAutoCompleteResult([]);\n    } else {\n      setAutoCompleteResult(['.com', '.org', '.net'].map(domain => `${value}${domain}`));\n    }\n  };\n\n  const websiteOptions = autoCompleteResult.map(website => ({\n    label: website,\n    value: website\n  }));\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    initialValues: {\n      residence: ['zhejiang', 'hangzhou', 'xihu'],\n      prefix: '86'\n    },\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm Password\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Please confirm your password!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(rule, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject('The two passwords that you entered do not match!');\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"nickname\",\n      label: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Nickname\\xA0\", /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"What do you want others to call you?\",\n          children: /*#__PURE__*/_jsxDEV(QuestionCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this),\n      rules: [{\n        required: true,\n        message: 'Please input your nickname!',\n        whitespace: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"residence\",\n      label: \"Habitual Residence\",\n      rules: [{\n        type: 'array',\n        required: true,\n        message: 'Please select your habitual residence!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Cascader, {\n        options: residences\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"phone\",\n      label: \"Phone Number\",\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"website\",\n      label: \"Website\",\n      rules: [{\n        required: true,\n        message: 'Please input website!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(AutoComplete, {\n        options: websiteOptions,\n        onChange: onWebsiteChange,\n        placeholder: \"website\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Captcha\",\n      extra: \"We must make sure that your are a human.\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 8,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"captcha\",\n            noStyle: true,\n            rules: [{\n              required: true,\n              message: 'Please input the captcha you got!'\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Get captcha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: [\"I have read the \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationForm, \"TY8+cMsRaO9bLWjs4W3ddTl9qnU=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegistrationForm;\nexport class Register extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(RegistrationForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/Register.js"],"names":["React","Component","useState","Form","Input","Tooltip","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","QuestionCircleOutlined","Option","residences","value","label","children","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegistrationForm","form","useForm","onFinish","values","console","log","prefixSelector","width","autoCompleteResult","setAutoCompleteResult","onWebsiteChange","map","domain","websiteOptions","website","residence","prefix","type","message","required","getFieldValue","validator","rule","Promise","resolve","reject","whitespace","Register","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tooltip,\r\n  Cascader,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Checkbox,\r\n  Button,\r\n  AutoComplete,\r\n} from 'antd';\r\nimport { QuestionCircleOutlined } from '@ant-design/icons';\r\n\r\nconst { Option } = Select;\r\nconst residences = [\r\n  {\r\n    value: 'zhejiang',\r\n    label: 'Zhejiang',\r\n    children: [\r\n      {\r\n        value: 'hangzhou',\r\n        label: 'Hangzhou',\r\n        children: [\r\n          {\r\n            value: 'xihu',\r\n            label: 'West Lake',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    value: 'jiangsu',\r\n    label: 'Jiangsu',\r\n    children: [\r\n      {\r\n        value: 'nanjing',\r\n        label: 'Nanjing',\r\n        children: [\r\n          {\r\n            value: 'zhonghuamen',\r\n            label: 'Zhong Hua Men',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n      offset: 8,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegistrationForm = () => {\r\n  const [form] = Form.useForm();\r\n\r\n  const onFinish = values => {\r\n    console.log('Received values of form: ', values);\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select\r\n        style={{\r\n          width: 70,\r\n        }}\r\n      >\r\n        <Option value=\"86\">+86</Option>\r\n        <Option value=\"87\">+87</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n\r\n  const onWebsiteChange = value => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(['.com', '.org', '.net'].map(domain => `${value}${domain}`));\r\n    }\r\n  };\r\n\r\n  const websiteOptions = autoCompleteResult.map(website => ({\r\n    label: website,\r\n    value: website,\r\n  }));\r\n  return (\r\n    <Form\r\n      {...formItemLayout}\r\n      form={form}\r\n      name=\"register\"\r\n      onFinish={onFinish}\r\n      initialValues={{\r\n        residence: ['zhejiang', 'hangzhou', 'xihu'],\r\n        prefix: '86',\r\n      }}\r\n      scrollToFirstError\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"nickname\"\r\n        label={\r\n          <span>\r\n            Nickname&nbsp;\r\n            <Tooltip title=\"What do you want others to call you?\">\r\n              <QuestionCircleOutlined />\r\n            </Tooltip>\r\n          </span>\r\n        }\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your nickname!',\r\n            whitespace: true,\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"residence\"\r\n        label=\"Habitual Residence\"\r\n        rules={[\r\n          {\r\n            type: 'array',\r\n            required: true,\r\n            message: 'Please select your habitual residence!',\r\n          },\r\n        ]}\r\n      >\r\n        <Cascader options={residences} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"phone\"\r\n        label=\"Phone Number\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone number!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          addonBefore={prefixSelector}\r\n          style={{\r\n            width: '100%',\r\n          }}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"website\"\r\n        label=\"Website\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input website!',\r\n          },\r\n        ]}\r\n      >\r\n        <AutoComplete options={websiteOptions} onChange={onWebsiteChange} placeholder=\"website\">\r\n          <Input />\r\n        </AutoComplete>\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n        <Row gutter={8}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              name=\"captcha\"\r\n              noStyle\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input the captcha you got!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Button>Get captcha</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n\r\n      <Form.Item name=\"agreement\" valuePropName=\"checked\" {...tailFormItemLayout}>\r\n        <Checkbox>\r\n          I have read the <a href=\"/#\">agreement</a>\r\n        </Checkbox>\r\n      </Form.Item>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class Register extends Component {\r\n  render() {\r\n    return (\r\n      <RegistrationForm />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register\r\n"]},"metadata":{},"sourceType":"module"}