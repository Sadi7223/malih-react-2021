{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/ControlRef.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button, Select } from 'antd';\nconst {\n  Option\n} = Select;\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\nexport class ControlRef extends Component {\n  constructor(...args) {\n    super(...args);\n    this.formRef = /*#__PURE__*/React.createRef();\n\n    this.onGenderChange = value => {\n      this.formRef.current.setFieldsValue({\n        note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`\n      });\n    };\n\n    this.onFinish = values => {\n      console.log(values);\n    };\n\n    this.onReset = () => {\n      this.formRef.current.resetFields();\n    };\n\n    this.onFill = () => {\n      this.formRef.current.setFieldsValue({\n        note: 'Hello world!',\n        gender: 'male'\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      ref: this.formRef,\n      name: \"control-ref\",\n      onFinish: this.onFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"note\",\n        label: \"Note\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"gender\",\n        label: \"Gender\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select a option and change input text above\",\n          onChange: this.onGenderChange,\n          allowClear: true,\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"male\",\n            children: \"male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"female\",\n            children: \"female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"other\",\n            children: \"other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        noStyle: true,\n        shouldUpdate: (prevValues, currentValues) => prevValues.gender !== currentValues.gender,\n        children: ({\n          getFieldValue\n        }) => getFieldValue('gender') === 'other' ? /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"customizeGender\",\n          label: \"Customize Gender\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-2\",\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-2\",\n          htmlType: \"button\",\n          onClick: this.onReset,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mr-2\",\n          type: \"link\",\n          htmlType: \"button\",\n          onClick: this.onFill,\n          children: \"Fill form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default ControlRef;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/ControlRef.js"],"names":["React","Component","Form","Input","Button","Select","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","ControlRef","formRef","createRef","onGenderChange","value","current","setFieldsValue","note","onFinish","values","console","log","onReset","resetFields","onFill","gender","render","required","prevValues","currentValues","getFieldValue"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,MAA5C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,MAAnB;AACA,MAAME,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAE;AADE,GADG;AAIbC,EAAAA,UAAU,EAAE;AACVD,IAAAA,IAAI,EAAE;AADI;AAJC,CAAf;AAQA,MAAME,UAAU,GAAG;AACjBD,EAAAA,UAAU,EAAE;AACVE,IAAAA,MAAM,EAAE,CADE;AAEVH,IAAAA,IAAI,EAAE;AAFI;AADK,CAAnB;AAOA,OAAO,MAAMI,UAAN,SAAyBZ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACzCa,OADyC,gBAC/Bd,KAAK,CAACe,SAAN,EAD+B;;AAAA,SAGxCC,cAHwC,GAGvBC,KAAK,IAAI;AACxB,WAAKH,OAAL,CAAaI,OAAb,CAAqBC,cAArB,CAAoC;AAClCC,QAAAA,IAAI,EAAG,OAAMH,KAAK,KAAK,MAAV,GAAmB,KAAnB,GAA2B,MAAO;AADb,OAApC;AAGD,KAPuC;;AAAA,SASxCI,QATwC,GAS7BC,MAAM,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,KAXuC;;AAAA,SAaxCG,OAbwC,GAa9B,MAAM;AACd,WAAKX,OAAL,CAAaI,OAAb,CAAqBQ,WAArB;AACD,KAfuC;;AAAA,SAiBxCC,MAjBwC,GAiB/B,MAAM;AACb,WAAKb,OAAL,CAAaI,OAAb,CAAqBC,cAArB,CAAoC;AAClCC,QAAAA,IAAI,EAAE,cAD4B;AAElCQ,QAAAA,MAAM,EAAE;AAF0B,OAApC;AAID,KAtBuC;AAAA;;AAwBxCC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD,OAAUtB,MAAV;AAAkB,MAAA,GAAG,EAAE,KAAKO,OAA5B;AAAqC,MAAA,IAAI,EAAC,aAA1C;AAAwD,MAAA,QAAQ,EAAE,KAAKO,QAAvE;AAAA,8BACE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAC,MAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACES,UAAAA,QAAQ,EAAE;AADZ,SADK,CAHT;AAAA,+BASE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,EAAE,CACL;AACEA,UAAAA,QAAQ,EAAE;AADZ,SADK,CAHT;AAAA,+BASE,QAAC,MAAD;AACE,UAAA,WAAW,EAAC,6CADd;AAEE,UAAA,QAAQ,EAAE,KAAKd,cAFjB;AAGE,UAAA,UAAU,MAHZ;AAAA,kCAKE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cAZF,eA+BE,QAAC,IAAD,CAAM,IAAN;AACE,QAAA,OAAO,MADT;AAEE,QAAA,YAAY,EAAE,CAACe,UAAD,EAAaC,aAAb,KAA+BD,UAAU,CAACH,MAAX,KAAsBI,aAAa,CAACJ,MAFnF;AAAA,kBAIG,CAAC;AAAEK,UAAAA;AAAF,SAAD,KACCA,aAAa,CAAC,QAAD,CAAb,KAA4B,OAA5B,gBACE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,KAAK,EAAC,kBAFR;AAGE,UAAA,KAAK,EAAE,CACL;AACEH,YAAAA,QAAQ,EAAE;AADZ,WADK,CAHT;AAAA,iCASE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,gBADF,GAYI;AAjBR;AAAA;AAAA;AAAA;AAAA,cA/BF,eAmDE,QAAC,IAAD,CAAM,IAAN,OAAenB,UAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,SAA9B;AAAwC,UAAA,QAAQ,EAAC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,QAAQ,EAAC,QAAlC;AAA2C,UAAA,OAAO,EAAE,KAAKc,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAC,MAAlB;AAAyB,UAAA,IAAI,EAAC,MAA9B;AAAqC,UAAA,QAAQ,EAAC,QAA9C;AAAuD,UAAA,OAAO,EAAE,KAAKE,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiED;;AA1FuC;AA6F1C,eAAed,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Input, Button, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nexport class ControlRef extends Component {\r\n\tformRef = React.createRef();\r\n\r\n  onGenderChange = value => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\r\n    });\r\n  };\r\n\r\n  onFinish = values => {\r\n    console.log(values);\r\n  };\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: 'Hello world!',\r\n      gender: 'male',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n        <Form.Item\r\n          name=\"note\"\r\n          label=\"Note\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"gender\"\r\n          label=\"Gender\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder=\"Select a option and change input text above\"\r\n            onChange={this.onGenderChange}\r\n            allowClear\r\n          >\r\n            <Option value=\"male\">male</Option>\r\n            <Option value=\"female\">female</Option>\r\n            <Option value=\"other\">other</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          noStyle\r\n          shouldUpdate={(prevValues, currentValues) => prevValues.gender !== currentValues.gender}\r\n        >\r\n          {({ getFieldValue }) =>\r\n            getFieldValue('gender') === 'other' ? (\r\n              <Form.Item\r\n                name=\"customizeGender\"\r\n                label=\"Customize Gender\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            ) : null\r\n          }\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button className=\"mr-2\" type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button className=\"mr-2\" htmlType=\"button\" onClick={this.onReset}>\r\n            Reset\r\n          </Button>\r\n          <Button className=\"mr-2\" type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n            Fill form\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ControlRef\r\n"]},"metadata":{},"sourceType":"module"}