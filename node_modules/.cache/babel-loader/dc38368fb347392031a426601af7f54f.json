{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/FormContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport { Form, Input, InputNumber, Modal, Button, Avatar, Typography } from 'antd';\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\nconst layout = {\n  labelCol: {\n    span: 8\n  },\n  wrapperCol: {\n    span: 16\n  }\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16\n  }\n};\n\nconst ModalForm = ({\n  visible,\n  onCancel\n}) => {\n  _s();\n\n  const [form] = Form.useForm();\n  const prevVisibleRef = useRef();\n  useEffect(() => {\n    prevVisibleRef.current = visible;\n  }, [visible]);\n  const prevVisible = prevVisibleRef.current;\n  useEffect(() => {\n    console.log(visible, prevVisible);\n\n    if (!visible && prevVisible) {\n      form.resetFields();\n    }\n  }, [form, prevVisible, visible]);\n\n  const onOk = () => {\n    form.submit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: \"Basic Drawer\",\n    visible: visible,\n    onOk: onOk,\n    onCancel: onCancel,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      name: \"userForm\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"name\",\n        label: \"User Name\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"age\",\n        label: \"User Age\",\n        rules: [{\n          required: true\n        }],\n        children: /*#__PURE__*/_jsxDEV(InputNumber, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ModalForm, \"SxnBH09g6dlGzMmXR8zmXbXQptk=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = ModalForm;\n\nconst Demo = () => {\n  _s2();\n\n  const [visible, setVisible] = useState(false);\n\n  const showUserModal = () => {\n    setVisible(true);\n  };\n\n  const hideUserModal = () => {\n    setVisible(false);\n  };\n\n  const onFinish = values => {\n    console.log('Finish:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form.Provider, {\n      onFormFinish: (name, {\n        values,\n        forms\n      }) => {\n        if (name === 'userForm') {\n          const {\n            basicForm\n          } = forms;\n          const users = basicForm.getFieldValue('users') || [];\n          basicForm.setFieldsValue({\n            users: [...users, values]\n          });\n          setVisible(false);\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form, { ...layout,\n        name: \"basicForm\",\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"group\",\n          label: \"Group Name\",\n          rules: [{\n            required: true\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"User List\",\n          shouldUpdate: (prevValues, curValues) => prevValues.users !== curValues.users,\n          children: ({\n            getFieldValue\n          }) => {\n            const users = getFieldValue('users') || [];\n            return users.length ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"user\",\n                children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                  icon: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), user.name, \" - \", user.age]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Typography.Text, {\n              className: \"ant-form-text\",\n              type: \"secondary\",\n              children: [\"( \", /*#__PURE__*/_jsxDEV(SmileOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 21\n              }, this), \" No user yet. )\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            type: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"button\",\n            style: {\n              marginLeft: 8\n            },\n            onClick: showUserModal,\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalForm, {\n        visible: visible,\n        onCancel: hideUserModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(Demo, \"OGsIWlGlwYpVUqIrDReJ1GWx7rw=\");\n\n_c2 = Demo;\nexport class FormContext extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport default FormContext;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ModalForm\");\n$RefreshReg$(_c2, \"Demo\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/FormContext.js"],"names":["React","Component","useState","useEffect","useRef","Form","Input","InputNumber","Modal","Button","Avatar","Typography","SmileOutlined","UserOutlined","layout","labelCol","span","wrapperCol","tailLayout","offset","ModalForm","visible","onCancel","form","useForm","prevVisibleRef","current","prevVisible","console","log","resetFields","onOk","submit","required","Demo","setVisible","showUserModal","hideUserModal","onFinish","values","name","forms","basicForm","users","getFieldValue","setFieldsValue","prevValues","curValues","length","map","user","index","age","marginLeft","FormContext","render"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\r\nimport { Form, Input, InputNumber, Modal, Button, Avatar, Typography } from 'antd';\r\nimport { SmileOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 8,\r\n  },\r\n  wrapperCol: {\r\n    span: 16,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 8,\r\n    span: 16,\r\n  },\r\n};\r\n\r\nconst ModalForm = ({ visible, onCancel }) => {\r\n  const [form] = Form.useForm();\r\n  const prevVisibleRef = useRef();\r\n  useEffect(() => {\r\n    prevVisibleRef.current = visible;\r\n  }, [visible]);\r\n  const prevVisible = prevVisibleRef.current;\r\n  useEffect(() => {\r\n    console.log(visible, prevVisible);\r\n\r\n    if (!visible && prevVisible) {\r\n      form.resetFields();\r\n    }\r\n  }, [form, prevVisible, visible]);\r\n\r\n  const onOk = () => {\r\n    form.submit();\r\n  };\r\n\r\n  return (\r\n    <Modal title=\"Basic Drawer\" visible={visible} onOk={onOk} onCancel={onCancel}>\r\n      <Form form={form} layout=\"vertical\" name=\"userForm\">\r\n        <Form.Item\r\n          name=\"name\"\r\n          label=\"User Name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"age\"\r\n          label=\"User Age\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n            },\r\n          ]}\r\n        >\r\n          <InputNumber />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst Demo = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const showUserModal = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const hideUserModal = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onFinish = values => {\r\n    console.log('Finish:', values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form.Provider\r\n        onFormFinish={(name, { values, forms }) => {\r\n          if (name === 'userForm') {\r\n            const { basicForm } = forms;\r\n            const users = basicForm.getFieldValue('users') || [];\r\n            basicForm.setFieldsValue({\r\n              users: [...users, values],\r\n            });\r\n            setVisible(false);\r\n          }\r\n        }}\r\n      >\r\n        <Form {...layout} name=\"basicForm\" onFinish={onFinish}>\r\n          <Form.Item\r\n            name=\"group\"\r\n            label=\"Group Name\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"User List\"\r\n            shouldUpdate={(prevValues, curValues) => prevValues.users !== curValues.users}\r\n          >\r\n            {({ getFieldValue }) => {\r\n              const users = getFieldValue('users') || [];\r\n              return users.length ? (\r\n                <ul>\r\n                  {users.map((user, index) => (\r\n                    <li key={index} className=\"user\">\r\n                      <Avatar icon={<UserOutlined />} />\r\n                      {user.name} - {user.age}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <Typography.Text className=\"ant-form-text\" type=\"secondary\">\r\n                  ( <SmileOutlined /> No user yet. )\r\n                </Typography.Text>\r\n              );\r\n            }}\r\n          </Form.Item>\r\n          <Form.Item {...tailLayout}>\r\n            <Button htmlType=\"submit\" type=\"primary\">\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              htmlType=\"button\"\r\n              style={{\r\n                marginLeft: 8,\r\n              }}\r\n              onClick={showUserModal}\r\n            >\r\n              Add User\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <ModalForm visible={visible} onCancel={hideUserModal} />\r\n      </Form.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport class FormContext extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Demo />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default FormContext\r\n"]},"metadata":{},"sourceType":"module"}