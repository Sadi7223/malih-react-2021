{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/layout-components/HeaderNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\nimport Logo from './Logo';\nimport NavNotification from './NavNotification';\nimport NavProfile from './NavProfile';\nimport NavLanguage from './NavLanguage';\nimport NavPanel from './NavPanel';\nimport NavSearch from './NavSearch';\nimport SearchInput from './NavSearch/SearchInput.js';\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\nimport utils from 'utils';\nconst {\n  Header\n} = Layout;\nexport const HeaderNav = props => {\n  _s();\n\n  const {\n    navCollapsed,\n    mobileNav,\n    navType,\n    headerNavColor,\n    toggleCollapsedNav,\n    onMobileNavToggle,\n    isMobile,\n    currentTheme\n  } = props;\n  const [searchActive, setSearchActive] = useState(false);\n\n  const onSearchActive = () => {\n    setSearchActive(true);\n  };\n\n  const onSearchClose = () => {\n    setSearchActive(false);\n  };\n\n  const onToggle = () => {\n    if (!isMobile) {\n      toggleCollapsedNav(!navCollapsed);\n    } else {\n      onMobileNavToggle(!mobileNav);\n    }\n  };\n\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n\n  const mode = () => {\n    if (!headerNavColor) {\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff');\n    }\n\n    return utils.getColorContrast(headerNavColor);\n  };\n\n  const navMode = mode();\n\n  const getNavWidth = () => {\n    if (isNavTop || isMobile) {\n      return '0px';\n    }\n\n    if (navCollapsed) {\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`;\n    } else {\n      return `${SIDE_NAV_WIDTH}px`;\n    }\n  };\n\n  useEffect(() => {\n    if (!isMobile) {\n      onSearchClose();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Header, {\n    className: `app-header ${navMode}`,\n    style: {\n      backgroundColor: headerNavColor\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(Logo, {\n        logoType: navMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nav\",\n        style: {\n          width: `calc(100% - ${getNavWidth()})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-left\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"ant-menu ant-menu-root ant-menu-horizontal\",\n            children: [isNavTop && !isMobile ? null : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ant-menu-item ant-menu-item-only-child\",\n              onClick: () => {\n                onToggle();\n              },\n              children: navCollapsed || isMobile ? /*#__PURE__*/_jsxDEV(MenuUnfoldOutlined, {\n                className: \"nav-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 47\n              }, this) : /*#__PURE__*/_jsxDEV(MenuFoldOutlined, {\n                className: \"nav-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), isMobile ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ant-menu-item ant-menu-item-only-child\",\n              onClick: () => {\n                onSearchActive();\n              },\n              children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"ant-menu-item ant-menu-item-only-child\",\n              style: {\n                cursor: 'auto'\n              },\n              children: /*#__PURE__*/_jsxDEV(SearchInput, {\n                mode: mode,\n                isMobile: isMobile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-right\",\n          children: [/*#__PURE__*/_jsxDEV(NavNotification, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavLanguage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(NavPanel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavSearch, {\n          active: searchActive,\n          close: onSearchClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HeaderNav, \"NJiKCLchaeU7bL7YCduPQyYhvT0=\");\n\n_c = HeaderNav;\n\nconst mapStateToProps = ({\n  theme\n}) => {\n  const {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav,\n    currentTheme\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    headerNavColor,\n    mobileNav,\n    currentTheme\n  };\n};\n\nexport default connect(mapStateToProps, {\n  toggleCollapsedNav,\n  onMobileNavToggle\n})(HeaderNav);\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderNav\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/layout-components/HeaderNav.js"],"names":["React","useState","useEffect","connect","Layout","MenuFoldOutlined","MenuUnfoldOutlined","SearchOutlined","Logo","NavNotification","NavProfile","NavLanguage","NavPanel","NavSearch","SearchInput","toggleCollapsedNav","onMobileNavToggle","NAV_TYPE_TOP","SIDE_NAV_COLLAPSED_WIDTH","SIDE_NAV_WIDTH","utils","Header","HeaderNav","props","navCollapsed","mobileNav","navType","headerNavColor","isMobile","currentTheme","searchActive","setSearchActive","onSearchActive","onSearchClose","onToggle","isNavTop","mode","getColorContrast","navMode","getNavWidth","backgroundColor","width","cursor","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuFoldOutlined, MenuUnfoldOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport Logo from './Logo';\r\nimport NavNotification from './NavNotification';\r\nimport NavProfile from './NavProfile';\r\nimport NavLanguage from './NavLanguage';\r\nimport NavPanel from './NavPanel';\r\nimport NavSearch  from './NavSearch';\r\nimport SearchInput from './NavSearch/SearchInput.js'\r\nimport { toggleCollapsedNav, onMobileNavToggle } from 'redux/actions/Theme';\r\nimport { NAV_TYPE_TOP, SIDE_NAV_COLLAPSED_WIDTH, SIDE_NAV_WIDTH } from 'constants/ThemeConstant';\r\nimport utils from 'utils'\r\n\r\nconst { Header } = Layout;\r\n\r\nexport const HeaderNav = props => {\r\n  const { navCollapsed, mobileNav, navType, headerNavColor, toggleCollapsedNav, onMobileNavToggle, isMobile, currentTheme } = props;\r\n  const [searchActive, setSearchActive] = useState(false)\r\n\r\n  const onSearchActive = () => {\r\n    setSearchActive(true)\r\n  }\r\n\r\n  const onSearchClose = () => {\r\n    setSearchActive(false)\r\n  }\r\n\r\n  const onToggle = () => {\r\n    if(!isMobile) {\r\n      toggleCollapsedNav(!navCollapsed)\r\n    } else {\r\n      onMobileNavToggle(!mobileNav)\r\n    }\r\n  }\r\n\r\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false\r\n  const mode = ()=> {\r\n    if(!headerNavColor) {\r\n      return utils.getColorContrast(currentTheme === 'dark' ? '#00000' : '#ffffff' )\r\n    }\r\n    return utils.getColorContrast(headerNavColor)\r\n  }\r\n  const navMode = mode()\r\n  const getNavWidth = () => {\r\n    if(isNavTop || isMobile) {\r\n      return '0px'\r\n    }\r\n    if(navCollapsed) {\r\n      return `${SIDE_NAV_COLLAPSED_WIDTH}px`\r\n    } else {\r\n      return `${SIDE_NAV_WIDTH}px`\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!isMobile) {\r\n      onSearchClose()\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <Header className={`app-header ${navMode}`} style={{backgroundColor: headerNavColor}}>\r\n      <div className={`app-header-wrapper ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n        <Logo logoType={navMode}/>\r\n        <div className=\"nav\" style={{width: `calc(100% - ${getNavWidth()})`}}>\r\n          <div className=\"nav-left\">\r\n            <ul className=\"ant-menu ant-menu-root ant-menu-horizontal\">          \r\n              {\r\n                isNavTop && !isMobile ?\r\n                null\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onToggle()}}>\r\n                  {navCollapsed || isMobile ? <MenuUnfoldOutlined className=\"nav-icon\" /> : <MenuFoldOutlined className=\"nav-icon\" />}\r\n                </li>\r\n              }\r\n              {\r\n                isMobile ?\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" onClick={() => {onSearchActive()}}>\r\n                  <SearchOutlined />\r\n                </li>\r\n                :\r\n                <li className=\"ant-menu-item ant-menu-item-only-child\" style={{cursor: 'auto'}}>\r\n                  <SearchInput mode={mode} isMobile={isMobile} />\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n          <div className=\"nav-right\">\r\n            <NavNotification />\r\n            <NavLanguage />\r\n            <NavProfile />\r\n            <NavPanel />\r\n          </div>\r\n          <NavSearch active={searchActive} close={onSearchClose}/>\r\n        </div>\r\n      </div>\r\n    </Header>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, headerNavColor, mobileNav, currentTheme } =  theme;\r\n  return { navCollapsed, navType, headerNavColor, mobileNav, currentTheme }\r\n};\r\n\r\nexport default connect(mapStateToProps, {toggleCollapsedNav, onMobileNavToggle})(HeaderNav);"]},"metadata":{},"sourceType":"module"}