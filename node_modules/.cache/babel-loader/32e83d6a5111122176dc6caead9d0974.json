{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/ApiContainer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Markdown from 'react-markdown';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport syntaxTheme from \"./HLTheme\"; // export class ApiContainer extends Component {\n// \tconstructor() {\n//     super();\n//     this.state = { \n//       markdown: ''\n//     };\n//   }\n//   componentDidMount() {\n//     fetch(this.props.code).then(\n//       res => res.text()\n//     ).then(\n//       md => {\n//         this.setState({ \n//           markdown: md\n//         })\n//       }\n//     );\n//   }\n//   render() {\n// \t\tconst { markdown } = this.state;\n//     return (\n// \t\t\t<div className=\"api-container\">\n//         <Markdown \n//           source={markdown} \n//           renderers={\n//             {\n//               heading: h => (\n//                 <div className={`api-title h${h.level} ${h.children[0].props.value.includes('title: ')? '':h.children[0].props.value.split('').join('').replace(/\\s/g, '-').toLowerCase()}`}>\n//                   {h.children[0].props.value.includes('title: ')? h.children[0].props.value.replace('title: ', '') : h.children}\n//                 </div>\n//               ),\n//               paragraph: p => (\n//                 <React.Fragment>\n//                   {p.children[0].props.nodeKey === 'text-2-1-0'? '' :<p>{p.children}</p>}\n//                 </React.Fragment>\n//               ),\n//               code: c => (\n//                 <div className=\"api-code-highligher\">\n//                   <SyntaxHighlighter style={syntaxTheme}>\n//                     {c.value}\n//                   </SyntaxHighlighter>\n//                 </div>\n//               )\n//             }\n//           }\n//         />\n// \t\t\t</div>\n// \t\t);\n//   }\n// }\n// export default ApiContainer;\n\nconst ApiContainer = props => {\n  _s();\n\n  const {\n    code\n  } = props;\n  const [markdown, setMarkdown] = useState('');\n  useEffect(() => {\n    let isMounted = true;\n    fetch(code).then(res => res.text()).then(md => {\n      if (isMounted) {\n        setMarkdown(md);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, [code]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"api-container\",\n    children: /*#__PURE__*/_jsxDEV(Markdown, {\n      source: markdown,\n      renderers: {\n        heading: h => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `api-title h${h.level} ${h.children[0].props.value.includes('title: ') ? '' : h.children[0].props.value.split('').join('').replace(/\\s/g, '-').toLowerCase()}`,\n          children: h.children[0].props.value.includes('title: ') ? h.children[0].props.value.replace('title: ', '') : h.children\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this),\n        paragraph: p => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: p.children[0].props.nodeKey === 'text-2-1-0' ? '' : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: p.children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this),\n        code: c => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"api-code-highligher\",\n          children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n            style: syntaxTheme,\n            children: c.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ApiContainer, \"1hQJk/XxcTACgSbIBaIpkhT5VUo=\");\n\n_c = ApiContainer;\nexport default ApiContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiContainer\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/ApiContainer/index.js"],"names":["React","useState","useEffect","Markdown","SyntaxHighlighter","syntaxTheme","ApiContainer","props","code","markdown","setMarkdown","isMounted","fetch","then","res","text","md","heading","h","level","children","value","includes","split","join","replace","toLowerCase","paragraph","p","nodeKey","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Markdown from 'react-markdown';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport syntaxTheme from \"./HLTheme\";\r\n\r\n\r\n// export class ApiContainer extends Component {\r\n\r\n// \tconstructor() {\r\n//     super();\r\n//     this.state = { \r\n//       markdown: ''\r\n//     };\r\n//   }\r\n\r\n//   componentDidMount() {\r\n//     fetch(this.props.code).then(\r\n//       res => res.text()\r\n//     ).then(\r\n//       md => {\r\n//         this.setState({ \r\n//           markdown: md\r\n//         })\r\n//       }\r\n//     );\r\n//   }\r\n\r\n//   render() {\r\n// \t\tconst { markdown } = this.state;\r\n//     return (\r\n// \t\t\t<div className=\"api-container\">\r\n//         <Markdown \r\n//           source={markdown} \r\n//           renderers={\r\n//             {\r\n//               heading: h => (\r\n//                 <div className={`api-title h${h.level} ${h.children[0].props.value.includes('title: ')? '':h.children[0].props.value.split('').join('').replace(/\\s/g, '-').toLowerCase()}`}>\r\n//                   {h.children[0].props.value.includes('title: ')? h.children[0].props.value.replace('title: ', '') : h.children}\r\n//                 </div>\r\n//               ),\r\n//               paragraph: p => (\r\n//                 <React.Fragment>\r\n//                   {p.children[0].props.nodeKey === 'text-2-1-0'? '' :<p>{p.children}</p>}\r\n//                 </React.Fragment>\r\n//               ),\r\n//               code: c => (\r\n//                 <div className=\"api-code-highligher\">\r\n//                   <SyntaxHighlighter style={syntaxTheme}>\r\n//                     {c.value}\r\n//                   </SyntaxHighlighter>\r\n//                 </div>\r\n//               )\r\n//             }\r\n//           }\r\n//         />\r\n// \t\t\t</div>\r\n// \t\t);\r\n//   }\r\n// }\r\n\r\n// export default ApiContainer;\r\n\r\n\r\nconst ApiContainer = props => {\r\n\r\n  const { code } = props\r\n\r\n  const [markdown, setMarkdown] = useState('')\r\n\r\n\r\n  useEffect(() => {\r\n    let isMounted = true; \r\n    fetch(code).then(res => res.text()).then(\r\n      md => {\r\n        if(isMounted) {\r\n          setMarkdown(md)\r\n        }\r\n      }\r\n    );\r\n    return () => { isMounted = false }; \r\n  }, [code]);\r\n\r\n\r\n  return (\r\n    <div className=\"api-container\">\r\n    <Markdown \r\n      source={markdown} \r\n      renderers={\r\n        {\r\n          heading: h => (\r\n            <div className={`api-title h${h.level} ${h.children[0].props.value.includes('title: ')? '':h.children[0].props.value.split('').join('').replace(/\\s/g, '-').toLowerCase()}`}>\r\n              {h.children[0].props.value.includes('title: ')? h.children[0].props.value.replace('title: ', '') : h.children}\r\n            </div>\r\n          ),\r\n          paragraph: p => (\r\n            <React.Fragment>\r\n              {p.children[0].props.nodeKey === 'text-2-1-0'? '' :<p>{p.children}</p>}\r\n            </React.Fragment>\r\n          ),\r\n          code: c => (\r\n            <div className=\"api-code-highligher\">\r\n              <SyntaxHighlighter style={syntaxTheme}>\r\n                {c.value}\r\n              </SyntaxHighlighter>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default ApiContainer\r\n"]},"metadata":{},"sourceType":"module"}