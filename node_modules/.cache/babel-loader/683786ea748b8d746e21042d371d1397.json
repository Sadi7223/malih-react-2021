{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/tree-select/Async.js\";\nimport React, { Component } from \"react\";\nimport { TreeSelect } from \"antd\";\nexport class Async extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: undefined,\n      treeData: [{\n        id: 1,\n        pId: 0,\n        value: \"1\",\n        title: \"Expand to load\"\n      }, {\n        id: 2,\n        pId: 0,\n        value: \"2\",\n        title: \"Expand to load\"\n      }, {\n        id: 3,\n        pId: 0,\n        value: \"3\",\n        title: \"Tree Node\",\n        isLeaf: true\n      }]\n    };\n\n    this.genTreeNode = (parentId, isLeaf = false) => {\n      const random = Math.random().toString(36).substring(2, 6);\n      return {\n        id: random,\n        pId: parentId,\n        value: random,\n        title: isLeaf ? \"Tree Node\" : \"Expand to load\",\n        isLeaf\n      };\n    };\n\n    this.onLoadData = treeNode => new Promise(resolve => {\n      const {\n        id\n      } = treeNode.props;\n      setTimeout(() => {\n        this.setState({\n          treeData: this.state.treeData.concat([this.genTreeNode(id, false), this.genTreeNode(id, true)])\n        });\n        resolve();\n      }, 300);\n    });\n\n    this.onChange = value => {\n      console.log(value);\n      this.setState({\n        value\n      });\n    };\n  }\n\n  render() {\n    const {\n      treeData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(TreeSelect, {\n      treeDataSimpleMode: true,\n      style: {\n        width: \"100%\"\n      },\n      value: this.state.value,\n      dropdownStyle: {\n        maxHeight: 400,\n        overflow: \"auto\"\n      },\n      placeholder: \"Please select\",\n      onChange: this.onChange,\n      loadData: this.onLoadData,\n      treeData: treeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Async;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/tree-select/Async.js"],"names":["React","Component","TreeSelect","Async","state","value","undefined","treeData","id","pId","title","isLeaf","genTreeNode","parentId","random","Math","toString","substring","onLoadData","treeNode","Promise","resolve","props","setTimeout","setState","concat","onChange","console","log","render","width","maxHeight","overflow"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,MAA3B;AAEA,OAAO,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;AAAA,SACnCG,KADmC,GAC3B;AACNC,MAAAA,KAAK,EAAEC,SADD;AAENC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,CAAd;AAAiBJ,QAAAA,KAAK,EAAE,GAAxB;AAA6BK,QAAAA,KAAK,EAAE;AAApC,OADQ,EAER;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,CAAd;AAAiBJ,QAAAA,KAAK,EAAE,GAAxB;AAA6BK,QAAAA,KAAK,EAAE;AAApC,OAFQ,EAGR;AAAEF,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,GAAG,EAAE,CAAd;AAAiBJ,QAAAA,KAAK,EAAE,GAAxB;AAA6BK,QAAAA,KAAK,EAAE,WAApC;AAAiDC,QAAAA,MAAM,EAAE;AAAzD,OAHQ;AAFJ,KAD2B;;AAAA,SAUnCC,WAVmC,GAUrB,CAACC,QAAD,EAAWF,MAAM,GAAG,KAApB,KAA8B;AAC1C,YAAMG,MAAM,GAAGC,IAAI,CAACD,MAAL,GACZE,QADY,CACH,EADG,EAEZC,SAFY,CAEF,CAFE,EAEC,CAFD,CAAf;AAGA,aAAO;AACLT,QAAAA,EAAE,EAAEM,MADC;AAELL,QAAAA,GAAG,EAAEI,QAFA;AAGLR,QAAAA,KAAK,EAAES,MAHF;AAILJ,QAAAA,KAAK,EAAEC,MAAM,GAAG,WAAH,GAAiB,gBAJzB;AAKLA,QAAAA;AALK,OAAP;AAOD,KArBkC;;AAAA,SAuBnCO,UAvBmC,GAuBtBC,QAAQ,IACnB,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrB,YAAM;AAAEb,QAAAA;AAAF,UAASW,QAAQ,CAACG,KAAxB;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,aAAKC,QAAL,CAAc;AACZjB,UAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG,QAAX,CAAoBkB,MAApB,CAA2B,CACnC,KAAKb,WAAL,CAAiBJ,EAAjB,EAAqB,KAArB,CADmC,EAEnC,KAAKI,WAAL,CAAiBJ,EAAjB,EAAqB,IAArB,CAFmC,CAA3B;AADE,SAAd;AAMAa,QAAAA,OAAO;AACR,OARS,EAQP,GARO,CAAV;AASD,KAXD,CAxBiC;;AAAA,SAqCnCK,QArCmC,GAqCxBrB,KAAK,IAAI;AAClBsB,MAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACA,WAAKmB,QAAL,CAAc;AAAEnB,QAAAA;AAAF,OAAd;AACD,KAxCkC;AAAA;;AA0CnCwB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA;AAAF,QAAe,KAAKH,KAA1B;AACA,wBACE,QAAC,UAAD;AACE,MAAA,kBAAkB,MADpB;AAEE,MAAA,KAAK,EAAE;AAAE0B,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,KAHpB;AAIE,MAAA,aAAa,EAAE;AAAE0B,QAAAA,SAAS,EAAE,GAAb;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAJjB;AAKE,MAAA,WAAW,EAAC,eALd;AAME,MAAA,QAAQ,EAAE,KAAKN,QANjB;AAOE,MAAA,QAAQ,EAAE,KAAKR,UAPjB;AAQE,MAAA,QAAQ,EAAEX;AARZ;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AAxDkC;AA2DrC,eAAeJ,KAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nexport class Async extends Component {\r\n  state = {\r\n    value: undefined,\r\n    treeData: [\r\n      { id: 1, pId: 0, value: \"1\", title: \"Expand to load\" },\r\n      { id: 2, pId: 0, value: \"2\", title: \"Expand to load\" },\r\n      { id: 3, pId: 0, value: \"3\", title: \"Tree Node\", isLeaf: true }\r\n    ]\r\n  };\r\n\r\n  genTreeNode = (parentId, isLeaf = false) => {\r\n    const random = Math.random()\r\n      .toString(36)\r\n      .substring(2, 6);\r\n    return {\r\n      id: random,\r\n      pId: parentId,\r\n      value: random,\r\n      title: isLeaf ? \"Tree Node\" : \"Expand to load\",\r\n      isLeaf\r\n    };\r\n  };\r\n\r\n  onLoadData = treeNode =>\r\n    new Promise(resolve => {\r\n      const { id } = treeNode.props;\r\n      setTimeout(() => {\r\n        this.setState({\r\n          treeData: this.state.treeData.concat([\r\n            this.genTreeNode(id, false),\r\n            this.genTreeNode(id, true)\r\n          ])\r\n        });\r\n        resolve();\r\n      }, 300);\r\n    });\r\n\r\n  onChange = value => {\r\n    console.log(value);\r\n    this.setState({ value });\r\n  };\r\n\r\n  render() {\r\n    const { treeData } = this.state;\r\n    return (\r\n      <TreeSelect\r\n        treeDataSimpleMode\r\n        style={{ width: \"100%\" }}\r\n        value={this.state.value}\r\n        dropdownStyle={{ maxHeight: 400, overflow: \"auto\" }}\r\n        placeholder=\"Please select\"\r\n        onChange={this.onChange}\r\n        loadData={this.onLoadData}\r\n        treeData={treeData}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Async;\r\n"]},"metadata":{},"sourceType":"module"}