{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/shared-components/ChartWidget/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport ApexChart from \"react-apexcharts\";\nimport { apexLineChartDefaultOption, apexBarChartDefaultOption, apexAreaChartDefaultOption } from 'constants/ChartConstant';\nimport ReactResizeDetector from 'react-resize-detector';\nconst titleStyle = {\n  position: 'absolute',\n  zIndex: '1'\n};\nconst extraStyle = {\n  position: 'absolute',\n  zIndex: '1',\n  right: '0',\n  top: '-2px'\n};\n\nconst getChartTypeDefaultOption = type => {\n  switch (type) {\n    case 'line':\n      return apexLineChartDefaultOption;\n\n    case 'bar':\n      return apexBarChartDefaultOption;\n\n    case 'area':\n      return apexAreaChartDefaultOption;\n\n    default:\n      return apexLineChartDefaultOption;\n  }\n};\n\nconst ChartWidget = ({\n  title,\n  series,\n  width,\n  height,\n  xAxis,\n  customOptions,\n  card,\n  type,\n  extra\n}) => {\n  _s();\n\n  let options = getChartTypeDefaultOption(type);\n  const isMobile = window.innerWidth < 768;\n\n  const setLegendOffset = () => {\n    if (chartRef.current) {\n      var _extraRef$current;\n\n      const lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0];\n      lengend.style.marginRight = `${isMobile ? 0 : (_extraRef$current = extraRef.current) === null || _extraRef$current === void 0 ? void 0 : _extraRef$current.offsetWidth}px`;\n\n      if (isMobile) {\n        lengend.style.position = 'relative';\n        lengend.style.top = 0;\n        lengend.style.justifyContent = 'start';\n        lengend.style.padding = 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLegendOffset(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const extraRef = useRef(null);\n  const chartRef = useRef();\n  options.xaxis.categories = xAxis;\n\n  if (customOptions) {\n    options = { ...options,\n      ...customOptions\n    };\n  }\n\n  const onResize = () => {\n    setTimeout(() => {\n      setLegendOffset();\n    }, 600);\n  };\n\n  const renderChart = /*#__PURE__*/_jsxDEV(ReactResizeDetector, {\n    onResize: onResize(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chartRef\",\n      ref: chartRef,\n      children: /*#__PURE__*/_jsxDEV(ApexChart, {\n        options: options,\n        type: type,\n        series: series,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: card ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: !isMobile ? titleStyle : {},\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 8\n        }, this) && /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-weight-bold\",\n          style: !isMobile ? titleStyle : {},\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 66\n        }, this), extra && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: extraRef,\n          style: !isMobile ? extraStyle : {},\n          children: extra\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), renderChart]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this) : renderChart\n  }, void 0, false);\n};\n\n_s(ChartWidget, \"yuOowm7QWeqbFUnrB2gsEuXomek=\");\n\n_c = ChartWidget;\nChartWidget.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  series: PropTypes.array.isRequired,\n  xAxis: PropTypes.array,\n  customOptions: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  card: PropTypes.bool,\n  type: PropTypes.string\n};\nChartWidget.defaultProps = {\n  series: [],\n  height: 300,\n  width: '100%',\n  card: true,\n  type: 'line'\n};\nexport default ChartWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartWidget\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/shared-components/ChartWidget/index.js"],"names":["React","useRef","useEffect","PropTypes","Card","ApexChart","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","ReactResizeDetector","titleStyle","position","zIndex","extraStyle","right","top","getChartTypeDefaultOption","type","ChartWidget","title","series","width","height","xAxis","customOptions","card","extra","options","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","justifyContent","padding","xaxis","categories","onResize","setTimeout","renderChart","propTypes","oneOfType","string","element","array","isRequired","object","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport ReactResizeDetector from 'react-resize-detector';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra}) =>  {\r\n\tlet options = getChartTypeDefaultOption(type)\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst renderChart = (\r\n\t\t<ReactResizeDetector onResize={onResize()}>\r\n\t\t\t<div className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</ReactResizeDetector>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<div className=\"position-relative\">\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n"]},"metadata":{},"sourceType":"module"}