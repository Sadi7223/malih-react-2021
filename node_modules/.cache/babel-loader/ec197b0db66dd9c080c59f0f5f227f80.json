{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/VirtualList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport { VariableSizeGrid as Grid } from 'react-window';\nimport ResizeObserver from 'rc-resize-observer';\nimport classNames from 'classnames';\nimport { Table } from 'antd';\n\nfunction VirtualTable(props) {\n  _s();\n\n  const {\n    columns,\n    scroll\n  } = props;\n  const [tableWidth, setTableWidth] = useState(0);\n  const widthColumnCount = columns.filter(({\n    width\n  }) => !width).length;\n  const mergedColumns = columns.map(column => {\n    if (column.width) {\n      return column;\n    }\n\n    return { ...column,\n      width: Math.floor(tableWidth / widthColumnCount)\n    };\n  });\n  const gridRef = useRef();\n  const [connectObject] = useState(() => {\n    const obj = {};\n    Object.defineProperty(obj, 'scrollLeft', {\n      get: () => null,\n      set: scrollLeft => {\n        if (gridRef.current) {\n          gridRef.current.scrollTo({\n            scrollLeft\n          });\n        }\n      }\n    });\n    return obj;\n  });\n\n  const resetVirtualGrid = () => {\n    if (gridRef.current) {\n      gridRef.current.resetAfterIndices({\n        columnIndex: 0,\n        shouldForceUpdate: false\n      });\n    }\n  };\n\n  useEffect(() => resetVirtualGrid, [tableWidth]);\n\n  const renderVirtualList = (rawData, {\n    scrollbarSize,\n    ref,\n    onScroll\n  }) => {\n    ref.current = connectObject;\n    const totalHeight = rawData.length * 54;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      ref: gridRef,\n      className: \"virtual-grid\",\n      columnCount: mergedColumns.length,\n      columnWidth: index => {\n        const {\n          width\n        } = mergedColumns[index];\n        return totalHeight > scroll.y && index === mergedColumns.length - 1 ? width - scrollbarSize - 1 : width;\n      },\n      height: scroll.y,\n      rowCount: rawData.length,\n      rowHeight: () => 54,\n      width: tableWidth,\n      onScroll: ({\n        scrollLeft\n      }) => {\n        onScroll({\n          scrollLeft\n        });\n      },\n      children: ({\n        columnIndex,\n        rowIndex,\n        style\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classNames('virtual-table-cell', {\n          'virtual-table-cell-last': columnIndex === mergedColumns.length - 1\n        }),\n        style: style,\n        children: rawData[rowIndex][mergedColumns[columnIndex].dataIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ResizeObserver, {\n    onResize: ({\n      width\n    }) => {\n      setTableWidth(width);\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, { ...props,\n      className: \"virtual-table\",\n      columns: mergedColumns,\n      pagination: false,\n      components: {\n        body: renderVirtualList\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n} // Usage\n\n\n_s(VirtualTable, \"oKNUqLrI440U1RrWlZUB0uziBv4=\");\n\n_c = VirtualTable;\nconst columns = [{\n  title: 'A',\n  dataIndex: 'key',\n  width: 150\n}, {\n  title: 'B',\n  dataIndex: 'key'\n}, {\n  title: 'C',\n  dataIndex: 'key'\n}, {\n  title: 'D',\n  dataIndex: 'key'\n}, {\n  title: 'E',\n  dataIndex: 'key',\n  width: 200\n}, {\n  title: 'F',\n  dataIndex: 'key',\n  width: 100\n}];\nconst data = Array.from({\n  length: 100000\n}, (_, key) => ({\n  key\n}));\nexport class VirtualList extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(VirtualTable, {\n      columns: columns,\n      dataSource: data,\n      scroll: {\n        y: 300,\n        x: '100vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport default VirtualList;\n\nvar _c;\n\n$RefreshReg$(_c, \"VirtualTable\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/VirtualList.js"],"names":["React","Component","useState","useEffect","useRef","VariableSizeGrid","Grid","ResizeObserver","classNames","Table","VirtualTable","props","columns","scroll","tableWidth","setTableWidth","widthColumnCount","filter","width","length","mergedColumns","map","column","Math","floor","gridRef","connectObject","obj","Object","defineProperty","get","set","scrollLeft","current","scrollTo","resetVirtualGrid","resetAfterIndices","columnIndex","shouldForceUpdate","renderVirtualList","rawData","scrollbarSize","ref","onScroll","totalHeight","index","y","rowIndex","style","dataIndex","body","title","data","Array","from","_","key","VirtualList","render","x"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, useRef } from 'react';\r\nimport { VariableSizeGrid as Grid } from 'react-window';\r\nimport ResizeObserver from 'rc-resize-observer';\r\nimport classNames from 'classnames';\r\nimport { Table } from 'antd';\r\n\r\nfunction VirtualTable(props) {\r\n  const { columns, scroll } = props;\r\n  const [tableWidth, setTableWidth] = useState(0);\r\n  const widthColumnCount = columns.filter(({ width }) => !width).length;\r\n  const mergedColumns = columns.map((column) => {\r\n    if (column.width) {\r\n      return column;\r\n    }\r\n\r\n    return { ...column, width: Math.floor(tableWidth / widthColumnCount) };\r\n  });\r\n  const gridRef = useRef();\r\n  const [connectObject] = useState(() => {\r\n    const obj = {};\r\n    Object.defineProperty(obj, 'scrollLeft', {\r\n      get: () => null,\r\n      set: (scrollLeft) => {\r\n        if (gridRef.current) {\r\n          gridRef.current.scrollTo({\r\n            scrollLeft,\r\n          });\r\n        }\r\n      },\r\n    });\r\n    return obj;\r\n  });\r\n\r\n  const resetVirtualGrid = () => {\r\n    if(gridRef.current) {\r\n      gridRef.current.resetAfterIndices({\r\n        columnIndex: 0,\r\n        shouldForceUpdate: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => resetVirtualGrid, [tableWidth]);\r\n\r\n  const renderVirtualList = (rawData, { scrollbarSize, ref, onScroll }) => {\r\n    ref.current = connectObject;\r\n    const totalHeight = rawData.length * 54;\r\n    return (\r\n      <Grid\r\n        ref={gridRef}\r\n        className=\"virtual-grid\"\r\n        columnCount={mergedColumns.length}\r\n        columnWidth={(index) => {\r\n          const { width } = mergedColumns[index];\r\n          return totalHeight > scroll.y && index === mergedColumns.length - 1\r\n            ? width - scrollbarSize - 1\r\n            : width;\r\n        }}\r\n        height={scroll.y}\r\n        rowCount={rawData.length}\r\n        rowHeight={() => 54}\r\n        width={tableWidth}\r\n        onScroll={({ scrollLeft }) => {\r\n          onScroll({\r\n            scrollLeft,\r\n          });\r\n        }}\r\n      >\r\n        {({ columnIndex, rowIndex, style }) => (\r\n          <div\r\n            className={classNames('virtual-table-cell', {\r\n              'virtual-table-cell-last': columnIndex === mergedColumns.length - 1,\r\n            })}\r\n            style={style}\r\n          >\r\n            {rawData[rowIndex][mergedColumns[columnIndex].dataIndex]}\r\n          </div>\r\n        )}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ResizeObserver\r\n      onResize={({ width }) => {\r\n        setTableWidth(width);\r\n      }}\r\n    >\r\n      <Table\r\n        {...props}\r\n        className=\"virtual-table\"\r\n        columns={mergedColumns}\r\n        pagination={false}\r\n        components={{\r\n          body: renderVirtualList,\r\n        }}\r\n      />\r\n    </ResizeObserver>\r\n  );\r\n} // Usage\r\n\r\nconst columns = [\r\n  {\r\n    title: 'A',\r\n    dataIndex: 'key',\r\n    width: 150,\r\n  },\r\n  {\r\n    title: 'B',\r\n    dataIndex: 'key',\r\n  },\r\n  {\r\n    title: 'C',\r\n    dataIndex: 'key',\r\n  },\r\n  {\r\n    title: 'D',\r\n    dataIndex: 'key',\r\n  },\r\n  {\r\n    title: 'E',\r\n    dataIndex: 'key',\r\n    width: 200,\r\n  },\r\n  {\r\n    title: 'F',\r\n    dataIndex: 'key',\r\n    width: 100,\r\n  },\r\n];\r\nconst data = Array.from(\r\n  {\r\n    length: 100000,\r\n  },\r\n  (_, key) => ({\r\n    key,\r\n  }),\r\n);\r\n\r\nexport class VirtualList extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<VirtualTable\r\n        columns={columns}\r\n        dataSource={data}\r\n        scroll={{\r\n          y: 300,\r\n          x: '100vw',\r\n        }}\r\n      />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default VirtualList\r\n"]},"metadata":{},"sourceType":"module"}