{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/DynamicFormItem.js\";\nimport React, { Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 20\n    }\n  }\n};\nconst formItemLayoutWithOutLabel = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 20,\n      offset: 4\n    }\n  }\n};\n\nconst DynamicFieldSet = () => {\n  const onFinish = values => {\n    console.log('Received values of form:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"dynamic_form_item\",\n    ...formItemLayoutWithOutLabel,\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.List, {\n      name: \"names\",\n      children: (fields, {\n        add,\n        remove\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [fields.map((field, index) => /*#__PURE__*/_createElement(Form.Item, { ...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel),\n            label: index === 0 ? 'Passengers' : '',\n            required: false,\n            key: field.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/_jsxDEV(Form.Item, { ...field,\n            validateTrigger: ['onChange', 'onBlur'],\n            rules: [{\n              required: true,\n              whitespace: true,\n              message: \"Please input passenger's name or delete this field.\"\n            }],\n            noStyle: true,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"passenger name\",\n              style: {\n                width: '60%',\n                marginRight: 8\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this), fields.length > 1 ? /*#__PURE__*/_jsxDEV(MinusCircleOutlined, {\n            className: \"dynamic-delete-button\",\n            onClick: () => {\n              remove(field.name);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this) : null)), /*#__PURE__*/_jsxDEV(Form.Item, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"dashed\",\n              onClick: () => {\n                add();\n              },\n              style: {\n                width: '60%'\n              },\n              children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), \" Add field\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DynamicFieldSet;\nexport class DynamicFormItem extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(DynamicFieldSet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default DynamicFormItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicFieldSet\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-entry/form/DynamicFormItem.js"],"names":["React","Component","Form","Input","Button","MinusCircleOutlined","PlusOutlined","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","DynamicFieldSet","onFinish","values","console","log","fields","add","remove","map","field","index","key","required","whitespace","message","width","marginRight","length","name","DynamicFormItem","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Input, Button } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 4 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 20 },\r\n  },\r\n};\r\nconst formItemLayoutWithOutLabel = {\r\n  wrapperCol: {\r\n    xs: { span: 24, offset: 0 },\r\n    sm: { span: 20, offset: 4 },\r\n  },\r\n};\r\n\r\nconst DynamicFieldSet = () => {\r\n  const onFinish = values => {\r\n    console.log('Received values of form:', values);\r\n  };\r\n\r\n  return (\r\n    <Form name=\"dynamic_form_item\" {...formItemLayoutWithOutLabel} onFinish={onFinish}>\r\n      <Form.List name=\"names\">\r\n        {(fields, { add, remove }) => {\r\n          return (\r\n            <div>\r\n              {fields.map((field, index) => (\r\n                <Form.Item\r\n                  {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                  label={index === 0 ? 'Passengers' : ''}\r\n                  required={false}\r\n                  key={field.key}\r\n                >\r\n                  <Form.Item\r\n                    {...field}\r\n                    validateTrigger={['onChange', 'onBlur']}\r\n                    rules={[\r\n                      {\r\n                        required: true,\r\n                        whitespace: true,\r\n                        message: \"Please input passenger's name or delete this field.\",\r\n                      },\r\n                    ]}\r\n                    noStyle\r\n                  >\r\n                    <Input placeholder=\"passenger name\" style={{ width: '60%', marginRight: 8 }} />\r\n                  </Form.Item>\r\n                  {fields.length > 1 ? (\r\n                    <MinusCircleOutlined\r\n                      className=\"dynamic-delete-button\"\r\n                      onClick={() => {\r\n                        remove(field.name);\r\n                      }}\r\n                    />\r\n                  ) : null}\r\n                </Form.Item>\r\n              ))}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => {\r\n                    add();\r\n                  }}\r\n                  style={{ width: '60%' }}\r\n                >\r\n                  <PlusOutlined /> Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          );\r\n        }}\r\n      </Form.List>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class DynamicFormItem extends Component {\r\n  render() {\r\n    return (\r\n      <DynamicFieldSet />\r\n    )\r\n  }\r\n}\r\n\r\nexport default DynamicFormItem\r\n"]},"metadata":{},"sourceType":"module"}