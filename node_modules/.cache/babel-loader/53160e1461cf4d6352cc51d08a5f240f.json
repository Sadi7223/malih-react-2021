{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/apps/chat/ChatMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ChatData from \"assets/data/chat.data.json\";\nimport { Badge, Input } from 'antd';\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\nimport { COLOR_1 } from 'constants/ChartConstant';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatMenu = ({\n  match,\n  location\n}) => {\n  _s();\n\n  const [list, setList] = useState(ChatData);\n  let history = useHistory();\n\n  const openChat = id => {\n    const data = list.map(elm => {\n      if (elm.id === id) {\n        elm.unread = 0;\n      }\n\n      return elm;\n    });\n    setList(data);\n    history.push(`${match.url}/${id}`);\n  };\n\n  const searchOnChange = e => {\n    const query = e.target.value;\n    const data = ChatData.filter(item => {\n      return query === '' ? item : item.name.toLowerCase().includes(query);\n    });\n    setList(data);\n  };\n\n  const id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-menu\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-menu-toolbar\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Search\",\n        onChange: searchOnChange,\n        prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {\n          className: \"font-size-lg mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-menu-list\",\n      children: list.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => openChat(item.id),\n        className: `chat-menu-list-item ${i === list.length - 1 ? 'last' : ''} ${item.id === id ? 'selected' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(AvatarStatus, {\n          src: item.avatar,\n          name: item.name,\n          subTitle: item.msg[item.msg.length - 1].text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-menu-list-item-time\",\n            children: item.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 9\n          }, this), item.unread === 0 ? /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 30\n          }, this) : /*#__PURE__*/_jsxDEV(Badge, {\n            count: item.unread,\n            style: {\n              backgroundColor: COLOR_1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }, this)]\n      }, `chat-item-${item.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ChatMenu, \"FL8zcOAz61tO6dw/Kj98av9mQMA=\", false, function () {\n  return [useHistory];\n});\n\n_c = ChatMenu;\nexport default ChatMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatMenu\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/apps/chat/ChatMenu.js"],"names":["React","useState","ChatData","Badge","Input","AvatarStatus","COLOR_1","SearchOutlined","useHistory","ChatMenu","match","location","list","setList","history","openChat","id","data","map","elm","unread","push","url","searchOnChange","e","query","target","value","filter","item","name","toLowerCase","includes","parseInt","pathname","i","length","avatar","msg","text","time","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ChatMenu = ({ match, location }) => {\r\n\tconst [list, setList] = useState(ChatData);\r\n\tlet history = useHistory();\r\n\tconst openChat = id => {\r\n\t\tconst data = list.map( elm => {\r\n\t\t\tif(elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data)\r\n\t\thistory.push(`${match.url}/${id}`)\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map( (item, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`} \r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)} \r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1)? 'last' : ''} ${item.id === id? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text}/>\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{backgroundColor: COLOR_1}}/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n"]},"metadata":{},"sourceType":"module"}