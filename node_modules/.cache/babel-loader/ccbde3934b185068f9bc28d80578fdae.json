{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/apps/project/scrumboard/BoardCard.js\";\nimport React from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Card, Tooltip, Tag } from 'antd';\nimport { getLabelsColor, AssigneeAvatar } from './utils';\nimport { CalendarOutlined, CommentOutlined, PaperClipOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport { Scrollbars } from 'react-custom-scrollbars';\nconst InnerCardList = /*#__PURE__*/React.memo(_c = function InnerCardList(props) {\n  var _props$contents;\n\n  return (_props$contents = props.contents) === null || _props$contents === void 0 ? void 0 : _props$contents.map((item, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: item.id,\n    index: index,\n    children: (dragProvided, dragSnapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      ref: dragProvided.innerRef,\n      ...dragProvided.draggableProps,\n      ...dragProvided.dragHandleProps,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        hoverable: true,\n        className: \"board-card\",\n        cover: null,\n        onClick: () => props.cardData(item, props.listId),\n        children: [item.cover ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.cover,\n          className: \"rounded img-fluid\",\n          alt: \"cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 27\n        }, this) : null, item.labels.map(label => /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: label,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `board-label ${getLabelsColor(label)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-2\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-center\",\n            children: [item.dueDate ? /*#__PURE__*/_jsxDEV(Tag, {\n              className: \"bg-gray-lightest\",\n              children: [/*#__PURE__*/_jsxDEV(CalendarOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-1 font-weight-semibold\",\n                children: moment(item.dueDate).format('DD MMMM')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this) : null, /*#__PURE__*/_jsxDEV(SubIndicator, {\n              counts: item.comments.length,\n              icon: /*#__PURE__*/_jsxDEV(CommentOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SubIndicator, {\n              counts: item.attachments.length,\n              icon: /*#__PURE__*/_jsxDEV(PaperClipOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: item.members.map(member => /*#__PURE__*/_jsxDEV(AssigneeAvatar, {\n              id: member,\n              size: 25,\n              chain: true\n            }, member, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n});\n_c2 = InnerCardList;\n\nfunction InnerList(props) {\n  const {\n    contents,\n    dropProvided,\n    cardData,\n    listId\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-dropzone\",\n    ref: dropProvided.innerRef,\n    children: [/*#__PURE__*/_jsxDEV(InnerCardList, {\n      cardData: cardData,\n      contents: contents,\n      listId: listId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), dropProvided.placeholder]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = InnerList;\n\nfunction SubIndicator(props) {\n  if (props.counts) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-0 mr-2\",\n      children: [props.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1\",\n        children: props.counts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n  return null;\n}\n\n_c4 = SubIndicator;\nexport default function BoardCard(props) {\n  const {\n    ignoreContainerClipping,\n    internalScroll,\n    scrollContainerStyle,\n    isDropDisabled,\n    isCombineEnabled,\n    listId = 'LIST',\n    listType,\n    style,\n    contents,\n    useClone,\n    cardData\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: listId,\n      type: listType,\n      ignoreContainerClipping: ignoreContainerClipping,\n      isDropDisabled: isDropDisabled,\n      isCombineEnabled: isCombineEnabled,\n      renderClone: useClone,\n      children: (dropProvided, dropSnapshot) => /*#__PURE__*/_jsxDEV(Scrollbars, {\n        style: style,\n        className: \"board-wrapper\",\n        autoHide: true,\n        ...dropProvided.droppableProps,\n        children: internalScroll ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-scrollContainer\",\n          style: scrollContainerStyle,\n          children: /*#__PURE__*/_jsxDEV(InnerList, {\n            contents: contents,\n            listId: listId,\n            cardData: cardData,\n            dropProvided: dropProvided\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(InnerList, {\n          contents: contents,\n          listId: listId,\n          cardData: cardData,\n          dropProvided: dropProvided\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c5 = BoardCard;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InnerCardList$React.memo\");\n$RefreshReg$(_c2, \"InnerCardList\");\n$RefreshReg$(_c3, \"InnerList\");\n$RefreshReg$(_c4, \"SubIndicator\");\n$RefreshReg$(_c5, \"BoardCard\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/apps/project/scrumboard/BoardCard.js"],"names":["React","Draggable","Droppable","Card","Tooltip","Tag","getLabelsColor","AssigneeAvatar","CalendarOutlined","CommentOutlined","PaperClipOutlined","moment","Scrollbars","InnerCardList","memo","props","contents","map","item","index","id","dragProvided","dragSnapshot","innerRef","draggableProps","dragHandleProps","cardData","listId","cover","labels","label","name","dueDate","format","comments","length","attachments","members","member","InnerList","dropProvided","placeholder","SubIndicator","counts","icon","BoardCard","ignoreContainerClipping","internalScroll","scrollContainerStyle","isDropDisabled","isCombineEnabled","listType","style","useClone","dropSnapshot","droppableProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { Card, Tooltip, Tag } from 'antd';\r\nimport { getLabelsColor, AssigneeAvatar } from './utils';\r\nimport { CalendarOutlined, CommentOutlined, PaperClipOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\nconst InnerCardList = React.memo(function InnerCardList(props) {\r\n  return props.contents?.map((item, index) => (\r\n    <Draggable key={item.id} draggableId={item.id} index={index}>\r\n      {( dragProvided, dragSnapshot) => (\r\n        <div\r\n          className='mb-3'\r\n          key={item.id}\r\n\t\t\t\t\tref={dragProvided.innerRef}\r\n\t\t\t\t\t{...dragProvided.draggableProps}\r\n\t\t\t\t\t{...dragProvided.dragHandleProps}\r\n        >\r\n          <Card \r\n            hoverable \r\n            className='board-card'\r\n            cover={null} \r\n            onClick={() => props.cardData(item, props.listId)}\r\n          >\r\n            {item.cover ? <img src={item.cover} className=\"rounded img-fluid\" alt=\"cover\"/> : null}\r\n            {item.labels.map(label => \r\n              <Tooltip title={label} key={label}>\r\n                <div className={`board-label ${getLabelsColor(label)}`}></div>\r\n              </Tooltip>\r\n            )}\r\n            <h4 className=\"mb-2\">{item.name}</h4>\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <div className=\"d-flex align-items-center\">\r\n                {item.dueDate?\r\n                  <Tag className=\"bg-gray-lightest\" > \r\n                    <CalendarOutlined />\r\n                    <span className=\"ml-1 font-weight-semibold\">{moment(item.dueDate).format('DD MMMM')}</span>\r\n                  </Tag>\r\n                  :\r\n                  null\r\n                }\r\n                <SubIndicator counts={item.comments.length} icon={<CommentOutlined />}/>\r\n                <SubIndicator counts={item.attachments.length} icon={<PaperClipOutlined />}/>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                {item.members.map(member =>\r\n                  <AssigneeAvatar key={member} id={member} size={25} chain/>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </Card>\r\n\t\t\t\t</div>\r\n      )}\r\n    </Draggable>\r\n  ));\r\n});\r\n\r\nfunction InnerList(props) {\r\n  const { contents, dropProvided, cardData, listId } = props;\r\n\r\n  return (\r\n    <div className=\"board-dropzone\" ref={dropProvided.innerRef}>\r\n      <InnerCardList cardData={cardData} contents={contents} listId={listId}/>\r\n      {dropProvided.placeholder}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SubIndicator(props) {\r\n  if(props.counts) {\r\n    return (\r\n      <p className=\"mb-0 mr-2\">\r\n        {props.icon}\r\n        <span className=\"ml-1\">{props.counts}</span>\r\n      </p>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default function BoardCard(props) {\r\n\tconst {\r\n    ignoreContainerClipping,\r\n    internalScroll,\r\n    scrollContainerStyle,\r\n    isDropDisabled,\r\n    isCombineEnabled,\r\n    listId = 'LIST',\r\n    listType,\r\n    style,\r\n    contents,\r\n    useClone,\r\n    cardData\r\n  } = props;\r\n\treturn (\r\n    <>\r\n      <Droppable\r\n        droppableId={listId}\r\n        type={listType}\r\n        ignoreContainerClipping={ignoreContainerClipping}\r\n        isDropDisabled={isDropDisabled}\r\n        isCombineEnabled={isCombineEnabled}\r\n        renderClone={useClone}\r\n      >\r\n        {(\r\n          dropProvided,\r\n          dropSnapshot,\r\n        ) => (\r\n          <Scrollbars style={style} className=\"board-wrapper\" autoHide {...dropProvided.droppableProps}>\r\n            {internalScroll ? (\r\n              <div className=\"board-scrollContainer\" style={scrollContainerStyle}>\r\n                <InnerList\r\n                  contents={contents}\r\n                  listId={listId}\r\n                  cardData={cardData}\r\n                  dropProvided={dropProvided}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <InnerList\r\n                contents={contents}\r\n                listId={listId}\r\n                cardData={cardData}\r\n                dropProvided={dropProvided}\r\n              />\r\n            )}\r\n          </Scrollbars>\r\n        )}\r\n      </Droppable>\r\n    </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}