{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tree/Dynamic.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Component } from 'react';\nimport { Tree } from 'antd';\nconst initTreeDate = [{\n  title: 'Expand to load',\n  key: '0'\n}, {\n  title: 'Expand to load',\n  key: '1'\n}, {\n  title: 'Tree Node',\n  key: '2',\n  isLeaf: true\n}];\n\nconst Demo = () => {\n  _s();\n\n  const [treeData, setTreeData] = useState(initTreeDate);\n\n  function onLoadData({\n    props: {\n      data\n    }\n  }) {\n    return new Promise(resolve => {\n      if (data.children) {\n        resolve();\n        return;\n      }\n\n      setTimeout(() => {\n        data.children = [{\n          title: 'Child Node',\n          key: `${data.key}-0`\n        }, {\n          title: 'Child Node',\n          key: `${data.key}-1`\n        }];\n        setTreeData([...treeData]);\n        resolve();\n      }, 1000);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    loadData: onLoadData,\n    treeData: treeData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Demo, \"S5Feei8JJiKcxBh7Q2JmJRwIEUM=\");\n\n_c = Demo;\nexport class Dynamic extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default Dynamic;\n\nvar _c;\n\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/tree/Dynamic.js"],"names":["React","useState","Component","Tree","initTreeDate","title","key","isLeaf","Demo","treeData","setTreeData","onLoadData","props","data","Promise","resolve","children","setTimeout","Dynamic","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,MAArB;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,GAAG,EAAE;AAFP,CADmB,EAKnB;AACED,EAAAA,KAAK,EAAE,gBADT;AAEEC,EAAAA,GAAG,EAAE;AAFP,CALmB,EASnB;AACED,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,GAAG,EAAE,GAFP;AAGEC,EAAAA,MAAM,EAAE;AAHV,CATmB,CAArB;;AAgBA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACG,YAAD,CAAxC;;AAEA,WAASO,UAAT,CAAoB;AAAEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAAT,GAApB,EAAyC;AACvC,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5B,UAAIF,IAAI,CAACG,QAAT,EAAmB;AACjBD,QAAAA,OAAO;AACP;AACD;;AAEDE,MAAAA,UAAU,CAAC,MAAM;AACfJ,QAAAA,IAAI,CAACG,QAAL,GAAgB,CACd;AACEX,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,GAAG,EAAG,GAAEO,IAAI,CAACP,GAAI;AAFnB,SADc,EAKd;AACED,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,GAAG,EAAG,GAAEO,IAAI,CAACP,GAAI;AAFnB,SALc,CAAhB;AAUAI,QAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,CAAD,CAAX;AACAM,QAAAA,OAAO;AACR,OAbS,EAaP,IAbO,CAAV;AAcD,KApBM,CAAP;AAqBD;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEJ,UAAhB;AAA4B,IAAA,QAAQ,EAAEF;AAAtC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BD;;GAAMD,I;;KAAAA,I;AA+BN,OAAO,MAAMU,OAAN,SAAsBhB,SAAtB,CAAgC;AAErCiB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AANoC;AASvC,eAAeD,OAAf","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport { Tree } from 'antd';\r\n\r\nconst initTreeDate = [\r\n  {\r\n    title: 'Expand to load',\r\n    key: '0',\r\n  },\r\n  {\r\n    title: 'Expand to load',\r\n    key: '1',\r\n  },\r\n  {\r\n    title: 'Tree Node',\r\n    key: '2',\r\n    isLeaf: true,\r\n  },\r\n];\r\n\r\nconst Demo = () => {\r\n  const [treeData, setTreeData] = useState(initTreeDate);\r\n\r\n  function onLoadData({ props: { data } }) {\r\n    return new Promise(resolve => {\r\n      if (data.children) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        data.children = [\r\n          {\r\n            title: 'Child Node',\r\n            key: `${data.key}-0`,\r\n          },\r\n          {\r\n            title: 'Child Node',\r\n            key: `${data.key}-1`,\r\n          },\r\n        ];\r\n        setTreeData([...treeData]);\r\n        resolve();\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  return <Tree loadData={onLoadData} treeData={treeData} />;\r\n};\r\n\r\n\r\nexport class Dynamic extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Demo />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dynamic;\r\n"]},"metadata":{},"sourceType":"module"}