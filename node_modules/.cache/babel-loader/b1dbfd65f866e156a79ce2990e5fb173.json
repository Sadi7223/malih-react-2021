{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/table/MultipleSorter.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name'\n}, {\n  title: 'Chinese Score',\n  dataIndex: 'chinese',\n  sorter: {\n    compare: (a, b) => a.chinese - b.chinese,\n    multiple: 3\n  }\n}, {\n  title: 'Math Score',\n  dataIndex: 'math',\n  sorter: {\n    compare: (a, b) => a.math - b.math,\n    multiple: 2\n  }\n}, {\n  title: 'English Score',\n  dataIndex: 'english',\n  sorter: {\n    compare: (a, b) => a.english - b.english,\n    multiple: 1\n  }\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  chinese: 98,\n  math: 60,\n  english: 70\n}, {\n  key: '2',\n  name: 'Jim Green',\n  chinese: 98,\n  math: 66,\n  english: 89\n}, {\n  key: '3',\n  name: 'Joe Black',\n  chinese: 98,\n  math: 90,\n  english: 70\n}, {\n  key: '4',\n  name: 'Jim Red',\n  chinese: 88,\n  math: 99,\n  english: 89\n}];\n\nfunction onChange(pagination, filters, sorter, extra) {\n  console.log('params', pagination, filters, sorter, extra);\n}\n\nexport class MultipleSorter extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nexport default MultipleSorter;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-display/table/MultipleSorter.js"],"names":["React","Component","Table","columns","title","dataIndex","sorter","compare","a","b","chinese","multiple","math","english","data","key","name","onChange","pagination","filters","extra","console","log","MultipleSorter","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CADc,EAKd;AACED,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,OAAF,GAAYD,CAAC,CAACC,OAD3B;AAENC,IAAAA,QAAQ,EAAE;AAFJ;AAHV,CALc,EAad;AACEP,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACI,IAAF,GAASH,CAAC,CAACG,IADxB;AAEND,IAAAA,QAAQ,EAAE;AAFJ;AAHV,CAbc,EAqBd;AACEP,EAAAA,KAAK,EAAE,eADT;AAEEC,EAAAA,SAAS,EAAE,SAFb;AAGEC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,OAAF,GAAYJ,CAAC,CAACI,OAD3B;AAENF,IAAAA,QAAQ,EAAE;AAFJ;AAHV,CArBc,CAAhB;AA+BA,MAAMG,IAAI,GAAG,CACX;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEN,EAAAA,OAAO,EAAE,EAHX;AAIEE,EAAAA,IAAI,EAAE,EAJR;AAKEC,EAAAA,OAAO,EAAE;AALX,CADW,EAQX;AACEE,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEN,EAAAA,OAAO,EAAE,EAHX;AAIEE,EAAAA,IAAI,EAAE,EAJR;AAKEC,EAAAA,OAAO,EAAE;AALX,CARW,EAeX;AACEE,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEN,EAAAA,OAAO,EAAE,EAHX;AAIEE,EAAAA,IAAI,EAAE,EAJR;AAKEC,EAAAA,OAAO,EAAE;AALX,CAfW,EAsBX;AACEE,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,SAFR;AAGEN,EAAAA,OAAO,EAAE,EAHX;AAIEE,EAAAA,IAAI,EAAE,EAJR;AAKEC,EAAAA,OAAO,EAAE;AALX,CAtBW,CAAb;;AA+BA,SAASI,QAAT,CAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCb,MAAvC,EAA+Cc,KAA/C,EAAsD;AACpDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,UAAtB,EAAkCC,OAAlC,EAA2Cb,MAA3C,EAAmDc,KAAnD;AACD;;AAED,OAAO,MAAMG,cAAN,SAA6BtB,SAA7B,CAAuC;AAC7CuB,EAAAA,MAAM,GAAG;AACR,wBACC,QAAC,KAAD;AAAO,MAAA,OAAO,EAAErB,OAAhB;AAAyB,MAAA,UAAU,EAAEW,IAArC;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA;;AAL4C;AAQ9C,eAAeM,cAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n  {\r\n    title: 'Name',\r\n    dataIndex: 'name',\r\n  },\r\n  {\r\n    title: 'Chinese Score',\r\n    dataIndex: 'chinese',\r\n    sorter: {\r\n      compare: (a, b) => a.chinese - b.chinese,\r\n      multiple: 3,\r\n    },\r\n  },\r\n  {\r\n    title: 'Math Score',\r\n    dataIndex: 'math',\r\n    sorter: {\r\n      compare: (a, b) => a.math - b.math,\r\n      multiple: 2,\r\n    },\r\n  },\r\n  {\r\n    title: 'English Score',\r\n    dataIndex: 'english',\r\n    sorter: {\r\n      compare: (a, b) => a.english - b.english,\r\n      multiple: 1,\r\n    },\r\n  },\r\n];\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    chinese: 98,\r\n    math: 60,\r\n    english: 70,\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    chinese: 98,\r\n    math: 66,\r\n    english: 89,\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    chinese: 98,\r\n    math: 90,\r\n    english: 70,\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Jim Red',\r\n    chinese: 88,\r\n    math: 99,\r\n    english: 89,\r\n  },\r\n];\r\n\r\nfunction onChange(pagination, filters, sorter, extra) {\r\n  console.log('params', pagination, filters, sorter, extra);\r\n}\r\n\r\nexport class MultipleSorter extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Table columns={columns} dataSource={data} onChange={onChange} />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default MultipleSorter\r\n"]},"metadata":{},"sourceType":"module"}