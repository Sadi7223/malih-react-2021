{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/DemoCard/CodeBox.js\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport syntaxTheme from \"./HLTheme\";\nimport CardToolBar from './CardToolbar';\nexport class CodeBox extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      codeExpand: false\n    };\n\n    this.exapandCallBack = () => {\n      this.setState({\n        codeExpand: !this.state.codeExpand\n      });\n    };\n  }\n\n  render() {\n    const {\n      language,\n      value\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CardToolBar, {\n        code: value,\n        expand: this.exapandCallBack,\n        isExpand: this.state.codeExpand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `code-box-highlight ${this.state.codeExpand ? 'd-block' : 'd-none'}`,\n        children: /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n          language: language,\n          style: syntaxTheme,\n          children: value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nCodeBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  language: PropTypes.string\n};\nCodeBox.defaultProps = {\n  language: null\n};\nexport default CodeBox;","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/components/util-components/DemoCard/CodeBox.js"],"names":["React","PureComponent","PropTypes","Prism","SyntaxHighlighter","syntaxTheme","CardToolBar","CodeBox","state","codeExpand","exapandCallBack","setState","render","language","value","props","propTypes","string","isRequired","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAK,IAAIC,iBAAjB,QAAyC,0BAAzC;AACA,OAAOC,WAAP,MAAwB,WAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,MAAMC,OAAN,SAAsBN,aAAtB,CAAoC;AAAA;AAAA;AAAA,SAUzCO,KAVyC,GAUjC;AACNC,MAAAA,UAAU,EAAE;AADN,KAViC;;AAAA,SAczCC,eAdyC,GAcvB,MAAM;AACtB,WAAKC,QAAL,CAAc;AAACF,QAAAA,UAAU,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,KAhBwC;AAAA;;AAkBzCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAsB,KAAKC,KAAjC;AACA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAED,KAAnB;AAA0B,QAAA,MAAM,EAAE,KAAKJ,eAAvC;AAAwD,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAA7E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAG,sBAAqB,KAAKD,KAAL,CAAWC,UAAX,GAAuB,SAAvB,GAAiC,QAAS,EAAhF;AAAA,+BACE,QAAC,iBAAD;AAAmB,UAAA,QAAQ,EAAEI,QAA7B;AAAuC,UAAA,KAAK,EAAER,WAA9C;AAAA,oBACGS;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA9BwC;AAA9BP,O,CACJS,S,GAAY;AACjBF,EAAAA,KAAK,EAAEZ,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEjBL,EAAAA,QAAQ,EAAEX,SAAS,CAACe;AAFH,C;AADRV,O,CAMJY,Y,GAAe;AACpBN,EAAAA,QAAQ,EAAE;AADU,C;AA2BxB,eAAeN,OAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter';\r\nimport syntaxTheme from \"./HLTheme\";\r\nimport CardToolBar from './CardToolbar';\r\n\r\nexport class CodeBox extends PureComponent {\r\n  static propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    language: PropTypes.string\r\n  };\r\n\r\n  static defaultProps = {\r\n    language: null\r\n  };\r\n  \r\n  state = {\r\n    codeExpand: false\r\n  }\r\n\r\n  exapandCallBack = () => {\r\n    this.setState({codeExpand: !this.state.codeExpand})\r\n  }\r\n\r\n  render() {\r\n    const { language, value } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <CardToolBar code={value} expand={this.exapandCallBack} isExpand={this.state.codeExpand}/>\r\n        <div className={`code-box-highlight ${this.state.codeExpand? 'd-block':'d-none'}`} >\r\n          <SyntaxHighlighter language={language} style={syntaxTheme}>\r\n            {value}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CodeBox;\r\n"]},"metadata":{},"sourceType":"module"}