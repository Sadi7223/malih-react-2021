{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/form/InlineLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, Component } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nconst HorizontalLoginForm = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\n\n  useEffect(() => {\n    forceUpdate({});\n  }, []);\n\n  const onFinish = values => {\n    console.log('Finish:', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"horizontal_login\",\n    layout: \"inline\",\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 24\n        }, this),\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {\n          className: \"site-form-item-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }, this),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      shouldUpdate: true,\n      children: () => /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        disabled: !form.isFieldsTouched(true) || form.getFieldsError().filter(({\n          errors\n        }) => errors.length).length,\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HorizontalLoginForm, \"j776LVN3/olaSHEVTWG2ZYpTXx4=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = HorizontalLoginForm;\nexport class InlineLogin extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(HorizontalLoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default InlineLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalLoginForm\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/emilusAntTheme-main/Emilus - React Admin Template/demo/src/views/app-views/components/data-entry/form/InlineLogin.js"],"names":["React","useState","useEffect","Component","Form","Input","Button","UserOutlined","LockOutlined","HorizontalLoginForm","form","useForm","forceUpdate","onFinish","values","console","log","required","message","isFieldsTouched","getFieldsError","filter","errors","length","InlineLogin","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;;AAEA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,IAAD,IAASN,IAAI,CAACO,OAAL,EAAf;AACA,QAAM,GAAGC,WAAH,IAAkBX,QAAQ,EAAhC,CAFgC,CAEI;;AAEpCC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAAC,EAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,MAAvB;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEJ,IAAZ;AAAkB,IAAA,IAAI,EAAC,kBAAvB;AAA0C,IAAA,MAAM,EAAC,QAAjD;AAA0D,IAAA,QAAQ,EAAEG,QAApE;AAAA,4BACE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAE,CACL;AACEI,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA,6BASE,QAAC,KAAD;AAAO,QAAA,MAAM,eAAE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAAf;AAAiE,QAAA,WAAW,EAAC;AAA7E;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAFT;AAAA,6BASE,QAAC,KAAD;AACE,QAAA,MAAM,eAAE,QAAC,YAAD;AAAc,UAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADV;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,YAZF,eA2BE,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,YAAY,MAAvB;AAAA,gBACG,mBACC,QAAC,MAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,QAAQ,EAAC,QAFX;AAGE,QAAA,QAAQ,EACN,CAACR,IAAI,CAACS,eAAL,CAAqB,IAArB,CAAD,IACAT,IAAI,CAACU,cAAL,GAAsBC,MAAtB,CAA6B,CAAC;AAAEC,UAAAA;AAAF,SAAD,KAAgBA,MAAM,CAACC,MAApD,EAA4DA,MALhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CAxDD;;GAAMd,mB;UACWL,IAAI,CAACO,O;;;KADhBF,mB;AA0DN,OAAO,MAAMe,WAAN,SAA0BrB,SAA1B,CAAoC;AACzCsB,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AALwC;AAQ3C,eAAeD,WAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\n\r\nconst HorizontalLoginForm = () => {\r\n  const [form] = Form.useForm();\r\n  const [, forceUpdate] = useState(); // To disable submit button at the beginning.\r\n\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n  }, []);\r\n\r\n  const onFinish = values => {\r\n    console.log('Finish:', values);\r\n  };\r\n\r\n  return (\r\n    <Form form={form} name=\"horizontal_login\" layout=\"inline\" onFinish={onFinish}>\r\n      <Form.Item\r\n        name=\"username\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your username!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name=\"password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item shouldUpdate>\r\n        {() => (\r\n          <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            disabled={\r\n              !form.isFieldsTouched(true) ||\r\n              form.getFieldsError().filter(({ errors }) => errors.length).length\r\n            }\r\n          >\r\n            Log in\r\n          </Button>\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport class InlineLogin extends Component {\r\n  render() {\r\n    return (\r\n      <HorizontalLoginForm />\r\n    )\r\n  }\r\n}\r\n\r\nexport default InlineLogin\r\n"]},"metadata":{},"sourceType":"module"}