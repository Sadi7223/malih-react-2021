{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/ResizableColumn.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"antd\";\nimport { Resizable } from \"react-resizable\";\n\nconst ResizeableTitle = props => {\n  const {\n    onResize,\n    width,\n    ...restProps\n  } = props;\n\n  if (!width) {\n    return /*#__PURE__*/_jsxDEV(\"th\", { ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    width: width,\n    height: 0,\n    onResize: onResize,\n    draggableOpts: {\n      enableUserSelectHack: false\n    },\n    children: /*#__PURE__*/_jsxDEV(\"th\", { ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ResizeableTitle;\nexport class ResizableColumn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      columns: [{\n        title: 'Date',\n        dataIndex: 'date',\n        width: 200\n      }, {\n        title: 'Amount',\n        dataIndex: 'amount',\n        width: 100\n      }, {\n        title: 'Type',\n        dataIndex: 'type',\n        width: 100\n      }, {\n        title: 'Note',\n        dataIndex: 'note',\n        width: 100\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: () => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/#\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this)\n      }]\n    };\n    this.components = {\n      header: {\n        cell: ResizeableTitle\n      }\n    };\n    this.data = [{\n      key: 0,\n      date: '2018-02-11',\n      amount: 120,\n      type: 'income',\n      note: 'transfer'\n    }, {\n      key: 1,\n      date: '2018-03-11',\n      amount: 243,\n      type: 'income',\n      note: 'transfer'\n    }, {\n      key: 2,\n      date: '2018-04-11',\n      amount: 98,\n      type: 'income',\n      note: 'transfer'\n    }];\n\n    this.handleResize = index => (e, {\n      size\n    }) => {\n      this.setState(({\n        columns\n      }) => {\n        const nextColumns = [...columns];\n        nextColumns[index] = { ...nextColumns[index],\n          width: size.width\n        };\n        return {\n          columns: nextColumns\n        };\n      });\n    };\n  }\n\n  render() {\n    const columns = this.state.columns.map((col, index) => ({ ...col,\n      onHeaderCell: column => ({\n        width: column.width,\n        onResize: this.handleResize(index)\n      })\n    }));\n    return /*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      components: this.components,\n      columns: columns,\n      dataSource: this.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport default ResizableColumn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResizeableTitle\");","map":{"version":3,"sources":["/home/mathews/Reesby/React/NewMalihUI/src/views/app-views/components/data-display/table/ResizableColumn.js"],"names":["React","Component","Table","Resizable","ResizeableTitle","props","onResize","width","restProps","enableUserSelectHack","ResizableColumn","state","columns","title","dataIndex","key","render","components","header","cell","data","date","amount","type","note","handleResize","index","e","size","setState","nextColumns","map","col","onHeaderCell","column"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { Resizable } from \"react-resizable\";\r\n\r\nconst ResizeableTitle = props => {\r\n  const { onResize, width, ...restProps } = props;\r\n\r\n  if (!width) {\r\n    return <th {...restProps} />;\r\n  }\r\n\r\n  return (\r\n    <Resizable\r\n      width={width}\r\n      height={0}\r\n      onResize={onResize}\r\n      draggableOpts={{ enableUserSelectHack: false }}\r\n    >\r\n      <th {...restProps} />\r\n    </Resizable>\r\n  );\r\n};\r\n\r\nexport class ResizableColumn extends Component {\r\n  state = {\r\n    columns: [\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        width: 200,\r\n      },\r\n      {\r\n        title: 'Amount',\r\n        dataIndex: 'amount',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: 'Type',\r\n        dataIndex: 'type',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        width: 100,\r\n      },\r\n      {\r\n        title: 'Action',\r\n        key: 'action',\r\n        render: () => <a href=\"/#\">Delete</a>,\r\n      },\r\n    ],\r\n  };\r\n\r\n  components = {\r\n    header: {\r\n      cell: ResizeableTitle,\r\n    },\r\n  };\r\n\r\n  data = [\r\n    {\r\n      key: 0,\r\n      date: '2018-02-11',\r\n      amount: 120,\r\n      type: 'income',\r\n      note: 'transfer',\r\n    },\r\n    {\r\n      key: 1,\r\n      date: '2018-03-11',\r\n      amount: 243,\r\n      type: 'income',\r\n      note: 'transfer',\r\n    },\r\n    {\r\n      key: 2,\r\n      date: '2018-04-11',\r\n      amount: 98,\r\n      type: 'income',\r\n      note: 'transfer',\r\n    },\r\n  ];\r\n\r\n  handleResize = index => (e, { size }) => {\r\n    this.setState(({ columns }) => {\r\n      const nextColumns = [...columns];\r\n      nextColumns[index] = {\r\n        ...nextColumns[index],\r\n        width: size.width,\r\n      };\r\n      return { columns: nextColumns };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = this.state.columns.map((col, index) => ({\r\n      ...col,\r\n      onHeaderCell: column => ({\r\n        width: column.width,\r\n        onResize: this.handleResize(index),\r\n      }),\r\n    }));\r\n\r\n    return <Table bordered components={this.components} columns={columns} dataSource={this.data} />;\r\n  }\r\n}\r\n\r\nexport default ResizableColumn;\r\n"]},"metadata":{},"sourceType":"module"}